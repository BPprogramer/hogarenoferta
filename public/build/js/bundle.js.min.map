{"version":3,"sources":["clientes/clientes.js","categorias/categorias.js","cajas/cajas.js","fiados/cargar-clientes.js","fiados/fiados.js","inicio/index.js","mercado/infoVenta.js","mercado/mercadolibre.js","proveedores/proveedores.js","pagos/pagos.js","productos/avastesimiento.js","productos/precios-producto.js","productos/productos.js","productos/stock_productos.js","productos-ventas/index.js","usuarios/login.js","usuarios/usuario.js","transacciones/egresos.js","transacciones/ingresos.js","ventas/crear-ventas.js","ventas/info-venta.js","ventas/reporte-ventas-graficas.js","ventas/reporte-ventas.js","ventas/ventas.js"],"names":["document","querySelector","tablaClientes","id","btnRegistrarCliente","formulario","nombre","cedula","celular","direccion","email","accionesModal","reset","btnSubmit","disabled","$","modal","inicializarValidador","async","respuesta","fetch","resultado","value","llenarFormulario","json","error","console","log","consultarCliente","eliminarToastAnterior","remove","validator","setDefaults","submitHandler","datos","FormData","append","trim","url","location","origin","body","method","type","Toasts","class","title","msg","ajax","reload","setTimeout","enviarDatos","validate","rules","required","minlength","digits","rangelength","messages","errorElement","errorPlacement","element","addClass","closest","highlight","errorClass","validClass","unhighlight","removeClass","dataTable","fnDestroy","DataTable","deferRender","retrieve","proccesing","responsive","initComplete","fn","Buttons","buttons","container","appendTo","addEventListener","on","e","currentTarget","dataset","clienteId","cliente","parentElement","childNodes","textContent","Swal","fire","icon","html","showCancelButton","confirmButtonText","cancelButtonText","then","result","isConfirmed","eliminarCliente","alertaEliminarCliente","event","tablaCategorias","btnRegistrarCategoria","categoria","consultarCategoria","target","toUpperCase","categoriaId","eliminarCategoria","alertaEliminarCategoria","btnAbrirCaja","tablaCajas","efectivoAperturaInput","resetForm","destroy","find","parseFloat","toLocaleString","consultarCaja","efectivo_apertura","valor","valor_sin_formato","replace","isNaN","formatearValor","language","decimal","emptyTable","info","infoEmpty","infoFiltered","infoPostFix","thousands","lengthMenu","loadingRecords","processing","search","zeroRecords","paginate","first","last","next","previous","cajaId","eliminarCaja","alertaEliminarCaja","cerrarCaja","alertaCerrarCaja","selectClientes","opcionDisabled","createElement","appendChild","forEach","opcion","select2","theme","consultarCLientes","datosDeuda","monto","deuda","saldo","venta_id","ventasInpagas","idCliente","btnSumitPago","bodyFiados","totalDeuda","deudaActual","btnPagarTodo","saldoRestante","text","consultarInfoCliente","calcularSaldoRestante","customValidation","addMethod","param","notEqualChar","limpiarHtml","ventas_fiadas","length","total_deuda","venta_fiada","codigo","total_factura","recaudo","pagado","push","tr","tdCodigo","tdTotal","tdAbono","tdDeuda","tdEstado","divEstado","classList","add","btnEstado","tdInfo","divInfo","btnInfo","innerHTML","btnPagos","btnPagar","onclick","fiado","productos","codigoVenta","clienteVenta","fechaVenta","totalVenta","recaudoVenta","saldoVenta","nombre_cliente","fecha","total","bodyProductos","producto","cantidad","precio","tdNombre","tdCantidad","tdPrecio","tdSubTotal","mostrarInfoFiado","consultarInfoVentaFiada","pagos","bodyPagos","pago","payment_number","date","payment_amount","responsible","remaining_balance","tdPaymentNumber","tdDate","tdResponsible","tdPaymentAmount","tdRemainingaBalance","tdActions","divActions","btnDelete","eliminarPago","alertaEliminarPago","mostrarPagos","data","cosultarPagosVentaFianda","pagarVentaFiada","cliente_id","mostrarFiados","referencia","firstChild","removeChild","deudaSinFormat","monto_ingresado","total_ventas","total_recuados","costos","ganancia_no_realizada","ganancia_realizada","inventario","numero_ventas","numero_fiados","numero_pagos","numero_cajas","numero_productos","numero_clientes","total_recaudos","mostrarInfo","cargarInformacion","productos_venta","venta","totalVentaSinComision","metodoVenta","estadoVenta","metodo_pago","contains","estado","mostrarInfoVenta","consultarInfoVenta","ventaId","tablaMercadoLibre","pagosAuto","tablaProveedores","btnRegistrarProvedor","proveedorId","proveedor","eliminarProveedor","alertaEliminarProveedor","tablaProductos","formularioStock","nombre_producto","nuevo_stock","precio_paquete_nuevo","unidades_input_nuevo","precio_compra_nuevo","btnSubmitNewStock","calcularNuevoPrecioCompra","precio_paquete","unidades","precio_compra","Math","round","inicializarValidadorStock","idProductoActualizarStock","enviarDatosStock","tablaCompras","productoId","precio_compra_input","precio_venta_input","porcentaje_venta","precio_paquete_input","unidades_input","calcularPrecioCompra","calcularPorcentaje","precio_venta","porcentaje","toFixed","calcularPrecioVenta","btnRegistrarProducto","selectCategorias","selectProveedores","idCategoria","idProveedor","categoria_id","proveedor_id","stock","stock_minimo","consultarCategorias","categorias","selected","llenarSelectCategorias","consultarProveedores","proveedores","llenarSelectProveedores","consultarProducto","isDataTable","serverSide","order","mostrarProductos","eliminarProducto","alertaEliminarProducto","tablaProductosVendidos","input_fecha_inicial","input_fecha_final","fecha_actual","Date","fecha_final","getFullYear","getMonth","slice","getDate","setMonth","fecha_inicial","consultarProductosVendidos","dataFilter","jsonData","JSON","parse","newJson","row","index","parseInt","existe","indexProducto","stringify","dataType","success","req","resposeText","password","window","href","tablaUsuarios","btnRegistrarUsuario","roll","limpiarSelect","optionDisabledEstado","setAttribute","optionEstado","optionEstado1","optionDisabledRoll","optionRoll","optionRoll1","consultarUsuario","passwordRules","passwordMsg","terms","mostrarUsuarios","usuarioId","eliminarUsuario","alertaEliminarUsuario","btnRegistrarEgreso","tablaEgresos","egreso","descripcion","consultarEgreso","ingreso","egresoId","eliminarEgreso","alertaEliminarEgreso","btnRegistrarIngreso","tablaIngresos","consultarIngreso","ingresoId","eliminarIngreso","alertaEliminarIngreso","idAnterior","listadoProductos","productoObj","precio_original","valor_total","valoresObj","total_sin_descuento","total_pagar","descuento","costo","total_libre","focusCantidad","productosArray","guardarVentaBtn","totalInput","descuentoInput","totalPagarInput","medotodoPago","pagoContado","pagoCuotas","cantidadPagar","cantidadCambio","abono","nombreCliente","cedulaCliente","celularCliente","direccionCliente","emailCliente","bntAgregarCliente","btnQuitarCliente","contenedorCliente","codigoProducto","selectProductos","cargarCodigoVenta","codigo_venta","resetearCliente","val","trigger","contenedorProductos","rowDiv","col1Div","group1Div","prepend1Div","idProducto","filter","inputNombre","readOnly","col7Div","group7Div","prepend7Div","inputStock","col2Div","group2Div","prepend2Div","inputCantidad","focus","oninput","modificarTotalPorProducto","col3Div","group3Div","prepend3Div","inputPrecio","nuevo_precio_venta","col4Div","group4Div","prepend4Div","inputPrecioCantidad","resetarInputsMetodoPago","total_costo","Number","calcularTotal","parametro","aux","map","consultarInfoProducto","some","urlActual","URL","params","URLSearchParams","size","atob","get","productosVenta","productoVenta","precio_factura","cedula_cliente","celular_cliente","direccion_cliente","undefined","email_cliente","optionToSelect","llenarInformacion","consultarVenta","leerDatosUrl","preventDefault","miString","test","keyCode","productoSeleccionado","toLowerCase","productoPorCodigo","consultarProductos","valor_abono","resetearVentaAnterior","enviarInformacion","revisarVenta","cambio","mercadolibre","ventas","totalSInDescuento","fecha_actual_utc","fecha_actual_formateada","getTime","toISOString","llenarIputFecha","tablaVentas","idString","toString","btoa","revisarPagosAsociados","numero_venta","eliminarVenta","alertaEliminarVenta","open","imprimirVenta","mostrarVentas"],"mappings":"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","file":"bundle.js","sourcesContent":["(function(){\r\n    const categorias = document.querySelector('#clientes');\r\n    if(categorias){\r\n        let tablaClientes;\r\n        let id = null;\r\n        const btnRegistrarCliente = document.querySelector('#registrar');\r\n        const formulario = document.querySelector('#clienteForm');\r\n        const nombre = document.querySelector('#nombre');\r\n        const cedula = document.querySelector('#cedula');\r\n        const celular = document.querySelector('#celular');\r\n        const direccion = document.querySelector('#direccion');\r\n        const email = document.querySelector('#email');\r\n        mostrarClientes();\r\n \r\n\r\n        btnRegistrarCliente.addEventListener('click',function(){\r\n            id = null;\r\n            accionesModal();\r\n        })\r\n\r\n        $('#tabla').on('click', '#editar', function(e){\r\n            id=e.currentTarget.dataset.clienteId;\r\n            accionesModal();\r\n        })\r\n        $('#tabla').on('click', '#eliminar', function(e){\r\n            const idCliente = e.currentTarget.dataset.clienteId;\r\n            alertaEliminarCliente(idCliente,e);\r\n        })\r\n       \r\n        \r\n        function alertaEliminarCliente(id, e){\r\n  \r\n            const cliente = e.currentTarget.parentElement.parentElement.parentElement.childNodes[1].textContent;\r\n            \r\n            Swal.fire({\r\n                icon:'warning',\r\n                html: `<h2 class=\"\">esta seguro de eliminar al Cliente <span class=\"font-weight-bold\"> ${cliente} </span>?</h2><br><p>Esta acción no se puede deshacer</p>`,\r\n          \r\n                showCancelButton: true,\r\n                confirmButtonText: 'Eliminar',\r\n                cancelButtonText: `Cancelar`,\r\n                \r\n\r\n            }).then(result=>{\r\n                if(result.isConfirmed){\r\n                    eliminarCliente(id)\r\n                }\r\n            })\r\n        }\r\n        async function eliminarCliente(id){\r\n            const datos = new FormData();\r\n            datos.append('id', id);\r\n    \r\n            url = `${location.origin}/api/cliente/eliminar`;\r\n            try {\r\n                const respuesta = await fetch(url,{\r\n                    body:datos,\r\n                    method: 'POST'\r\n                })\r\n                const resultado = await respuesta.json();\r\n                \r\n                eliminarToastAnterior();\r\n            \r\n                if(resultado.type=='error'){\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n                     \r\n                        body: resultado.msg\r\n                      })\r\n                }else{\r\n\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-azul text-blanco',\r\n                        title: 'Completado',\r\n                        \r\n                        body: resultado.msg\r\n                    })\r\n\r\n                    setTimeout(()=>{\r\n                        eliminarToastAnterior();\r\n                    },8000)\r\n\r\n                 \r\n                    tablaClientes.ajax.reload(); \r\n                }\r\n            } catch (error) { \r\n                console.log(error) \r\n            }\r\n        }\r\n        function mostrarClientes(){\r\n      \r\n            $(\"#tabla\").dataTable().fnDestroy(); //por si me da error de reinicializar\r\n    \r\n            tablaClientes = $('#tabla').DataTable({\r\n                ajax: '/api/clientes',\r\n                \"deferRender\":true,\r\n                \"retrieve\":true,\r\n                \"proccesing\":true,\r\n                responsive:true,\r\n                initComplete: function () {\r\n                    // Inicializa los botones después de que la tabla se haya creado\r\n                    var buttons = new $.fn.dataTable.Buttons(tablaClientes, {\r\n                        buttons: [\"copy\", \"csv\", \"excel\", \"pdf\", \"print\"]\r\n                    }).container().appendTo('#tabla_wrapper .col-md-6:eq(0)');\r\n                }\r\n            });\r\n            \r\n            // $.ajax({\r\n            //     url:'/api/clientes',\r\n            //     dataType:'json',\r\n            //     success:function(req){\r\n            //         console.log(req)\r\n            //     },\r\n            //     error:function(error){\r\n            //         console.log(error.resposeText)\r\n            //     }\r\n            // })\r\n       \r\n        }  \r\n        \r\n\r\n        function accionesModal(){\r\n            formulario.reset();\r\n            btnSubmit.disabled = false;\r\n            $('#modal-cliente').modal('show');\r\n            inicializarValidador();\r\n            if(id){\r\n                consultarCliente();\r\n            }\r\n        }\r\n\r\n        async function consultarCliente(){\r\n            try {\r\n                const respuesta = await fetch(`/api/cliente?id=${id}`);\r\n                const resultado = await respuesta.json();\r\n            \r\n             \r\n                llenarFormulario(resultado);\r\n            } catch (error) {\r\n                console.log(error)\r\n            }\r\n        }\r\n        function llenarFormulario(resultado){\r\n           \r\n            nombre.value = resultado.nombre;\r\n            cedula.value = resultado.cedula;\r\n            celular.value = resultado.celular;\r\n            direccion.value = resultado.direccion;\r\n            email.value = resultado.email;\r\n           \r\n        }\r\n         \r\n\r\n        async function enviarDatos(){\r\n            const datos = new FormData();\r\n            if(id){\r\n                datos.append('id', id)\r\n            }\r\n            datos.append('nombre', (nombre.value).trim());\r\n            datos.append('cedula', (cedula.value));\r\n            datos.append('celular', (celular.value));\r\n            datos.append('direccion', (direccion.value).trim());\r\n            datos.append('email', (email.value).trim());\r\n           \r\n            \r\n            btnSubmit.disabled = true;\r\n\r\n      \r\n            let url = '';\r\n            if(id){\r\n                url = `${location.origin}/api/cliente/editar`;\r\n            }else{\r\n                url = `${location.origin}/api/cliente/crear`;\r\n            }\r\n            \r\n            try {\r\n                const respuesta = await fetch(url,{\r\n                    body:datos,\r\n                    method: 'POST'\r\n                })\r\n                const resultado = await respuesta.json();\r\n               \r\n              \r\n                eliminarToastAnterior();\r\n                btnSubmit.disabled = false;\r\n                if(resultado.type=='error'){\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n                     \r\n                        body: resultado.msg\r\n                      })\r\n                }else{\r\n                    tablaClientes.ajax.reload()\r\n\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-azul text-blanco',\r\n                        title: 'Completado',\r\n                        \r\n                        body: resultado.msg\r\n                    })\r\n\r\n                    setTimeout(()=>{\r\n                        eliminarToastAnterior();\r\n                    },4000)\r\n\r\n                    formulario.reset();\r\n\r\n                    $('#modal-cliente').modal('hide');\r\n         \r\n                }\r\n   \r\n            } catch (error) {  \r\n            }\r\n        }\r\n\r\n        function eliminarToastAnterior(){\r\n            if(document.querySelector('#toastsContainerTopRight')){\r\n                document.querySelector('#toastsContainerTopRight').remove()\r\n            }\r\n        }\r\n\r\n        function inicializarValidador() {\r\n            $.validator.setDefaults({\r\n              submitHandler: function () {\r\n                        enviarDatos();\r\n              }\r\n            });\r\n      \r\n           \r\n             $('#clienteForm').validate({\r\n              rules: {\r\n                nombre: {\r\n                    required: true,\r\n                    minlength: 6   \r\n                },\r\n                cedula: {\r\n                 \r\n                    digits:true,\r\n                    minlength: 6   \r\n                },\r\n                celular: {\r\n                \r\n                    digits:true,\r\n                    rangelength: [10, 10]   \r\n                },\r\n                email:{\r\n                    email:true,\r\n                }\r\n\r\n              },\r\n              messages: {\r\n                nombre: {\r\n                    required: \"El nombre es obligatorio\",\r\n                    minlength: \"Debe tener al menos 6 caracteres\"   \r\n                },\r\n                cedula: {\r\n                 \r\n                    digits: \"Solo valores númericos\",\r\n                    minlength:  \"Debe tener al menos 6 numeros\",\r\n                },\r\n                celular: {\r\n                 \r\n                    digits:\"solo valores numericos\",\r\n                    rangelength: \"Debe contener 10 números\" \r\n                },\r\n               \r\n                email:{\r\n                    email:\"el email no es valido\"\r\n                }\r\n              },\r\n              errorElement: 'span',\r\n              errorPlacement: function (error, element) {\r\n                error.addClass('invalid-feedback');\r\n                element.closest('.form-group').append(error);\r\n              },\r\n              highlight: function (element, errorClass, validClass) {\r\n                $(element).addClass('is-invalid');\r\n              },\r\n              unhighlight: function (element, errorClass, validClass) {\r\n                $(element).removeClass('is-invalid');\r\n              }\r\n            });\r\n          };\r\n          $('#clienteForm').on('valid', function(event) {\r\n            inicializarValidador();\r\n        });\r\n    }\r\n})();","(function(){\r\n    const categorias = document.querySelector('#categorias');\r\n    if(categorias){\r\n        let tablaCategorias;\r\n        let id = null;\r\n        let idCategoria = null;\r\n        let idProveedor = null;\r\n        const btnRegistrarCategoria = document.querySelector('#registrar');\r\n        const formulario = document.querySelector('#categoriaForm');\r\n        const categoria = document.querySelector('#categoria');\r\n        mostrarCategorias();\r\n\r\n\r\n\r\n        categoria.addEventListener('input',function(e){\r\n            categoria.value =  (e.target.value).toUpperCase();\r\n\r\n        })\r\n        btnRegistrarCategoria.addEventListener('click',function(){\r\n            id = null;\r\n            accionesModal();\r\n        })\r\n\r\n        \r\n        $('#tabla').on('click', '#editar', function(e){\r\n            id=e.currentTarget.dataset.categoriaId;\r\n            accionesModal();\r\n        })\r\n        $('#tabla').on('click', '#eliminar', function(e){\r\n            const idCategoria = e.currentTarget.dataset.categoriaId;\r\n            alertaEliminarCategoria(idCategoria,e);\r\n        })\r\n\r\n       \r\n     \r\n        \r\n        function alertaEliminarCategoria(id, e){\r\n  \r\n            const categoria = e.currentTarget.parentElement.parentElement.parentElement.childNodes[1].textContent;\r\n            \r\n            Swal.fire({\r\n                icon:'warning',\r\n                html: `<h2 class=\"\">esta seguro de eliminar la categoría <span class=\"font-weight-bold\"> ${categoria} </span>?</h2><br><p>Esta acción no se puede deshacer</p>`,\r\n          \r\n                showCancelButton: true,\r\n                confirmButtonText: 'Eliminar',\r\n                cancelButtonText: `Cancelar`,\r\n                \r\n\r\n            }).then(result=>{\r\n                if(result.isConfirmed){\r\n                    eliminarCategoria(id)\r\n                }\r\n            })\r\n        }\r\n        async function eliminarCategoria(id){\r\n            const datos = new FormData();\r\n            datos.append('id', id);\r\n    \r\n            url = `${location.origin}/api/categoria/eliminar`;\r\n            try {\r\n                const respuesta = await fetch(url,{\r\n                    body:datos,\r\n                    method: 'POST'\r\n                })\r\n                const resultado = await respuesta.json();\r\n                \r\n                eliminarToastAnterior();\r\n            \r\n                if(resultado.type=='error'){\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n                     \r\n                        body: resultado.msg\r\n                      })\r\n                }else{\r\n\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-azul text-blanco',\r\n                        title: 'Completado',\r\n                        \r\n                        body: resultado.msg\r\n                    })\r\n\r\n                    setTimeout(()=>{\r\n                        eliminarToastAnterior();\r\n                    },8000)\r\n\r\n                 \r\n                    tablaCategorias.ajax.reload(); \r\n                }\r\n            } catch (error) { \r\n                $(document).Toasts('create', {\r\n                    class: 'bg-danger',\r\n                    title: 'Error',\r\n                 \r\n                    body: 'No es Posible eliminar la cateogoría porque tiene productos  asociados'\r\n                  })\r\n\r\n                setTimeout(()=>{\r\n                    eliminarToastAnterior();\r\n                },8000)\r\n            }\r\n        }\r\n        function mostrarCategorias(){\r\n \r\n            $(\"#tabla\").dataTable().fnDestroy(); //por si me da error de reinicializar\r\n    \r\n            tablaCategorias = $('#tabla').DataTable({\r\n                ajax: '/api/categorias',\r\n                \"deferRender\":true,\r\n                \"retrieve\":true,\r\n                \"proccesing\":true,\r\n                responsive:true,\r\n                initComplete: function () {\r\n                    // Inicializa los botones después de que la tabla se haya creado\r\n                    var buttons = new $.fn.dataTable.Buttons(tablaCategorias, {\r\n                        buttons: [\"copy\", \"csv\", \"excel\", \"pdf\", \"print\"]\r\n                    }).container().appendTo('#tabla_wrapper .col-md-6:eq(0)');\r\n                }\r\n            });\r\n            \r\n            // $.ajax({\r\n            //     url:'/api/categorias',\r\n            //     dataType:'json',\r\n            //     success:function(req){\r\n            //         console.log(req)\r\n            //     },\r\n            //     error:function(error){\r\n            //         console.log(error.resposeText)\r\n            //     }\r\n            // })\r\n       \r\n        }  \r\n        \r\n\r\n        function accionesModal(){\r\n            formulario.reset();\r\n            btnSubmit.disabled = false;\r\n            $('#modal-categoria').modal('show');\r\n            inicializarValidador();\r\n            if(id){\r\n                consultarCategoria();\r\n            }\r\n        }\r\n\r\n        async function consultarCategoria(){\r\n            try {\r\n                const respuesta = await fetch(`/api/categoria?id=${id}`);\r\n                const resultado = await respuesta.json();\r\n            \r\n             \r\n                llenarFormulario(resultado);\r\n            } catch (error) {\r\n                console.log(error)\r\n            }\r\n        }\r\n        function llenarFormulario(resultado){\r\n           \r\n            categoria.value = resultado.categoria;\r\n           \r\n        }\r\n         \r\n\r\n        async function enviarDatos(){\r\n            const datos = new FormData();\r\n            if(id){\r\n                datos.append('id', id)\r\n            }\r\n            datos.append('categoria', (categoria.value).trim());\r\n           \r\n         \r\n            btnSubmit.disabled = true;\r\n            let url = '';\r\n            if(id){\r\n                url = `${location.origin}/api/categoria/editar`;\r\n            }else{\r\n                url = `${location.origin}/api/categoria/crear`;\r\n            }\r\n            \r\n            try {\r\n                const respuesta = await fetch(url,{\r\n                    body:datos,\r\n                    method: 'POST'\r\n                })\r\n                const resultado = await respuesta.json();\r\n               \r\n              ;\r\n                eliminarToastAnterior();\r\n                btnSubmit.disabled = false;\r\n                if(resultado.type=='error'){\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n                     \r\n                        body: resultado.msg\r\n                      })\r\n                }else{\r\n                    tablaCategorias.ajax.reload()\r\n\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-azul text-blanco',\r\n                        title: 'Completado',\r\n                        \r\n                        body: resultado.msg\r\n                    })\r\n\r\n                    setTimeout(()=>{\r\n                        eliminarToastAnterior();\r\n                    },4000)\r\n\r\n                    formulario.reset();\r\n\r\n                 \r\n                    $('#modal-categoria').modal('hide');\r\n                    //tablaCategorias.ajax.reload(); \r\n                }\r\n   \r\n            } catch (error) {  \r\n            }\r\n        }\r\n\r\n        function eliminarToastAnterior(){\r\n            if(document.querySelector('#toastsContainerTopRight')){\r\n                document.querySelector('#toastsContainerTopRight').remove()\r\n            }\r\n        }\r\n\r\n        function inicializarValidador() {\r\n            $.validator.setDefaults({\r\n              submitHandler: function () {\r\n                        enviarDatos();\r\n              }\r\n            });\r\n   \r\n            \r\n             $('#categoriaForm').validate({\r\n              rules: {\r\n                categoria: {\r\n                    required: true\r\n                }\r\n              },\r\n              messages: {\r\n                categoria: {\r\n                    required: \"El nombre de la categoría es obligatorio\"\r\n                }\r\n              },\r\n              errorElement: 'span',\r\n              errorPlacement: function (error, element) {\r\n                error.addClass('invalid-feedback');\r\n                element.closest('.form-group').append(error);\r\n              },\r\n              highlight: function (element, errorClass, validClass) {\r\n                $(element).addClass('is-invalid');\r\n              },\r\n              unhighlight: function (element, errorClass, validClass) {\r\n                $(element).removeClass('is-invalid');\r\n              }\r\n            });\r\n          };\r\n          $('#categoriaForm').on('valid', function(event) {\r\n            inicializarValidador();\r\n        });\r\n    }\r\n})();","(function(){\r\n    const cajas = document.querySelector('#cajas');\r\n    if(cajas){\r\n    \r\n        const btnAbrirCaja = document.querySelector('#registrar');\r\n        const formulario = document.querySelector('#cajaForm');\r\n        const btnSubmit = document.querySelector('#btnSubmit')\r\n\r\n        let tablaCajas;\r\n    \r\n        let id;\r\n        const efectivoAperturaInput = document.querySelector('#efectivo-apertura');\r\n\r\n        efectivoAperturaInput.addEventListener('input', function(e){\r\n            efectivoAperturaInput.value = formatearValor(e.target.value);\r\n        })\r\n\r\n        mostrarCajas();\r\n      \r\n\r\n        btnAbrirCaja.addEventListener('click',function(){\r\n            id = null;\r\n       \r\n            accionesModal();\r\n        })\r\n\r\n      $('#tabla').on('click', '#editar', function(e){\r\n \r\n            id=e.currentTarget.dataset.cajaId;\r\n       \r\n            accionesModal();\r\n        })\r\n\r\n   \r\n        $('#tabla').on('click', '#eliminar', function(e){\r\n            const id = e.currentTarget.dataset.cajaId;\r\n            alertaEliminarCaja(id,e);\r\n        }) \r\n        $('#tabla').on('click', '#cerrar', function(e){\r\n            const id = e.currentTarget.dataset.cajaId;\r\n            alertaCerrarCaja(id,e);\r\n        }) \r\n\r\n        function alertaEliminarCaja(id,e){\r\n            \r\n            const efectivo_apertura = e.currentTarget.parentElement.parentElement.parentElement.childNodes[2].textContent;\r\n           \r\n            \r\n            Swal.fire({\r\n                icon:'warning',\r\n                html: `<h2 class=\"\">esta seguro de eliminar esta caja la cual tiene una efectivo de apertura de  <span class=\"font-weight-bold\"> ${efectivo_apertura} </span>?</h2><br><p>Esta acción no se puede deshacer</p>`,\r\n          \r\n                showCancelButton: true,\r\n                confirmButtonText: 'Eliminar',\r\n                cancelButtonText: `Cancelar`,\r\n                \r\n\r\n            }).then(result=>{\r\n                if(result.isConfirmed){\r\n                    eliminarCaja(id)\r\n                }\r\n            })\r\n        }\r\n        function alertaCerrarCaja(id,e){\r\n  \r\n            Swal.fire({\r\n                icon:'warning',\r\n                html: `<h2 class=\"\">¿Está seguro de cerrar esta caja? </h2><br><p>Esta acción no se puede deshacer</p>`,\r\n          \r\n                showCancelButton: true,\r\n                confirmButtonText: 'Cerrar',\r\n                cancelButtonText: `Cancelar`,\r\n                \r\n\r\n            }).then(result=>{\r\n                if(result.isConfirmed){\r\n                    cerrarCaja(id)\r\n                }\r\n            })\r\n        }\r\n        async function cerrarCaja(id){\r\n           \r\n            const datos = new FormData();\r\n            datos.append('id', id);\r\n         \r\n    \r\n            url = `${location.origin}/api/caja/cerrar`;\r\n            try {\r\n                const respuesta = await fetch(url,{\r\n                    body:datos,\r\n                    method: 'POST'\r\n                })\r\n                const resultado = await respuesta.json();\r\n              \r\n              \r\n                eliminarToastAnterior();\r\n            \r\n                if(resultado.type=='error'){\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n                     \r\n                        body: resultado.msg\r\n                      })\r\n                }else{\r\n\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-azul text-blanco',\r\n                        title: 'Completado',\r\n                        \r\n                        body: resultado.msg\r\n                    })\r\n\r\n                    tablaCajas.ajax.reload(); \r\n                }\r\n                setTimeout(()=>{\r\n                    eliminarToastAnterior();\r\n                },8000)\r\n            } catch (error) { \r\n                \r\n            }\r\n        }\r\n        async function eliminarCaja(id){\r\n            const datos = new FormData();\r\n            datos.append('id', id);\r\n         \r\n    \r\n            url = `${location.origin}/api/caja/eliminar`;\r\n            try {\r\n                const respuesta = await fetch(url,{\r\n                    body:datos,\r\n                    method: 'POST'\r\n                })\r\n                const resultado = await respuesta.json();\r\n              \r\n                eliminarToastAnterior();\r\n            \r\n                if(resultado.type=='error'){\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n                     \r\n                        body: resultado.msg\r\n                      })\r\n                }else{\r\n\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-azul text-blanco',\r\n                        title: 'Completado',\r\n                        \r\n                        body: resultado.msg\r\n                    })\r\n\r\n                 \r\n\r\n                 \r\n                    tablaCajas.ajax.reload(); \r\n                }\r\n                setTimeout(()=>{\r\n                    eliminarToastAnterior();\r\n                },8000)\r\n            } catch (error) { \r\n                \r\n            }\r\n        }\r\n      \r\n\r\n        function mostrarCajas(){\r\n      \r\n            $(\"#tabla\").dataTable().fnDestroy(); //por si me da error de reinicializar\r\n    \r\n            tablaCajas = $('#tabla').DataTable({\r\n                language: {\r\n                    \"decimal\": \"\",\r\n                    \"emptyTable\": \"No hay información\",\r\n                    \"info\": \"Mostrando _START_ a _END_ de _TOTAL_ Entradas\",\r\n                    \"infoEmpty\": \"Mostrando 0 to 0 of 0 Entradas\",\r\n                    \"infoFiltered\": \"(Filtrado de _MAX_ total entradas)\",\r\n                    \"infoPostFix\": \"\",\r\n                    \"thousands\": \",\",\r\n                    \"lengthMenu\": \"Mostrar _MENU_ Entradas\",\r\n                    \"loadingRecords\": \"Cargando...\",\r\n                    \"processing\": \"Procesando...\",\r\n                    \"search\": \"Buscar:\",\r\n                    \"zeroRecords\": \"Sin resultados encontrados\",\r\n                    \"paginate\": {\r\n                        \"first\": \"Primero\",\r\n                        \"last\": \"Ultimo\",\r\n                        \"next\": \"Siguiente\",\r\n                        \"previous\": \"Anterior\"\r\n                    }\r\n                },\r\n                ajax: '/api/cajas',\r\n                \"deferRender\":true,\r\n                \"retrieve\":true,\r\n                \"proccesing\":true,\r\n                responsive:true\r\n            });\r\n            \r\n            // $.ajax({\r\n            //     url:'/api/cajas',\r\n            //     dataType:'json',\r\n            //     success:function(req){\r\n            //         console.log(req)\r\n            //     },\r\n            //     error:function(error){\r\n            //         console.log(error.resposeText)\r\n            //     }\r\n            // })\r\n       \r\n        }  \r\n\r\n\r\n\r\n        async function enviarDatos(){\r\n\r\n            const datos = new FormData();\r\n            if(id){\r\n                datos.append('id', id)\r\n            }\r\n            datos.append('efectivo_apertura', efectivoAperturaInput.value);\r\n\r\n        \r\n           btnSubmit.disabled = true;\r\n\r\n            let url = '';\r\n            if(id){\r\n                url = `${location.origin}/api/caja/editar`;\r\n            }else{\r\n                url = `${location.origin}/api/caja/crear`;\r\n            }\r\n\r\n            \r\n            try {\r\n                const respuesta = await fetch(url,{\r\n                    body:datos,\r\n                    method: 'POST'\r\n                })\r\n                const resultado = await respuesta.json();\r\n                \r\n          \r\n                eliminarToastAnterior();\r\n            \r\n                btnSubmit.disabled = false;\r\n                if(resultado.type=='error'){\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n                     \r\n                        body: resultado.msg\r\n                      })\r\n                      $('#modal-caja').modal('hide');\r\n                }else{\r\n                    tablaCajas.ajax.reload()\r\n\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-azul text-blanco',\r\n                        title: 'Completado',\r\n                        \r\n                        body: resultado.msg\r\n                    })\r\n\r\n                  \r\n\r\n                    formulario.reset();\r\n\r\n                    $('#modal-caja').modal('hide');\r\n         \r\n                }\r\n                setTimeout(()=>{\r\n                    eliminarToastAnterior();\r\n                },4000)\r\n   \r\n            } catch (error) {  \r\n            }\r\n        }\r\n\r\n        function eliminarToastAnterior(){\r\n            if(document.querySelector('#toastsContainerTopRight')){\r\n                document.querySelector('#toastsContainerTopRight').remove()\r\n            }\r\n        }\r\n\r\n        async function accionesModal(){\r\n            formulario.reset();\r\n            btnSubmit.disabled = false;\r\n            $('#modal-caja').modal('show');\r\n            $('#cajaForm').validate().resetForm();\r\n            // Elimina todas las reglas de validación\r\n            $('#cajaForm').validate().destroy();\r\n            // Elimina las clases de validación de los elementos\r\n            $('#cajaForm').find('.is-invalid').removeClass('is-invalid');\r\n            if(id){\r\n                consultarCaja();\r\n               \r\n            }\r\n           \r\n         \r\n     \r\n            inicializarValidador();\r\n       \r\n           \r\n        }\r\n\r\n        async function consultarCaja(){\r\n          \r\n            try {\r\n                const respuesta = await fetch(`/api/caja?id=${id}`);\r\n                const resultado = await respuesta.json();\r\n            \r\n           \r\n                llenarFormulario(resultado);\r\n            } catch (error) {\r\n                console.log(error)\r\n            }\r\n        }\r\n\r\n        function llenarFormulario(resultado){\r\n  \r\n\r\n            efectivoAperturaInput.value = (parseFloat(resultado)).toLocaleString('en');\r\n          \r\n        }\r\n        function inicializarValidador() {\r\n\r\n            $.validator.setDefaults({\r\n              submitHandler: function () {\r\n                        enviarDatos();\r\n                    \r\n              }\r\n            });\r\n      \r\n           \r\n             $('#cajaForm').validate({\r\n              rules: {\r\n                efectivo_apertura: {\r\n                    required: true\r\n                      \r\n                }\r\n              },\r\n              messages: {\r\n                efectivo_apertura: {\r\n                    required: \"El campo es obligatorio, si el efectivo inicial es cero porfavor digite 0\"  \r\n                }\r\n           \r\n\r\n              },\r\n              errorElement: 'span',\r\n              errorPlacement: function (error, element) {\r\n                error.addClass('invalid-feedback');\r\n                element.closest('.form-group').append(error);\r\n              },\r\n              highlight: function (element, errorClass, validClass) {\r\n                $(element).addClass('is-invalid');\r\n              },\r\n              unhighlight: function (element, errorClass, validClass) {\r\n                $(element).removeClass('is-invalid');\r\n              }\r\n            });\r\n          };\r\n          $('#cajaForm').on('valid', function(event) {\r\n            inicializarValidador();\r\n        });\r\n\r\n        // function llenarPrimerOption(referencia){\r\n        //     const optionDefault =  document.createElement('OPTION');\r\n        //     optionDefault.textContent = 'Seleccione';\r\n     \r\n         \r\n        //     optionDefault.value=0;\r\n        //     referencia.appendChild(optionDefault)\r\n        // }\r\n        function formatearValor(valor){\r\n           \r\n            let valor_sin_formato = parseFloat(valor.replace(/,/g, ''));\r\n            if(isNaN(valor_sin_formato)){\r\n                valor_sin_formato = '';\r\n            }\r\n            const valor_formateado =  valor_sin_formato.toLocaleString('en');\r\n            return valor_formateado ;\r\n        }\r\n        function eliminarToastAnterior(){\r\n            if(document.querySelector('#toastsContainerTopRight')){\r\n                document.querySelector('#toastsContainerTopRight').remove()\r\n            }\r\n        }\r\n        function limpiarHtml(referencia){\r\n            while(referencia.firstChild){\r\n                referencia.removeChild(referencia.firstChild);\r\n            }\r\n        }\r\n\r\n\r\n\r\n    }\r\n})();","(function(){\r\n    const seccionFiados = document.querySelector('#seccion-fiados');\r\n    if(seccionFiados){\r\n\r\n        const selectClientes = document.querySelector('#selectClientes');\r\n\r\n        consultarCLientes();\r\n\r\n        async function consultarCLientes(){\r\n            \r\n            \r\n            try {\r\n                const respuesta = await fetch(`${location.origin}/api/clientes-ventas-fiadas`);\r\n                const resultado =  await respuesta.json();\r\n\r\n       \r\n               \r\n                // llenarPrimerOption(selectCategorias);\r\n                const opcionDisabled =   document.createElement('OPTION');\r\n                opcionDisabled.textContent = '--seleccione un cliente--';\r\n                opcionDisabled.value = \"0\";/*  */\r\n\r\n                selectClientes.appendChild(opcionDisabled);\r\n            \r\n                resultado.forEach(cliente => {\r\n                    \r\n                    const opcion =   document.createElement('OPTION');\r\n                    opcion.value = cliente.id;\r\n                    opcion.textContent = cliente.nombre;\r\n                   \r\n                    selectClientes.appendChild(opcion)\r\n            \r\n                });\r\n         \r\n                $('#selectClientes').select2()\r\n                $('.select2bs4').select2({\r\n                    theme: 'bootstrap4'\r\n                })\r\n            } catch (error) {\r\n                console.log(error)\r\n            }\r\n            $('#selectProductos').select2()\r\n            $('.select2bs4').select2({\r\n                theme: 'bootstrap4'\r\n            })\r\n        \r\n       \r\n        }  \r\n    }\r\n})();","(function () {\r\n    const seccionFiados = document.querySelector('#seccion-fiados');\r\n\r\n\r\n    if (seccionFiados) {\r\n\r\n        let datosDeuda = {\r\n            monto: 0,\r\n            deuda: 0,\r\n            saldo: 0,\r\n            venta_id: ''\r\n        }\r\n\r\n        let ventasInpagas = [];\r\n        let idCliente = '';\r\n        const btnSumitPago = document.querySelector('#btnSubmitPago');\r\n\r\n        const bodyFiados = document.querySelector('#body-fiados');\r\n\r\n        const totalDeuda = document.querySelector('#total-deuda');\r\n        const btnPagar = document.querySelector('#pagar');\r\n        const formulario = document.querySelector('#pagoForm')\r\n\r\n        const deudaActual = document.querySelector('#deuda-actual');\r\n        const btnPagarTodo = document.querySelector('#pagar-todo');\r\n        const monto = document.querySelector('#monto');\r\n        const saldoRestante = document.querySelector('#saldo-restante');\r\n\r\n        btnPagarTodo.addEventListener('click', function () {\r\n            datosDeuda.monto = datosDeuda.deuda\r\n            monto.value = parseFloat(datosDeuda.monto).toLocaleString('en');\r\n            calcularSaldoRestante()\r\n        })\r\n\r\n        monto.addEventListener('input', function (e) {\r\n\r\n            const valor = e.target.value;\r\n\r\n            let deudaSinFormat = parseFloat(valor.replace(/,/g, ''));\r\n\r\n            if (deudaSinFormat == '') {\r\n                deudaSinFormat = 0;\r\n            }\r\n            datosDeuda.monto = deudaSinFormat;\r\n            calcularSaldoRestante()\r\n            const monto_ingresado = formatearValor(valor);\r\n\r\n\r\n            monto.value = monto_ingresado;\r\n\r\n        })\r\n\r\n\r\n        $('#selectClientes').on('select2:select', function (e) {\r\n            if (e.target.value != 0) {\r\n\r\n                consultarInfoCliente(e.target.value);\r\n            } else {\r\n                //resetearCliente();\r\n            }\r\n        });\r\n        // btnPagar.addEventListener('click', function () {\r\n        //     id = null;\r\n        //     accionesModal();\r\n        // })\r\n\r\n\r\n        /* funcion para validar que el monto a pagar no sea mayor que el monto de la deuda */\r\n        function validarMontoYSaldo() {\r\n            if (datosDeuda.saldo < 0) {\r\n\r\n                return false;\r\n            }\r\n            return true\r\n        }\r\n\r\n        async function enviarDatos() {\r\n\r\n            const esValido = validarMontoYSaldo()\r\n            if (!esValido) {\r\n                Swal.fire({\r\n                    icon: 'warning',\r\n                    text: 'El monto a pagar no puede superar el valor de la deuda',\r\n                })\r\n                return;\r\n            }\r\n\r\n\r\n            const datos = new FormData();\r\n            datos.append('venta_id', datosDeuda.venta_id);\r\n            datos.append('monto', datosDeuda.monto);\r\n            btnSumitPago.disabled = true;\r\n            const url = `${location.origin}/api/pagar`;\r\n            try {\r\n                const respuesta = await fetch(url, {\r\n                    method: 'POST',\r\n                    body: datos\r\n                });\r\n                const resultado = await respuesta.json();\r\n\r\n                btnSumitPago.disabled = false;\r\n                $('#modal-pago').modal('hide');\r\n                eliminarToastAnterior();\r\n\r\n                if (resultado.type == 'error') {\r\n\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n\r\n                        body: resultado.msg\r\n                    })\r\n\r\n                } else {\r\n\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-azul text-blanco',\r\n                        title: 'Completado',\r\n\r\n                        body: resultado.msg\r\n                    })\r\n                    consultarInfoCliente(idCliente)\r\n                }\r\n                setTimeout(() => {\r\n                    eliminarToastAnterior();\r\n                }, 8000)\r\n            } catch (error) {\r\n\r\n            }\r\n\r\n        }\r\n\r\n        function calcularSaldoRestante() {\r\n            datosDeuda.saldo = datosDeuda.deuda - datosDeuda.monto;\r\n            if (isNaN(datosDeuda.saldo)) {\r\n                datosDeuda.saldo = datosDeuda.deuda;\r\n            }\r\n            saldoRestante.textContent = '$' + parseFloat(datosDeuda.saldo).toLocaleString('en')\r\n        }\r\n\r\n        function accionesModal() {\r\n\r\n            formulario.reset();\r\n\r\n            btnSumitPago.disabled = false;\r\n            console.log(datosDeuda)\r\n\r\n            deudaActual.value = parseFloat(datosDeuda.deuda).toLocaleString('en')\r\n            saldoRestante.textContent = \"$\" + parseFloat(datosDeuda.saldo).toLocaleString('en');\r\n            inicializarValidador();\r\n\r\n\r\n\r\n        }\r\n\r\n\r\n\r\n\r\n        async function consultarInfoCliente(id) {\r\n            idCliente = id;\r\n\r\n            try {\r\n                saldoRestante.textContent = '$0';\r\n                const respuesta = await fetch(`${location.origin}/api/pagos-cuotas?id=${id}`);\r\n\r\n                const resultado = await respuesta.json();\r\n\r\n\r\n\r\n                limpiarHtml(bodyFiados);\r\n\r\n                if (resultado.ventas_fiadas.length == 0) {\r\n                    Swal.fire({\r\n                        icon: 'warning',\r\n                        text: 'No hay fiados para este cliente',\r\n                    })\r\n                    totalDeuda.textContent = 0;\r\n                    datosDeuda.deuda = 0;\r\n                    datosDeuda.monto = 0;\r\n                    datosDeuda.saldo = 0;\r\n\r\n\r\n                } else {\r\n                    const { ventas_fiadas } = resultado;\r\n                    mostrarFiados(ventas_fiadas);\r\n\r\n                }\r\n\r\n            } catch (error) {\r\n\r\n                console.log(error)\r\n            }\r\n        }\r\n\r\n\r\n\r\n\r\n        function alertaEliminarPago(pago) {\r\n\r\n\r\n            Swal.fire({\r\n                icon: 'warning',\r\n                html: `<h2 class=\"\">esta seguro de eliminar el pago número ${pago.payment_number} por un valor de <span class=\"font-weight-bold\"> ${(parseFloat(pago.payment_amount)).toLocaleString('en')} </span>?</h2><br><p>Esta acción no se puede deshacer</p>`,\r\n\r\n                showCancelButton: true,\r\n                confirmButtonText: 'Eliminar',\r\n                cancelButtonText: `Cancelar`,\r\n\r\n\r\n            }).then(result => {\r\n                if (result.isConfirmed) {\r\n                    eliminarPago(pago)\r\n                }\r\n            })\r\n        }\r\n\r\n        async function eliminarPago(pago) {\r\n\r\n            const datos = new FormData();\r\n            datos.append('id', pago.id);\r\n            const url = `${location.origin}/api/eliminar-pago`;\r\n            try {\r\n                const respuesta = await fetch(url, {\r\n                    method: 'POST',\r\n                    body: datos\r\n                })\r\n                const resultado = await respuesta.json();\r\n\r\n\r\n\r\n                eliminarToastAnterior();\r\n\r\n                if (resultado.type == 'error') {\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n\r\n                        body: resultado.msg\r\n                    })\r\n                } else {\r\n\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-azul text-blanco',\r\n                        title: 'Completado',\r\n\r\n                        body: resultado.msg\r\n                    })\r\n                    $('#modal-pagos').modal('hide');\r\n                    consultarInfoCliente(idCliente)\r\n\r\n                }\r\n\r\n                setTimeout(() => {\r\n                    eliminarToastAnterior();\r\n                }, 8000)\r\n            } catch (error) {\r\n\r\n            }\r\n        }\r\n\r\n\r\n        function mostrarFiados(ventas_fiadas) {\r\n\r\n            let total_deuda = 0;\r\n\r\n            ventas_fiadas.forEach(venta_fiada => {\r\n\r\n                const { codigo, total_factura, recaudo, pagado } = venta_fiada;\r\n\r\n                if (pagado != 0) {\r\n                    ventasInpagas.push();\r\n                }\r\n\r\n                const tr = document.createElement('TR');\r\n\r\n                const tdCodigo = document.createElement('TD');\r\n                tdCodigo.textContent = '#' + codigo;\r\n\r\n                const tdTotal = document.createElement('TD');\r\n                tdTotal.textContent = '$' + parseFloat(total_factura).toLocaleString('en');\r\n\r\n                const tdAbono = document.createElement('TD');\r\n                tdAbono.textContent = '$' + parseFloat(recaudo).toLocaleString('en');\r\n\r\n                const tdDeuda = document.createElement('TD');\r\n                tdDeuda.textContent = '$' + parseFloat(total_factura - recaudo).toLocaleString('en');\r\n\r\n                const tdEstado = document.createElement('TD');\r\n\r\n                const divEstado = document.createElement('DIV');\r\n                divEstado.classList.add('d-flex', 'justify-content-left', 'text-center');\r\n\r\n                const btnEstado = document.createElement('BUTTON');\r\n                btnEstado.type = 'button'\r\n\r\n                btnEstado.classList.add('btn', 'w-40', 'btn-inline', 'btn-sm');\r\n\r\n                if (pagado == 0) {\r\n                    total_deuda = total_deuda + parseFloat(total_factura) - parseFloat(recaudo);\r\n                    btnEstado.textContent = 'Pendiente';\r\n                    btnEstado.classList.add('btn-danger');\r\n                } else {\r\n                    btnEstado.textContent = 'Pagado';\r\n                    btnEstado.classList.add('bg-azul', 'text-white');\r\n                }\r\n\r\n\r\n\r\n                divEstado.appendChild(btnEstado);\r\n                tdEstado.appendChild(divEstado);\r\n\r\n                const tdInfo = document.createElement('TD');\r\n                const divInfo = document.createElement('DIV');\r\n                divInfo.classList.add('d-flex', 'justify-content-start');\r\n\r\n                const btnInfo = document.createElement('BUTTON');\r\n                btnInfo.type = 'button'\r\n                btnInfo.classList.add('btn', 'btn-sm', 'bg-hover-azul', 'text-white', 'toolMio', 'mr-2');\r\n                btnInfo.innerHTML = '<span class=\"toolMio-text\">Ver venta</span><i class=\"fas fa-search\"></i>';\r\n                const btnPagos = document.createElement('BUTTON');\r\n                btnPagos.type = 'button'\r\n                btnPagos.classList.add('btn', 'btn-sm', 'bg-hover-azul', 'text-white', 'toolMio', 'mr-2');\r\n                btnPagos.innerHTML = '<span class=\"toolMio-text\">Pagos</span><i class=\"fas fa-money-bill-wave\"></i>  ';\r\n\r\n                const btnPagar = document.createElement('BUTTON');\r\n                btnPagar.type = 'button'\r\n                btnPagar.classList.add('btn', 'btn-sm', 'bg-hover-azul', 'text-white', 'toolMio');\r\n                btnPagar.innerHTML = '<span class=\"toolMio-text\">Pagar</span><i class=\"fas fa-coins\"></i>  ';\r\n\r\n                btnInfo.onclick = () => {\r\n                    consultarInfoVentaFiada(venta_fiada); //consultamos la ifnromacion de la venta normal\r\n                }\r\n                btnPagos.onclick = () => {\r\n                    cosultarPagosVentaFianda(venta_fiada); //consultamos los pagos que se han hecho a esta venta\r\n                }\r\n                btnPagar.onclick = () => {\r\n                    pagarVentaFiada(venta_fiada); //consultamos los pagos que se han hecho a esta venta\r\n                }\r\n\r\n                divInfo.appendChild(btnInfo);\r\n                divInfo.appendChild(btnPagos);\r\n                divInfo.appendChild(btnPagar);\r\n                tdInfo.appendChild(divInfo);\r\n\r\n                tr.appendChild(tdCodigo)\r\n                tr.appendChild(tdTotal)\r\n                tr.appendChild(tdAbono)\r\n                tr.appendChild(tdDeuda)\r\n                tr.appendChild(tdEstado)\r\n                tr.appendChild(tdInfo);\r\n                bodyFiados.appendChild(tr);\r\n                datosDeuda.cliente_id = venta_fiada.cliente_id;\r\n            });\r\n            totalDeuda.textContent = parseFloat(total_deuda).toLocaleString('en')\r\n            datosDeuda.deuda = total_deuda;\r\n            datosDeuda.saldo = total_deuda;\r\n\r\n        }\r\n\r\n\r\n\r\n        function mostrarInfoFiado(fiado, productos) {\r\n\r\n\r\n            const codigoVenta = document.querySelector('#codigo-venta');\r\n            const clienteVenta = document.querySelector('#cliente-venta');\r\n            const fechaVenta = document.querySelector('#fecha-venta');\r\n\r\n            const totalVenta = document.querySelector('#total-venta');\r\n            const recaudoVenta = document.querySelector('#recaudo-venta');\r\n            const saldoVenta = document.querySelector('#saldo-venta');\r\n\r\n            codigoVenta.textContent = fiado.codigo\r\n            clienteVenta.textContent = fiado.nombre_cliente\r\n            fechaVenta.textContent = fiado.fecha\r\n            totalVenta.textContent = (parseFloat(fiado.total)).toLocaleString('en');\r\n            recaudoVenta.textContent = (parseFloat(fiado.recaudo)).toLocaleString('en');\r\n            saldoVenta.textContent = (parseFloat(fiado.total - fiado.recaudo)).toLocaleString('en');\r\n\r\n            const bodyProductos = document.querySelector('#body-productos-fiados');\r\n            limpiarHtml(bodyProductos);\r\n\r\n            productos.forEach(producto => {\r\n                const { nombre, cantidad, precio } = producto\r\n                const tr = document.createElement('TR');\r\n                const tdNombre = document.createElement('td');\r\n                tdNombre.textContent = nombre;\r\n                const tdCantidad = document.createElement('td')\r\n                tdCantidad.textContent = cantidad;\r\n                const tdPrecio = document.createElement('td');\r\n                tdPrecio.textContent = (parseFloat(precio)).toLocaleString('en');\r\n                const tdSubTotal = document.createElement('td');\r\n                tdSubTotal.textContent = (parseFloat(precio * cantidad)).toLocaleString('en');\r\n\r\n\r\n                tr.appendChild(tdNombre)\r\n                tr.appendChild(tdCantidad)\r\n                tr.appendChild(tdPrecio)\r\n                tr.appendChild(tdSubTotal)\r\n\r\n                bodyProductos.appendChild(tr);\r\n            })\r\n\r\n        }\r\n\r\n        /* para mostrar los pagos relacionados a una venta */\r\n        function mostrarPagos(venta_fiada, pagos) {\r\n            const bodyPagos = document.querySelector('#body-pagos');\r\n            limpiarHtml(bodyPagos);\r\n            pagos.forEach(pago => {\r\n                const { payment_number, date, payment_amount, responsible, remaining_balance } = pago;\r\n\r\n                const tr = document.createElement('TR');\r\n\r\n                const tdPaymentNumber = document.createElement('TD');\r\n                tdPaymentNumber.textContent = '#' + payment_number;\r\n\r\n                const tdDate = document.createElement('TD');\r\n                tdDate.textContent = date;\r\n                const tdResponsible = document.createElement('TD');\r\n                tdResponsible.textContent = responsible.nombre;\r\n\r\n\r\n                const tdPaymentAmount = document.createElement('TD');\r\n                tdPaymentAmount.textContent = '$' + parseFloat(payment_amount).toLocaleString('en');\r\n\r\n                const tdRemainingaBalance = document.createElement('TD');\r\n                tdRemainingaBalance.textContent = '$' + parseFloat(remaining_balance).toLocaleString('en');\r\n\r\n\r\n\r\n                const tdActions = document.createElement('TD');\r\n                const divActions = document.createElement('DIV');\r\n                divActions.classList.add('d-flex', 'ustify-content-start');\r\n\r\n\r\n                const btnDelete = document.createElement('BUTTON');\r\n                btnDelete.type = 'button'\r\n                btnDelete.classList.add('btn', 'btn-sm', 'bg-hover-azul', 'text-white', 'toolMio');\r\n                btnDelete.innerHTML = '<span class=\"toolMio-text\">Eliminar</span><i class=\"fas fa-trash\"></i>';\r\n\r\n                btnDelete.onclick = function () {\r\n                    //eliminarPago(pago.numero_pago); //vamos a revisar que la \r\n                    alertaEliminarPago(pago);\r\n                }\r\n                // divActions.appendChild(btnInfo);\r\n                divActions.appendChild(btnDelete);\r\n                tdActions.appendChild(divActions);\r\n\r\n                tr.appendChild(tdPaymentNumber)\r\n                tr.appendChild(tdDate)\r\n                tr.appendChild(tdResponsible)\r\n                tr.appendChild(tdPaymentAmount)\r\n                tr.appendChild(tdRemainingaBalance)\r\n\r\n\r\n                tr.appendChild(tdActions);\r\n                bodyPagos.appendChild(tr);\r\n\r\n            });\r\n\r\n        }\r\n\r\n        async function consultarInfoVentaFiada(venta_fiada) {\r\n\r\n            $('#modal-info').modal('show');\r\n\r\n            try {\r\n                const respuesta = await fetch(`${location.origin}/api/productos-fiados?venta_id=${venta_fiada.id}`);\r\n                const resultado = await respuesta.json();\r\n\r\n                if (resultado.type == 'error') {\r\n                    Swal.fire({\r\n                        icon: 'error',\r\n                        text: resultado.msg,\r\n                    })\r\n                } else {\r\n\r\n                    mostrarInfoFiado(venta_fiada, resultado)\r\n                }\r\n            } catch (error) {\r\n\r\n            }\r\n\r\n\r\n\r\n        }\r\n        async function cosultarPagosVentaFianda(venta_fiada) {\r\n\r\n\r\n            try {\r\n\r\n                const respuesta = await fetch(`${location.origin}/api/pagos-por-venta?venta_id=${venta_fiada.id}`);\r\n                const resultado = await respuesta.json();\r\n\r\n\r\n                if (resultado.type == 'error') {\r\n                    Swal.fire({\r\n                        icon: 'error',\r\n                        text: resultado.msg,\r\n                    })\r\n                } else {\r\n\r\n                    $('#modal-pagos').modal('show');\r\n                    mostrarPagos(venta_fiada, resultado.data)\r\n                }\r\n            } catch (error) {\r\n\r\n            }\r\n\r\n        }\r\n        async function pagarVentaFiada(venta_fiada) {\r\n\r\n            const { total_factura, recaudo, id, pagado } = venta_fiada\r\n            if (pagado == 1) {\r\n                Swal.fire({\r\n                    icon: 'warning',\r\n                    text: 'Esta venta ya se encuentra pagada en su totalidad',\r\n                })\r\n            } else {\r\n                $('#modal-pago').modal('show');\r\n                datosDeuda.deuda = total_factura - recaudo\r\n                datosDeuda.saldo = total_factura - recaudo\r\n                datosDeuda.venta_id = id\r\n\r\n                accionesModal()\r\n            }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n        }\r\n\r\n        function formatearValor(valor) {\r\n\r\n            let valor_sin_formato = parseFloat(valor.replace(/,/g, ''));\r\n            if (isNaN(valor_sin_formato)) {\r\n                valor_sin_formato = '';\r\n            }\r\n            const valor_formateado = valor_sin_formato.toLocaleString('en');\r\n            return valor_formateado;\r\n        }\r\n\r\n\r\n\r\n        function limpiarHtml(referencia) {\r\n\r\n            while (referencia.firstChild) {\r\n                referencia.removeChild(referencia.firstChild)\r\n            }\r\n        }\r\n\r\n\r\n        function inicializarValidador() {\r\n            $.validator.setDefaults({\r\n                submitHandler: function () {\r\n                    enviarDatos();\r\n                }\r\n            });\r\n\r\n            // Función para validar que el valor sea diferente de \"0\"\r\n            function notEqualChar(value, element, param) {\r\n                return value !== param;\r\n            }\r\n\r\n            $('#pagoForm').validate({\r\n                rules: {\r\n                    monto: {\r\n                        required: true,\r\n                        customValidation: '0' // Carácter que se debe evitar\r\n                    }\r\n                },\r\n                messages: {\r\n                    monto: {\r\n                        required: 'El monto a pagar es obligatorio',\r\n                        customValidation: 'El monto no puede ser igual a \"0\"'\r\n                    }\r\n                },\r\n                errorElement: 'span',\r\n                errorPlacement: function (error, element) {\r\n                    error.addClass('invalid-feedback');\r\n                    element.closest('.form-group').append(error);\r\n                },\r\n                highlight: function (element, errorClass, validClass) {\r\n                    $(element).addClass('is-invalid');\r\n                },\r\n                unhighlight: function (element, errorClass, validClass) {\r\n                    $(element).removeClass('is-invalid');\r\n                }\r\n            });\r\n\r\n            // Agregar la regla personalizada utilizando la función\r\n            $.validator.addMethod('customValidation', function (value, element) {\r\n                return notEqualChar(value, element, '0');\r\n            }, 'Este campo no puede ser igual a \"0\"');\r\n        }\r\n\r\n        function eliminarToastAnterior() {\r\n            if (document.querySelector('#toastsContainerTopRight')) {\r\n                document.querySelector('#toastsContainerTopRight').remove()\r\n            }\r\n        }\r\n\r\n        // // Llamar a la función de inicialización al cargar la página\r\n        // $(document).ready(function () {\r\n        //     inicializarValidador();\r\n        // });\r\n\r\n        // // Volver a inicializar el validador cuando se detecta que el formulario es válido\r\n        // $('#pagoForm').on('valid', function (event) {\r\n        //     inicializarValidador();\r\n        // });\r\n\r\n    }\r\n\r\n\r\n})();","(function () {\r\n    const inicio = document.querySelector('#inicio');\r\n    if (inicio) {\r\n\r\n        const total_ventas = document.querySelector('#inicio_total_ventas')\r\n        const total_recuados = document.querySelector('#inicio_total_recaudos')\r\n        const costos = document.querySelector('#inicio_costos')\r\n        const ganancia_no_realizada = document.querySelector('#inicio_ganancia_no_realizada')\r\n        const ganancia_realizada = document.querySelector('#inicio_ganancia_realizada')\r\n        const inventario = document.querySelector('#inicio_inventario')\r\n        const numero_ventas = document.querySelector('#inicio_numero_ventas')\r\n        const numero_fiados = document.querySelector('#inicio_numero_fiados')\r\n        const numero_pagos = document.querySelector('#inicio_numero_pagos')\r\n        const numero_cajas = document.querySelector('#inicio_numero_cajas')\r\n        const numero_productos = document.querySelector('#inicio_numero_productos')\r\n        const numero_clientes = document.querySelector('#inicio_numero_clientes')\r\n\r\n\r\n\r\n        cargarInformacion();\r\n\r\n        function mostrarInfo(resultado) {\r\n           \r\n\r\n\r\n            total_ventas.textContent = resultado.total_ventas\r\n            total_recuados.textContent = resultado.total_recaudos\r\n            costos.textContent = resultado.costos\r\n            ganancia_no_realizada.textContent = resultado.ganancia_no_realizada\r\n            ganancia_realizada.textContent = resultado.ganancia_realizada\r\n            inventario.textContent = resultado.inventario\r\n            numero_ventas.textContent = resultado.numero_ventas\r\n            numero_fiados.textContent = resultado.numero_fiados\r\n            numero_pagos.textContent = resultado.numero_pagos\r\n            numero_cajas.textContent = resultado.numero_cajas\r\n            numero_productos.textContent = resultado.numero_productos\r\n            numero_clientes.textContent = resultado.numero_clientes\r\n       \r\n\r\n        }\r\n\r\n        async function cargarInformacion() {\r\n            const url = `${location.origin}/api/inicio`;\r\n            try {\r\n                const respuesta = await fetch(url);\r\n                const resultado = await respuesta.json();\r\n                mostrarInfo(resultado);\r\n            } catch (error) {\r\n                console.log(error)\r\n            }\r\n        }\r\n    }\r\n})();","(function () {\r\n    const ventas = document.querySelector('#mercadolibre');\r\n    if (ventas) {\r\n\r\n        $('#tabla').on('click', '#info', function (e) {\r\n            const ventaId = e.currentTarget.dataset.ventaId;\r\n            \r\n            consultarInfoVenta(ventaId);\r\n        })\r\n        async function consultarInfoVenta(id) {\r\n            $('#modal-info').modal('show');\r\n\r\n            const url = `${location.origin}/api/venta?id=${id}`;\r\n            try {\r\n                const respuesta = await fetch(url);\r\n                const resultado = await respuesta.json();\r\n                mostrarInfoVenta(resultado);\r\n            } catch (error) {\r\n\r\n            }\r\n\r\n\r\n\r\n        }\r\n\r\n        function mostrarInfoVenta(resultado) {\r\n            const { productos_venta , venta} = resultado\r\n      \r\n            const codigoVenta = document.querySelector('#codigo-venta');\r\n            const clienteVenta = document.querySelector('#cliente-venta');\r\n            const fechaVenta = document.querySelector('#fecha-venta');\r\n\r\n            const totalVenta = document.querySelector('#total-venta');\r\n            const totalVentaSinComision = document.querySelector('#total-sin-comision');\r\n            const recaudoVenta = document.querySelector('#recaudo-venta');\r\n            const saldoVenta = document.querySelector('#saldo-venta');\r\n            const metodoVenta = document.querySelector('#metodo-venta');\r\n            const estadoVenta = document.querySelector('#estado-venta');\r\n            \r\n            codigoVenta.textContent = venta.codigo\r\n            clienteVenta.textContent = venta.nombre_cliente\r\n            fechaVenta.textContent = venta.fecha\r\n            totalVenta.textContent = (parseFloat(venta.total_factura)).toLocaleString('en');\r\n            totalVentaSinComision.textContent = (parseFloat(venta.total)).toLocaleString('en');\r\n            recaudoVenta.textContent = (parseFloat(venta.recaudo)).toLocaleString('en');\r\n            saldoVenta.textContent = (parseFloat(venta.total_factura - venta.recaudo)).toLocaleString('en');\r\n\r\n         \r\n            if(venta.metodo_pago==2){\r\n                metodoVenta.textContent = 'Fiado'\r\n            }\r\n            if(venta.metodo_pago==3){\r\n                metodoVenta.textContent = 'Mercado Libre'\r\n            }\r\n            if(venta.metodo_pago==1){\r\n                metodoVenta.textContent = 'De Contado'\r\n            }\r\n            if(estadoVenta.classList.contains('text-danger')){\r\n                estadoVenta.classList.remove('text-danger')\r\n            }\r\n            if(estadoVenta.classList.contains('text-success')){\r\n                estadoVenta.classList.remove('text-success')\r\n            }\r\n            if(venta.estado==0){\r\n                estadoVenta.textContent = 'Pendiente'\r\n                estadoVenta.classList.add('text-danger')\r\n            }else{\r\n                estadoVenta.textContent = 'Pagado'\r\n                estadoVenta.classList.add('text-success')\r\n            }\r\n\r\n            \r\n            const bodyProductos = document.querySelector('#body-productos-venta');\r\n            limpiarHtml(bodyProductos);\r\n\r\n         \r\n\r\n         \r\n            productos_venta.forEach(producto => {\r\n                const { nombre, cantidad, precio } = producto\r\n                const tr = document.createElement('TR');\r\n                const tdNombre = document.createElement('td');\r\n                tdNombre.textContent = nombre;\r\n                const tdCantidad = document.createElement('td')\r\n                tdCantidad.textContent = cantidad;\r\n                const tdPrecio = document.createElement('td');\r\n                tdPrecio.textContent = (parseFloat(precio)).toLocaleString('en');\r\n                const tdSubTotal = document.createElement('td');\r\n                tdSubTotal.textContent = (parseFloat(precio * cantidad)).toLocaleString('en');\r\n\r\n\r\n                tr.appendChild(tdNombre)\r\n                tr.appendChild(tdCantidad)\r\n                tr.appendChild(tdPrecio)\r\n                tr.appendChild(tdSubTotal)\r\n\r\n                bodyProductos.appendChild(tr);\r\n            })\r\n            \r\n        }\r\n        function limpiarHtml(referencia) {\r\n\r\n            while (referencia.firstChild) {\r\n                referencia.removeChild(referencia.firstChild)\r\n            }\r\n        }\r\n    }\r\n})();","(function(){\r\n    const mercadolibre = document.querySelector('#mercadolibre');\r\n    if(mercadolibre){\r\n\r\n        let tablaMercadoLibre\r\n\r\n         pagosAuto();\r\n         mostrarVentas()\r\n\r\n        async function pagosAuto(){\r\n       \r\n            try {\r\n                const respuesta = await fetch(`${location.origin}/api/pagos-auto`);\r\n                // const resultado = await respuesta.json();\r\n        \r\n               \r\n            } catch (error) {\r\n                \r\n            }\r\n        }\r\n\r\n\r\n        function mostrarVentas(){\r\n \r\n            $(\"#tabla\").dataTable().fnDestroy(); //por si me da error de reinicializar\r\n    \r\n            tablaMercadoLibre = $('#tabla').DataTable({\r\n                ajax: '/api/mercadolibre',\r\n                \"deferRender\":true,\r\n                \"retrieve\":true,\r\n                \"proccesing\":true,\r\n                responsive:true,\r\n                initComplete: function () {\r\n                    // Inicializa los botones después de que la tabla se haya creado\r\n                    var buttons = new $.fn.dataTable.Buttons(tablaMercadoLibre, {\r\n                        buttons: [\"copy\", \"csv\", \"excel\", \"pdf\", \"print\"]\r\n                    }).container().appendTo('#tabla_wrapper .col-md-6:eq(0)');\r\n                }\r\n            });\r\n            \r\n            // $.ajax({\r\n            //     url:'/api/mercadolibre',\r\n            //     dataType:'json',\r\n            //     success:function(req){\r\n            //         console.log(req)\r\n            //     },\r\n            //     error:function(error){\r\n            //         console.log(error.resposeText)\r\n            //     }\r\n            // })\r\n       \r\n        }  \r\n        \r\n    }\r\n})();","(function(){\r\n    const categorias = document.querySelector('#proveedores');\r\n    if(categorias){\r\n        let tablaProveedores;\r\n        let id = null;\r\n        const btnRegistrarProvedor = document.querySelector('#registrar');\r\n        const formulario = document.querySelector('#proveedorForm');\r\n        const nombre = document.querySelector('#nombre');\r\n        const cedula = document.querySelector('#cedula');\r\n        const celular = document.querySelector('#celular');\r\n        const direccion = document.querySelector('#direccion');\r\n        const email = document.querySelector('#email');\r\n        mostrarProveedores();\r\n\r\n        nombre.addEventListener('input',function(e){\r\n            nombre.value =  (e.target.value).toUpperCase();\r\n\r\n        })\r\n\r\n        btnRegistrarProvedor.addEventListener('click',function(){\r\n            id = null;\r\n            accionesModal();\r\n        })\r\n\r\n        $('#tabla').on('click', '#editar', function(e){\r\n            id=e.currentTarget.dataset.proveedorId;\r\n            accionesModal();\r\n        })\r\n        $('#tabla').on('click', '#eliminar', function(e){\r\n            const idProveedor = e.currentTarget.dataset.proveedorId;\r\n            alertaEliminarProveedor(idProveedor,e);\r\n        })\r\n\r\n        \r\n     \r\n        \r\n        function alertaEliminarProveedor(id, e){\r\n  \r\n            const proveedor = e.currentTarget.parentElement.parentElement.parentElement.childNodes[1].textContent;\r\n            \r\n            Swal.fire({\r\n                icon:'warning',\r\n                html: `<h2 class=\"\">esta seguro de eliminar al Proveedor <span class=\"font-weight-bold\"> ${proveedor} </span>?</h2><br><p>Esta acción no se puede deshacer</p>`,\r\n          \r\n                showCancelButton: true,\r\n                confirmButtonText: 'Eliminar',\r\n                cancelButtonText: `Cancelar`,\r\n                \r\n\r\n            }).then(result=>{\r\n                if(result.isConfirmed){\r\n                    eliminarProveedor(id)\r\n                }\r\n            })\r\n        }\r\n        async function eliminarProveedor(id){\r\n            const datos = new FormData();\r\n            datos.append('id', id);\r\n    \r\n            url = `${location.origin}/api/proveedor/eliminar`;\r\n            try {\r\n                const respuesta = await fetch(url,{\r\n                    body:datos,\r\n                    method: 'POST'\r\n                })\r\n                const resultado = await respuesta.json();\r\n                \r\n                eliminarToastAnterior();\r\n            \r\n                if(resultado.type=='error'){\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n                     \r\n                        body: resultado.msg\r\n                      })\r\n                      setTimeout(()=>{\r\n                        eliminarToastAnterior();\r\n                    },4000)\r\n                }else{\r\n\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-azul text-blanco',\r\n                        title: 'Completado',\r\n                        \r\n                        body: resultado.msg\r\n                    })\r\n\r\n                    setTimeout(()=>{\r\n                        eliminarToastAnterior();\r\n                    },8000)\r\n\r\n                 \r\n                    tablaProveedores.ajax.reload(); \r\n                }\r\n            } catch (error) { \r\n                console.log(error) \r\n            }\r\n        }\r\n        function mostrarProveedores(){\r\n      \r\n            // $(\"#tabla\").dataTable().fnDestroy(); //por si me da error de reinicializar\r\n    \r\n            tablaProveedores = $('#tabla').DataTable({\r\n                ajax: '/api/proveedores',\r\n                \"deferRender\":true,\r\n                \"retrieve\":true,\r\n                \"proccesing\":true,\r\n                responsive:true,\r\n                initComplete: function () {\r\n                    // Inicializa los botones después de que la tabla se haya creado\r\n                    var buttons = new $.fn.dataTable.Buttons(tablaProveedores, {\r\n                        buttons: [\"copy\", \"csv\", \"excel\", \"pdf\", \"print\"]\r\n                    }).container().appendTo('#tabla_wrapper .col-md-6:eq(0)');\r\n                }\r\n            });\r\n            \r\n            // $.ajax({\r\n            //     url:'/api/proveedores',\r\n            //     dataType:'json',\r\n            //     success:function(req){\r\n            //         console.log(req)\r\n            //     },\r\n            //     error:function(error){\r\n            //         console.log(error.resposeText)\r\n            //     }\r\n            // })\r\n       \r\n        }  \r\n        \r\n\r\n        function accionesModal(){\r\n            formulario.reset();\r\n            btnSubmit.disabled = false;\r\n            $('#modal-proveedor').modal('show');\r\n       \r\n            inicializarValidador();\r\n            if(id){\r\n                consultarCliente();\r\n            }\r\n        }\r\n\r\n        async function consultarCliente(){\r\n            try {\r\n                const respuesta = await fetch(`/api/proveedor?id=${id}`);\r\n                const resultado = await respuesta.json();\r\n                \r\n             \r\n                llenarFormulario(resultado);\r\n            } catch (error) {\r\n                console.log(error)\r\n            }\r\n        }\r\n        function llenarFormulario(resultado){\r\n           \r\n            nombre.value = resultado.nombre;\r\n            celular.value = resultado.celular;\r\n            direccion.value = resultado.direccion;\r\n      \r\n           \r\n        }\r\n         \r\n\r\n        async function enviarDatos(){\r\n            const datos = new FormData();\r\n            if(id){\r\n                datos.append('id', id)\r\n            }\r\n            datos.append('nombre', (nombre.value).trim());\r\n            datos.append('celular', (celular.value));\r\n            datos.append('direccion', (direccion.value).trim());\r\n\r\n\r\n          \r\n            \r\n            btnSubmit.disabled = true;\r\n\r\n      \r\n            let url = '';\r\n            if(id){\r\n                url = `${location.origin}/api/proveedor/editar`;\r\n            }else{\r\n                url = `${location.origin}/api/proveedor/crear`;\r\n            }\r\n            \r\n            try {\r\n                const respuesta = await fetch(url,{\r\n                    body:datos,\r\n                    method: 'POST'\r\n                })\r\n                const resultado = await respuesta.json();\r\n               \r\n              \r\n                eliminarToastAnterior();\r\n                btnSubmit.disabled = false;\r\n                if(resultado.type=='error'){\r\n               \r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n                     \r\n                        body: resultado.msg\r\n                    })\r\n                  \r\n                    setTimeout(()=>{\r\n                        eliminarToastAnterior();\r\n                    },0)\r\n                }else{\r\n                    tablaProveedores.ajax.reload()\r\n              \r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-azul text-blanco',\r\n                        title: 'Completado',\r\n                        \r\n                        body: resultado.msg\r\n                    })\r\n\r\n                    setTimeout(()=>{\r\n                        eliminarToastAnterior();\r\n                    },4000)\r\n\r\n                    formulario.reset();\r\n\r\n                    $('#modal-proveedor').modal('hide');\r\n         \r\n                }\r\n   \r\n            } catch (error) {  \r\n                console.log('error')\r\n                // $(document).Toasts('create', {\r\n                //     class: 'bg-danger',\r\n                //     title: 'Error',\r\n                 \r\n                //     body: 'No es Posible eliminar el proveedor porque tiene productos  asociados'\r\n                //   })\r\n\r\n                // setTimeout(()=>{\r\n                //     eliminarToastAnterior();\r\n                // },8000) \r\n            }\r\n        }\r\n\r\n        function eliminarToastAnterior(){\r\n            if(document.querySelector('#toastsContainerTopRight')){\r\n                document.querySelector('#toastsContainerTopRight').remove()\r\n            }\r\n        }\r\n\r\n        function inicializarValidador() {\r\n        \r\n            $.validator.setDefaults({\r\n              submitHandler: function () {\r\n                        enviarDatos();\r\n              }\r\n            });\r\n      \r\n           \r\n             $('#proveedorForm').validate({\r\n              rules: {\r\n                nombre: {\r\n                    required: true,\r\n                    minlength: 2  \r\n                },\r\n                celular: {\r\n             \r\n                    digits:true,\r\n                    rangelength: [10, 10]   \r\n                }\r\n              \r\n\r\n              },\r\n              messages: {\r\n                nombre: {\r\n                    required: \"El nombre es obligatorio\",\r\n                    minlength: \"Debe tener al menos 2 caracteres\"   \r\n                },\r\n                celular: {\r\n            \r\n                    digits: \"Solo valores númericos\",\r\n                    rangelength:  \"el número de celular debe tener 10 digitos\"\r\n                }\r\n              \r\n              },\r\n              errorElement: 'span',\r\n              errorPlacement: function (error, element) {\r\n                error.addClass('invalid-feedback');\r\n                element.closest('.form-group').append(error);\r\n              },\r\n              highlight: function (element, errorClass, validClass) {\r\n                $(element).addClass('is-invalid');\r\n              },\r\n              unhighlight: function (element, errorClass, validClass) {\r\n                $(element).removeClass('is-invalid');\r\n              }\r\n            });\r\n          };\r\n          $('#proveedorForm').on('valid', function(event) {\r\n            inicializarValidador();\r\n        });\r\n    }\r\n})();","(function(){\r\n    const pagos = document.querySelector('#pagos');\r\n    if(pagos){\r\n   \r\n\r\n\r\n        let tablaProductos;\r\n    \r\n\r\n        mostrarProductos();\r\n\r\n        function mostrarProductos(){\r\n      \r\n           $(\"#tabla\").dataTable().fnDestroy(); //por si me da error de reinicializar\r\n    \r\n            tablaProductos = $('#tabla').DataTable({\r\n                language: {\r\n                    \"decimal\": \"\",\r\n                    \"emptyTable\": \"No hay información\",\r\n                    \"info\": \"Mostrando _START_ a _END_ de _TOTAL_ Entradas\",\r\n                    \"infoEmpty\": \"Mostrando 0 to 0 of 0 Entradas\",\r\n                    \"infoFiltered\": \"(Filtrado de _MAX_ total entradas)\",\r\n                    \"infoPostFix\": \"\",\r\n                    \"thousands\": \",\",\r\n                    \"lengthMenu\": \"Mostrar _MENU_ Entradas\",\r\n                    \"loadingRecords\": \"Cargando...\",\r\n                    \"processing\": \"Procesando...\",\r\n                    \"search\": \"Buscar:\",\r\n                    \"zeroRecords\": \"Sin resultados encontrados\",\r\n                    \"paginate\": {\r\n                        \"first\": \"Primero\",\r\n                        \"last\": \"Ultimo\",\r\n                        \"next\": \"Siguiente\",\r\n                        \"previous\": \"Anterior\"\r\n                    }\r\n                },\r\n                ajax: '/api/pagos',\r\n                \"deferRender\":true,\r\n                \"retrieve\":true,\r\n                \"proccesing\":true,\r\n                responsive:true\r\n                \r\n            });\r\n      \r\n            // $.ajax({\r\n            //     url:'/api/pagos',\r\n            //     dataType:'json',\r\n            //     success:function(req){\r\n            //         console.log('consulado req')\r\n            //         console.log(req)\r\n            //     },\r\n            //     error:function(error){\r\n            //          console.log('consulado erros')\r\n            //         console.log(error)\r\n            //     }\r\n            // })\r\n       \r\n        }  \r\n\r\n        /* consultar Categorias */\r\n     \r\n    \r\n    \r\n\r\n     \r\n\r\n\r\n     \r\n\r\n    \r\n       \r\n\r\n\r\n    }\r\n})();","(function(){\r\n    const compras = document.querySelector('#compras');\r\n    if(compras){\r\n        let tablaProductosVendidos;\r\n        const formularioStock = document.querySelector('#stockForm');\r\n        const nombre_producto = document.querySelector('#nombre_producto');\r\n        const nuevo_stock = document.querySelector('#nuevo_stock');\r\n        const precio_paquete_nuevo = document.querySelector('#precio_paquete_nuevo');\r\n        const unidades_input_nuevo = document.querySelector('#unidades_nuevo');\r\n        const precio_compra_nuevo = document.querySelector('#precio_compra_nuevo');\r\n        const btnSubmitNewStock = document.querySelector('#btnSubmitNewStock');\r\n        consultarProductos();\r\n\r\n        $('#tabla').on('click', '#agregar_stock', function(e){\r\n           \r\n            idProductoActualizarStock = e.currentTarget.dataset.productoId;\r\n            formularioStock.reset();\r\n            btnSubmitNewStock.disabled = false;\r\n            $('#modal-stock').modal('show');\r\n            $('#stockForm').validate().resetForm();\r\n            // Elimina todas las reglas de validación\r\n            $('#stockForm').validate().destroy();\r\n            // Elimina las clases de validación de los elementos\r\n            $('#stockForm').find('.is-invalid').removeClass('is-invalid');\r\n  \r\n \r\n            const nombre = e.currentTarget.parentElement.parentElement.parentElement.childNodes[1].textContent;\r\n            nombre_producto.value = nombre;\r\n            inicializarValidadorStock();\r\n        })\r\n\r\n        precio_paquete_nuevo.addEventListener('input',function(e){\r\n            const precio_paquete = formatearValor(e.target.value);\r\n            precio_paquete_nuevo.value = precio_paquete;\r\n            calcularNuevoPrecioCompra();\r\n        })\r\n        unidades_input_nuevo.addEventListener('input',function(e){\r\n            \r\n            calcularNuevoPrecioCompra();\r\n        })\r\n\r\n        precio_compra_nuevo.addEventListener('input',function(e){\r\n            const precio_compra = formatearValor(e.target.value);\r\n            precio_compra_nuevo.value = precio_compra;\r\n        \r\n        })\r\n\r\n\r\n\r\n       \r\n        function consultarProductos(){\r\n \r\n            $(\"#tabla\").dataTable().fnDestroy(); //por si me da error de reinicializar\r\n    \r\n            tablaCompras = $('#tabla').DataTable({\r\n                ajax: '/api/compras',\r\n                \"deferRender\":true,\r\n                \"retrieve\":true,\r\n                \"proccesing\":true,\r\n                responsive:true,\r\n                initComplete: function () {\r\n                    // Inicializa los botones después de que la tabla se haya creado\r\n                    var buttons = new $.fn.dataTable.Buttons(tablaCompras, {\r\n                        buttons: [\"copy\", \"csv\", \"excel\", \"pdf\", \"print\", \"colvis\"]\r\n                    }).container().appendTo('#tabla_wrapper .col-md-6:eq(0)');\r\n                }\r\n            });\r\n            \r\n       \r\n       \r\n        }\r\n        function calcularNuevoPrecioCompra(){\r\n            precio_compra_nuevo.value = '';\r\n    \r\n            const precio_paquete = parseFloat((precio_paquete_nuevo.value).replace(/,/g, ''));\r\n            const unidades = parseFloat(unidades_input_nuevo.value);\r\n            if(isNaN(precio_paquete) || isNaN(unidades)){\r\n                return;\r\n            }\r\n            const precio_compra = precio_paquete/unidades;\r\n            precio_compra_nuevo.value = (Math.round(precio_compra)).toLocaleString('en')\r\n        }\r\n\r\n        function formatearValor(valor){\r\n           \r\n            let valor_sin_formato = parseFloat(valor.replace(/,/g, ''));\r\n            if(isNaN(valor_sin_formato)){\r\n                valor_sin_formato = '';\r\n            }\r\n            const valor_formateado =  valor_sin_formato.toLocaleString('en');\r\n            return valor_formateado ;\r\n        }\r\n        async function enviarDatosStock(){\r\n            const datos = new FormData();\r\n     \r\n            datos.append('id', idProductoActualizarStock)\r\n            datos.append('stock', (nuevo_stock.value));\r\n            datos.append('precio_compra', (precio_compra_nuevo.value));\r\n\r\n           btnSubmitNewStock.disabled = true;\r\n\r\n            const url = `${location.origin}/api/producto/editar-stock`;\r\n        \r\n            \r\n            \r\n            try {\r\n                const respuesta = await fetch(url,{\r\n                    body:datos,\r\n                    method: 'POST'\r\n                })\r\n                const resultado = await respuesta.json();\r\n          \r\n          \r\n                eliminarToastAnterior();\r\n         \r\n                btnSubmitNewStock.disabled = false;\r\n              \r\n                if(resultado.type=='error'){\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n                     \r\n                        body: resultado.msg\r\n                      })\r\n                }else{\r\n                   \r\n                    $(\"#tabla\").DataTable().ajax.reload();\r\n               \r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-azul text-blanco',\r\n                        title: 'Completado',\r\n                        \r\n                        body: resultado.msg\r\n                    })\r\n\r\n                    setTimeout(()=>{\r\n                        eliminarToastAnterior();\r\n                    },4000)\r\n\r\n                    formularioStock.reset();\r\n\r\n                    $('#modal-stock').modal('hide');\r\n         \r\n                }\r\n   \r\n            } catch (error) {  \r\n            }\r\n        }\r\n        \r\n        function inicializarValidadorStock(id) {\r\n            $.validator.setDefaults({\r\n              submitHandler: function () {\r\n                enviarDatosStock()\r\n         \r\n              }\r\n            });\r\n      \r\n             $('#stockForm').validate({\r\n              rules: {\r\n                \r\n               \r\n                nuevo_stock: {\r\n                    required: true\r\n                },\r\n               \r\n                precio_compra_nuevo:{\r\n                    required: true\r\n                }\r\n              },\r\n              messages: {\r\n                nuevo_stock: {\r\n                    required: \"El nombre es obligatorio\"  \r\n                },\r\n                precio_compra_nuevo: {\r\n                    required: 'la nueva cantidad adquirida es obligatoria'\r\n                }\r\n\r\n              },\r\n              errorElement: 'span',\r\n              errorPlacement: function (error, element) {\r\n                error.addClass('invalid-feedback');\r\n                element.closest('.form-group').append(error);\r\n              },\r\n              highlight: function (element, errorClass, validClass) {\r\n                $(element).addClass('is-invalid');\r\n              },\r\n              unhighlight: function (element, errorClass, validClass) {\r\n                $(element).removeClass('is-invalid');\r\n              }\r\n            });\r\n          };\r\n          $('#stockForm').on('valid', function(event) {\r\n            inicializarValidadorStock();\r\n        });\r\n        function eliminarToastAnterior(){\r\n            if(document.querySelector('#toastsContainerTopRight')){\r\n                document.querySelector('#toastsContainerTopRight').remove()\r\n            }\r\n        }\r\n    }\r\n})();","(function () {\r\n    const productos = document.querySelector('#productos');\r\n    if (productos) {\r\n        const precio_compra_input = document.querySelector('#precio_compra');\r\n        const precio_venta_input = document.querySelector('#precio_venta');\r\n        const porcentaje_venta = document.querySelector('#porcentaje_venta');\r\n        const precio_paquete_input = document.querySelector('#precio_paquete');\r\n        const unidades_input = document.querySelector('#unidades');\r\n        precio_compra_input.addEventListener('input', function (e) {\r\n            const precio_compra = formatearValor(e.target.value);\r\n            precio_compra_input.value = precio_compra;\r\n            calcularPorcentaje()\r\n        })\r\n        precio_venta_input.addEventListener('input', function (e) {\r\n            const precio_compra = formatearValor(e.target.value);\r\n            precio_venta_input.value = precio_compra;\r\n            calcularPorcentaje();\r\n\r\n        })\r\n        porcentaje_venta.addEventListener('input', function (e) {\r\n            calcularPrecioVenta(e.target.value);\r\n\r\n\r\n        })\r\n        precio_paquete_input.addEventListener('input', function (e) {\r\n            const precio_paquete = formatearValor(e.target.value);\r\n            precio_paquete_input.value = precio_paquete;\r\n            calcularPrecioCompra();\r\n        })\r\n        unidades_input.addEventListener('input', function (e) {\r\n\r\n            calcularPrecioCompra();\r\n        })\r\n\r\n        function calcularPrecioCompra() {\r\n            precio_compra_input.value = '';\r\n            precio_venta_input.value = '';\r\n            porcentaje_venta.value = '';\r\n            const precio_paquete = parseFloat((precio_paquete_input.value).replace(/,/g, ''));\r\n            const unidades = parseFloat(unidades_input.value);\r\n            if (isNaN(precio_paquete) || isNaN(unidades)) {\r\n                return;\r\n            }\r\n            const precio_compra = precio_paquete / unidades;\r\n            precio_compra_input.value = (Math.round(precio_compra)).toLocaleString('en')\r\n            // calcularPrecioVenta(porcentaje_venta.input);\r\n            // calcularPorcentaje();\r\n\r\n        }\r\n\r\n\r\n        // function calcularPrecioVenta(porcentaje){\r\n        //     const precio_compra = parseFloat((precio_compra_input.value).replace(/,/g, ''));\r\n\r\n        //     if(isNaN(precio_compra)){\r\n        //         return;\r\n        //     }\r\n        //     const precio_venta = parseFloat(porcentaje)*precio_compra/100;\r\n        //     precio_venta_input.value = (Math.round(precio_venta / 100) * 100).toLocaleString('en')\r\n        // }\r\n\r\n        function calcularPrecioVenta(porcentaje) {\r\n            const precio_compra = parseFloat((precio_compra_input.value).replace(/,/g, ''));\r\n\r\n            if (isNaN(precio_compra)) {\r\n                return;\r\n            }\r\n\r\n            // Fórmula correcta: precio_venta = precio_compra + (precio_compra * porcentaje / 100)\r\n            const precio_venta = precio_compra + (precio_compra * parseFloat(porcentaje) / 100);\r\n\r\n            // Redondear al múltiplo de 100 más cercano y formatear con comas\r\n            precio_venta_input.value = (Math.round(precio_venta / 100) * 100).toLocaleString('en');\r\n        }\r\n\r\n\r\n        function calcularPorcentaje() {\r\n\r\n            const precio_compra = parseFloat((precio_compra_input.value).replace(/,/g, ''));\r\n            const precio_venta = parseFloat((precio_venta_input.value).replace(/,/g, ''));\r\n            if (isNaN(precio_compra) || isNaN(precio_venta)) {\r\n                return;\r\n            }\r\n            const porcentaje = ((precio_venta - precio_compra) * 100) / precio_compra;\r\n            porcentaje_venta.value = porcentaje.toFixed(2)\r\n        }\r\n\r\n        function formatearValor(valor) {\r\n\r\n            let valor_sin_formato = parseFloat(valor.replace(/,/g, ''));\r\n            if (isNaN(valor_sin_formato)) {\r\n                valor_sin_formato = '';\r\n            }\r\n            const valor_formateado = valor_sin_formato.toLocaleString('en');\r\n            return valor_formateado;\r\n        }\r\n\r\n    }\r\n})();","(function () {\r\n    const productos = document.querySelector('#productos');\r\n    if (productos) {\r\n        const btnRegistrarProducto = document.querySelector('#registrar');\r\n        const formulario = document.querySelector('#productoForm');\r\n        const selectCategorias = document.querySelector('#categoria_id');\r\n        const selectProveedores = document.querySelector('#proveedor_id');\r\n        let formularioValidador;\r\n        let idCategoria = null;\r\n        let idProveedor = null;\r\n        let tablaProductos;\r\n        /* inputs del formulario */\r\n        let id;\r\n        const nombre = document.querySelector('#nombre');\r\n        const codigo = document.querySelector('#codigo');\r\n        const categoria_id = document.querySelector('#categoria_id');\r\n        const proveedor_id = document.querySelector('#proveedor_id');\r\n        const stock = document.querySelector('#stock');\r\n        const stock_minimo = document.querySelector('#stock_minimo');\r\n        const precio_compra = document.querySelector('#precio_compra');\r\n        const precio_venta = document.querySelector('#precio_venta');\r\n        const porcentaje_venta = document.querySelector('#porcentaje_venta');\r\n\r\n        const btnSubmit = document.querySelector('#btnSubmit');\r\n        btnSubmit.addEventListener('click', function () {\r\n            //agregar validacion para el input cateogria_id y proveedor_id\r\n        })\r\n\r\n        mostrarProductos();\r\n        //convertir el nombre a mayusculas\r\n        nombre.addEventListener('input', function (e) {\r\n            nombre.value = (e.target.value).toUpperCase();\r\n\r\n        })\r\n\r\n        btnRegistrarProducto.addEventListener('click', function () {\r\n            id = null;\r\n            idCategoria = null;\r\n            idProveedor = null;\r\n            accionesModal();\r\n        })\r\n\r\n        $('#tabla').on('click', '#editar', function (e) {\r\n            id = e.currentTarget.dataset.productoId;\r\n            accionesModal();\r\n        })\r\n\r\n        $('#tabla').on('click', '#eliminar', function (e) {\r\n            const idProducto = e.currentTarget.dataset.productoId;\r\n            alertaEliminarProducto(idProducto, e);\r\n        })\r\n\r\n        function alertaEliminarProducto(id, e) {\r\n\r\n            const nombre = e.currentTarget.parentElement.parentElement.parentElement.childNodes[2].textContent;\r\n            console.log(nombre)\r\n\r\n            Swal.fire({\r\n                icon: 'warning',\r\n                html: `<h2 class=\"\">esta seguro de eliminar el producto <span class=\"font-weight-bold\"> ${nombre} </span>?</h2><br><p>Esta acción no se puede deshacer</p>`,\r\n\r\n                showCancelButton: true,\r\n                confirmButtonText: 'Eliminar',\r\n                cancelButtonText: `Cancelar`,\r\n\r\n\r\n            }).then(result => {\r\n                if (result.isConfirmed) {\r\n                    eliminarProducto(id)\r\n                }\r\n            })\r\n        }\r\n        async function eliminarProducto(id) {\r\n            const datos = new FormData();\r\n            datos.append('id', id);\r\n\r\n            url = `${location.origin}/api/producto/eliminar`;\r\n            try {\r\n                const respuesta = await fetch(url, {\r\n                    body: datos,\r\n                    method: 'POST'\r\n                })\r\n                const resultado = await respuesta.json();\r\n\r\n                eliminarToastAnterior();\r\n\r\n                if (resultado.type == 'error') {\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n\r\n                        body: resultado.msg\r\n                    })\r\n                } else {\r\n\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-azul text-blanco',\r\n                        title: 'Completado',\r\n\r\n                        body: resultado.msg\r\n                    })\r\n\r\n                    setTimeout(() => {\r\n                        eliminarToastAnterior();\r\n                    }, 8000)\r\n\r\n\r\n                    tablaProductos.ajax.reload();\r\n                }\r\n            } catch (error) {\r\n\r\n            }\r\n        }\r\n\r\n\r\n        // function mostrarProductos(){\r\n\r\n        //     $(\"#tabla\").dataTable().fnDestroy(); //por si me da error de reinicializar\r\n\r\n        //     tablaProductos = $('#tabla').DataTable({\r\n        //         language: {\r\n        //             \"decimal\": \"\",\r\n        //             \"emptyTable\": \"No hay información\",\r\n        //             \"info\": \"Mostrando _START_ a _END_ de _TOTAL_ Entradas\",\r\n        //             \"infoEmpty\": \"Mostrando 0 to 0 of 0 Entradas\",\r\n        //             \"infoFiltered\": \"(Filtrado de _MAX_ total entradas)\",\r\n        //             \"infoPostFix\": \"\",\r\n        //             \"thousands\": \",\",\r\n        //             \"lengthMenu\": \"Mostrar _MENU_ Entradas\",\r\n        //             \"loadingRecords\": \"Cargando...\",\r\n        //             \"processing\": \"Procesando...\",\r\n        //             \"search\": \"Buscar:\",\r\n        //             \"zeroRecords\": \"Sin resultados encontrados\",\r\n        //             \"paginate\": {\r\n        //                 \"first\": \"Primero\",\r\n        //                 \"last\": \"Ultimo\",\r\n        //                 \"next\": \"Siguiente\",\r\n        //                 \"previous\": \"Anterior\"\r\n        //             }\r\n        //         },\r\n        //         ajax: '/api/productos',\r\n        //         \"deferRender\":true,\r\n        //         \"retrieve\":true,\r\n        //         \"proccesing\":true,\r\n        //         responsive:true\r\n\r\n        //     });\r\n\r\n        //     // $.ajax({\r\n        //     //     url:'/api/productos',\r\n        //     //     dataType:'json',\r\n        //     //     success:function(req){\r\n        //     //         console.log(req)\r\n        //     //     },\r\n        //     //     error:function(error){\r\n        //     //         console.log(error.resposeText)\r\n        //     //     }\r\n        //     // })\r\n\r\n        // }  \r\n\r\n        function mostrarProductos() {\r\n            if ($.fn.DataTable.isDataTable('#tabla')) {\r\n                $('#tabla').DataTable().destroy();\r\n            }\r\n\r\n            tablaProductos = $('#tabla').DataTable({\r\n                processing: true,\r\n                serverSide: true,\r\n                ajax: {\r\n                    url: '/api/productos',\r\n                    type: 'GET'\r\n                },\r\n                responsive: true,\r\n                order: [[1, 'desc']],\r\n                language: {\r\n                    \"decimal\": \"\",\r\n                    \"emptyTable\": \"No hay información\",\r\n                    \"info\": \"Mostrando _START_ a _END_ de _TOTAL_ Entradas\",\r\n                    \"infoEmpty\": \"Mostrando 0 a 0 de 0 Entradas\",\r\n                    \"infoFiltered\": \"(filtrado de _MAX_ entradas totales)\",\r\n                    \"lengthMenu\": \"Mostrar _MENU_ Entradas\",\r\n                    \"loadingRecords\": \"Cargando...\",\r\n                    \"processing\": \"Procesando...\",\r\n                    \"search\": \"Buscar:\",\r\n                    \"zeroRecords\": \"No se encontraron resultados\",\r\n                    \"paginate\": {\r\n                        \"first\": \"Primero\",\r\n                        \"last\": \"Último\",\r\n                        \"next\": \"Siguiente\",\r\n                        \"previous\": \"Anterior\"\r\n                    }\r\n                }\r\n            });\r\n        }\r\n\r\n        /* consultar Categorias */\r\n        async function consultarCategorias() {\r\n            const url = `/api/productos-categorias`;\r\n            try {\r\n                const respuesta = await fetch(url);\r\n                const categorias = await respuesta.json();\r\n                llenarSelectCategorias(categorias);\r\n            } catch (error) {\r\n\r\n            }\r\n        }\r\n        /* consultar Proveedores */\r\n        async function consultarProveedores() {\r\n            const url = `/api/productos-proveedores`;\r\n            try {\r\n                const respuesta = await fetch(url);\r\n                const proveedores = await respuesta.json();\r\n\r\n                llenarSelectProveedores(proveedores);\r\n            } catch (error) {\r\n\r\n            }\r\n        }\r\n\r\n        function llenarSelectCategorias(categorias) {\r\n            limpiarHtml(selectCategorias);\r\n            // llenarPrimerOption(selectCategorias);\r\n\r\n            // const opcionDisabled =   document.createElement('OPTION');\r\n            //     opcionDisabled.textContent = '--seleccione un producto--';\r\n            //     opcionDisabled.disabled = true;\r\n            //     opcionDisabled.selected = true;\r\n\r\n            //     selectCategorias.appendChild(opcionDisabled); \r\n\r\n            categorias.forEach(categoria => {\r\n\r\n                const opcion = document.createElement('OPTION');\r\n                opcion.value = categoria.id;\r\n                opcion.textContent = categoria.categoria;\r\n                if (categoria.id == idCategoria) {\r\n\r\n                    opcion.selected = true;\r\n                }\r\n\r\n\r\n                selectCategorias.appendChild(opcion)\r\n\r\n            });\r\n            // $('.selectCategoria').select2()\r\n            // $('.selectProveedor').select2()\r\n            // $('.select2bs4').select2({\r\n            //     theme: 'bootstrap4'\r\n            // })\r\n\r\n        }\r\n        function llenarSelectProveedores(proveedores) {\r\n            limpiarHtml(selectProveedores);\r\n\r\n            // const opcionDisabled =   document.createElement('OPTION');\r\n            //     opcionDisabled.textContent = '--seleccione un producto--';\r\n            //     opcionDisabled.disabled = true;\r\n            //     opcionDisabled.selected = true;\r\n\r\n            //     selectProveedores.appendChild(opcionDisabled); \r\n\r\n            //  llenarPrimerOption(selectProveedores);\r\n            proveedores.forEach(proveedor => {\r\n\r\n                const opcion = document.createElement('OPTION');\r\n                opcion.value = proveedor.id;\r\n                opcion.textContent = proveedor.nombre;\r\n                if (proveedor.id == idProveedor) {\r\n\r\n                    opcion.selected = true;\r\n                }\r\n                selectProveedores.appendChild(opcion)\r\n\r\n            });\r\n            $('.selectCategoria').select2()\r\n            $('.selectProveedor').select2()\r\n            $('.select2bs4').select2({\r\n                theme: 'bootstrap4'\r\n            })\r\n\r\n\r\n        }\r\n\r\n        async function enviarDatos() {\r\n\r\n            const datos = new FormData();\r\n            if (id) {\r\n                datos.append('id', id)\r\n            }\r\n            datos.append('nombre', (nombre.value).trim());\r\n            datos.append('codigo', (codigo.value).trim());\r\n            datos.append('categoria_id', (categoria_id.value));\r\n            datos.append('proveedor_id', (proveedor_id.value));\r\n            datos.append('stock', (stock.value));\r\n            datos.append('stock_minimo', (stock_minimo.value));\r\n            datos.append('precio_compra', (precio_compra.value));\r\n            datos.append('precio_venta', (precio_venta.value));\r\n            datos.append('porcentaje_venta', (porcentaje_venta.value));\r\n\r\n            btnSubmit.disabled = true;\r\n\r\n            let url = '';\r\n            if (id) {\r\n                url = `${location.origin}/api/producto/editar`;\r\n            } else {\r\n                url = `${location.origin}/api/producto/crear`;\r\n            }\r\n\r\n            try {\r\n                const respuesta = await fetch(url, {\r\n                    body: datos,\r\n                    method: 'POST'\r\n                })\r\n                const resultado = await respuesta.json();\r\n\r\n                eliminarToastAnterior();\r\n                btnSubmit.disabled = false;\r\n                if (resultado.type == 'error') {\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n\r\n                        body: resultado.msg\r\n                    })\r\n                } else {\r\n                    tablaProductos.ajax.reload()\r\n\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-azul text-blanco',\r\n                        title: 'Completado',\r\n\r\n                        body: resultado.msg\r\n                    })\r\n\r\n                    setTimeout(() => {\r\n                        eliminarToastAnterior();\r\n                    }, 4000)\r\n\r\n                    formulario.reset();\r\n\r\n                    $('#modal-producto').modal('hide');\r\n\r\n                }\r\n\r\n            } catch (error) {\r\n            }\r\n        }\r\n\r\n        function eliminarToastAnterior() {\r\n            if (document.querySelector('#toastsContainerTopRight')) {\r\n                document.querySelector('#toastsContainerTopRight').remove()\r\n            }\r\n        }\r\n\r\n        async function accionesModal() {\r\n            formulario.reset();\r\n            btnSubmit.disabled = false;\r\n            $('#modal-producto').modal('show');\r\n            $('#productoForm').validate().resetForm();\r\n            // Elimina todas las reglas de validación\r\n            $('#productoForm').validate().destroy();\r\n            // Elimina las clases de validación de los elementos\r\n            $('#productoForm').find('.is-invalid').removeClass('is-invalid');\r\n            if (id) {\r\n                consultarProducto();\r\n            }\r\n\r\n            await consultarCategorias();\r\n            await consultarProveedores();\r\n\r\n            inicializarValidador();\r\n\r\n\r\n        }\r\n\r\n        async function consultarProducto() {\r\n            try {\r\n                const respuesta = await fetch(`/api/producto?id=${id}`);\r\n                const resultado = await respuesta.json();\r\n\r\n\r\n                llenarFormulario(resultado);\r\n            } catch (error) {\r\n                console.log(error)\r\n            }\r\n        }\r\n\r\n        function llenarFormulario(resultado) {\r\n            idCategoria = resultado.categoria_id;\r\n            idProveedor = resultado.proveedor_id;\r\n            nombre.value = (resultado.nombre).toUpperCase();\r\n            codigo.value = resultado.codigo;\r\n            stock.value = resultado.stock;\r\n            stock_minimo.value = resultado.stock_minimo;\r\n            precio_compra.value = (parseFloat(resultado.precio_compra)).toLocaleString('en');\r\n            precio_venta.value = (parseFloat(resultado.precio_venta)).toLocaleString('en');\r\n            porcentaje_venta.value = resultado.porcentaje_venta;\r\n\r\n        }\r\n        function inicializarValidador() {\r\n            $.validator.setDefaults({\r\n                submitHandler: function () {\r\n                    enviarDatos();\r\n\r\n\r\n                }\r\n            });\r\n\r\n\r\n            $('#productoForm').validate({\r\n                rules: {\r\n                    nombre: {\r\n                        required: true\r\n\r\n                    },\r\n\r\n                    stock: {\r\n                        required: true\r\n                    },\r\n                    stock_minimo: {\r\n                        required: true\r\n                    },\r\n                    precio_compra: {\r\n                        required: true\r\n                    },\r\n                    precio_venta: {\r\n                        required: true\r\n                    },\r\n                    porcentaje_venta: {\r\n                        required: true\r\n                    }\r\n                },\r\n                messages: {\r\n                    nombre: {\r\n                        required: \"El nombre es obligatorio\"\r\n                    },\r\n                    stock: {\r\n                        required: 'El stock inicial es obligatorio'\r\n                    },\r\n                    stock_minimo: {\r\n                        required: 'El Stock mínimo es obligatorio'\r\n                    },\r\n                    precio_compra: {\r\n                        required: 'El precio de compra es obligatorio'\r\n                    },\r\n                    precio_venta: {\r\n                        required: 'El precio de venta es obligatorio'\r\n                    },\r\n                    porcentaje_venta: {\r\n                        required: 'El porcentaje de venta es obligatorio'\r\n                    }\r\n\r\n                },\r\n                errorElement: 'span',\r\n                errorPlacement: function (error, element) {\r\n                    error.addClass('invalid-feedback');\r\n                    element.closest('.form-group').append(error);\r\n                },\r\n                highlight: function (element, errorClass, validClass) {\r\n                    $(element).addClass('is-invalid');\r\n                },\r\n                unhighlight: function (element, errorClass, validClass) {\r\n                    $(element).removeClass('is-invalid');\r\n                }\r\n            });\r\n        };\r\n        $('#productoForm').on('valid', function (event) {\r\n            inicializarValidador();\r\n        });\r\n\r\n        // function llenarPrimerOption(referencia){\r\n        //     const optionDefault =  document.createElement('OPTION');\r\n        //     optionDefault.textContent = 'Seleccione';\r\n\r\n\r\n        //     optionDefault.value=0;\r\n        //     referencia.appendChild(optionDefault)\r\n        // }\r\n        function limpiarHtml(referencia) {\r\n            while (referencia.firstChild) {\r\n                referencia.removeChild(referencia.firstChild);\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n})();","(function(){\r\n    const productos = document.querySelector('#productos');\r\n\r\n    if(productos){\r\n        const formularioStock = document.querySelector('#stockForm');\r\n        const nombre_producto = document.querySelector('#nombre_producto');\r\n        const nuevo_stock = document.querySelector('#nuevo_stock');\r\n        const precio_paquete_nuevo = document.querySelector('#precio_paquete_nuevo');\r\n        const unidades_input_nuevo = document.querySelector('#unidades_nuevo');\r\n        const precio_compra_nuevo = document.querySelector('#precio_compra_nuevo');\r\n        const btnSubmitNewStock = document.querySelector('#btnSubmitNewStock');\r\n\r\n        let idProductoActualizarStock;\r\n        \r\n        $('#tabla').on('click', '#agregar_stock', function(e){\r\n           \r\n            idProductoActualizarStock = e.currentTarget.dataset.productoId;\r\n            formularioStock.reset();\r\n            btnSubmitNewStock.disabled = false;\r\n            $('#modal-stock').modal('show');\r\n            $('#stockForm').validate().resetForm();\r\n            // Elimina todas las reglas de validación\r\n            $('#stockForm').validate().destroy();\r\n            // Elimina las clases de validación de los elementos\r\n            $('#stockForm').find('.is-invalid').removeClass('is-invalid');\r\n  \r\n \r\n            const nombre = e.currentTarget.parentElement.parentElement.parentElement.childNodes[2].textContent;\r\n            nombre_producto.value = nombre;\r\n            inicializarValidadorStock();\r\n        })\r\n\r\n        precio_paquete_nuevo.addEventListener('input',function(e){\r\n            const precio_paquete = formatearValor(e.target.value);\r\n            precio_paquete_nuevo.value = precio_paquete;\r\n            calcularNuevoPrecioCompra();\r\n        })\r\n        unidades_input_nuevo.addEventListener('input',function(e){\r\n            \r\n            calcularNuevoPrecioCompra();\r\n        })\r\n\r\n        precio_compra_nuevo.addEventListener('input',function(e){\r\n            const precio_compra = formatearValor(e.target.value);\r\n            precio_compra_nuevo.value = precio_compra;\r\n        \r\n        })\r\n     \r\n\r\n        function calcularNuevoPrecioCompra(){\r\n            precio_compra_nuevo.value = '';\r\n    \r\n            const precio_paquete = parseFloat((precio_paquete_nuevo.value).replace(/,/g, ''));\r\n            const unidades = parseFloat(unidades_input_nuevo.value);\r\n            if(isNaN(precio_paquete) || isNaN(unidades)){\r\n                return;\r\n            }\r\n            const precio_compra = precio_paquete/unidades;\r\n            precio_compra_nuevo.value = (Math.round(precio_compra)).toLocaleString('en')\r\n        }\r\n\r\n        function formatearValor(valor){\r\n           \r\n            let valor_sin_formato = parseFloat(valor.replace(/,/g, ''));\r\n            if(isNaN(valor_sin_formato)){\r\n                valor_sin_formato = '';\r\n            }\r\n            const valor_formateado =  valor_sin_formato.toLocaleString('en');\r\n            return valor_formateado ;\r\n        }\r\n\r\n        async function enviarDatosStock(){\r\n            const datos = new FormData();\r\n     \r\n            datos.append('id', idProductoActualizarStock)\r\n            datos.append('stock', (nuevo_stock.value));\r\n            datos.append('precio_compra', (precio_compra_nuevo.value));\r\n\r\n           btnSubmitNewStock.disabled = true;\r\n\r\n            const url = `${location.origin}/api/producto/editar-stock`;\r\n        \r\n            \r\n            \r\n            try {\r\n                const respuesta = await fetch(url,{\r\n                    body:datos,\r\n                    method: 'POST'\r\n                })\r\n                const resultado = await respuesta.json();\r\n          \r\n          \r\n                eliminarToastAnterior();\r\n         \r\n                btnSubmitNewStock.disabled = false;\r\n              \r\n                if(resultado.type=='error'){\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n                     \r\n                        body: resultado.msg\r\n                      })\r\n                }else{\r\n                   \r\n                    $(\"#tabla\").DataTable().ajax.reload();\r\n               \r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-azul text-blanco',\r\n                        title: 'Completado',\r\n                        \r\n                        body: resultado.msg\r\n                    })\r\n\r\n                    setTimeout(()=>{\r\n                        eliminarToastAnterior();\r\n                    },4000)\r\n\r\n                    formularioStock.reset();\r\n\r\n                    $('#modal-stock').modal('hide');\r\n         \r\n                }\r\n   \r\n            } catch (error) {  \r\n            }\r\n        }\r\n\r\n        function eliminarToastAnterior(){\r\n            if(document.querySelector('#toastsContainerTopRight')){\r\n                document.querySelector('#toastsContainerTopRight').remove()\r\n            }\r\n        }\r\n\r\n        function inicializarValidadorStock(id) {\r\n            $.validator.setDefaults({\r\n              submitHandler: function () {\r\n                enviarDatosStock()\r\n         \r\n              }\r\n            });\r\n      \r\n             $('#stockForm').validate({\r\n              rules: {\r\n                \r\n               \r\n                nuevo_stock: {\r\n                    required: true\r\n                },\r\n               \r\n                precio_compra_nuevo:{\r\n                    required: true\r\n                }\r\n              },\r\n              messages: {\r\n                nuevo_stock: {\r\n                    required: \"El nombre es obligatorio\"  \r\n                },\r\n                precio_compra_nuevo: {\r\n                    required: 'la nueva cantidad adquirida es obligatoria'\r\n                }\r\n\r\n              },\r\n              errorElement: 'span',\r\n              errorPlacement: function (error, element) {\r\n                error.addClass('invalid-feedback');\r\n                element.closest('.form-group').append(error);\r\n              },\r\n              highlight: function (element, errorClass, validClass) {\r\n                $(element).addClass('is-invalid');\r\n              },\r\n              unhighlight: function (element, errorClass, validClass) {\r\n                $(element).removeClass('is-invalid');\r\n              }\r\n            });\r\n          };\r\n          $('#stockForm').on('valid', function(event) {\r\n            inicializarValidadorStock();\r\n        });\r\n\r\n        \r\n\r\n    \r\n    }\r\n\r\n})();","(function () {\r\n    const productos_vendidos = document.querySelector('#productos-vendidos');\r\n    if (productos_vendidos) {\r\n\r\n        let tablaProductosVendidos;\r\n        const input_fecha_inicial = document.querySelector('#fecha-inicial');\r\n        const input_fecha_final = document.querySelector('#fecha-final');\r\n\r\n        const fecha_actual = new Date();\r\n\r\n\r\n        let fecha_final = fecha_actual.getFullYear() + '-' + ('0' + (fecha_actual.getMonth() + 1)).slice(-2) + '-' + ('0' + fecha_actual.getDate()).slice(-2);\r\n        // Obtener la fecha actual restada un mes\r\n        fecha_actual.setMonth(fecha_actual.getMonth() - 1);\r\n        let fecha_inicial = fecha_actual.getFullYear() + '-' + ('0' + (fecha_actual.getMonth() + 1)).slice(-2) + '-' + ('0' + fecha_actual.getDate()).slice(-2);\r\n\r\n\r\n        cargarInputs();\r\n        document.addEventListener(\"DOMContentLoaded\", function () {\r\n\r\n\r\n            input_fecha_inicial.addEventListener('change', function () {\r\n                fecha_final = input_fecha_final.value;\r\n                fecha_inicial = input_fecha_inicial.value;\r\n                consultarProductosVendidos()\r\n            })\r\n            input_fecha_final.addEventListener('change', function () {\r\n                fecha_final = input_fecha_final.value;\r\n                fecha_inicial = input_fecha_inicial.value;\r\n                consultarProductosVendidos()\r\n            })\r\n\r\n            // consultarProductosVendidos();\r\n\r\n        });\r\n\r\n        function cargarInputs() {\r\n            input_fecha_inicial.value = fecha_inicial\r\n            input_fecha_final.value = fecha_final\r\n            consultarProductosVendidos()\r\n\r\n        }\r\n\r\n\r\n\r\n\r\n\r\n        function consultarProductosVendidos() {\r\n\r\n\r\n            const fechaObjeto_1 = new Date(fecha_inicial);\r\n            const fechaObjeto_2 = new Date(fecha_final);\r\n\r\n            if (fechaObjeto_1 >= fechaObjeto_2) {\r\n                Swal.fire({\r\n                    icon: 'error',\r\n                    title: \"Error\",\r\n                    text: \"La fecha inicial debe ser menor que la fecha final\",\r\n\r\n                });\r\n                return;\r\n            } else {\r\n                const datos = new FormData();\r\n                datos.append(\"fecha_inicial\", fecha_inicial);\r\n                datos.append(\"fecha_final\", fecha_final);\r\n\r\n                $(\"#tabla\").dataTable().fnDestroy(); //por si me da error de reinicializar\r\n\r\n                tablaProductosVendidos = $('#tabla').DataTable({\r\n                    ajax: {\r\n                        url: `${location.origin}/api/productos-vendidos?fecha-inicial=${fecha_inicial}&fecha-final=${fecha_final}`,\r\n                        dataFilter: function (data) {\r\n                            const jsonData = JSON.parse(data);\r\n                            let newJson = [];\r\n                            let newArray = [];\r\n                            const datos = jsonData.data;\r\n                            console.log(datos)\r\n                            // Iterar sobre los datos y sumar las cantidades por ID de producto\r\n                            datos.forEach(function (row, index) {\r\n                                let idProducto = row[1]; // Obtener el ID del producto\r\n                                let cantidad = parseInt(row[4]) // Obtener la cantidad (convertida a número)\r\n                                if (newJson.length > 0) {\r\n                                    let existe = false;\r\n                                    newJson.forEach((producto, indexProducto) => {\r\n                                            if(producto[1]==row[1]){\r\n                                                newJson[indexProducto][4] =  parseInt(newJson[indexProducto][4]) + parseInt(row[4]);\r\n                                                newJson[indexProducto][6] = parseInt(newJson[indexProducto][4])*parseInt(newJson[indexProducto][5])\r\n                                                existe = true;\r\n                                            }\r\n                                        }\r\n                                    )\r\n                                    if(existe == false){\r\n                                        newJson.push(row);\r\n                                    }\r\n                                } else {\r\n                                    newJson.push(row);\r\n                                }\r\n\r\n                               \r\n\r\n\r\n\r\n                                // // Sumar la cantidad al total correspondiente al ID de producto\r\n                                // if (sumasPorProducto.hasOwnProperty(idProducto)) {\r\n                                //     sumasPorProducto[idProducto] += cantidad;\r\n                                // } else {\r\n                                //     sumasPorProducto[idProducto] = cantidad;\r\n                                // }\r\n                            });\r\n                            console.log(newJson);\r\n\r\n                            // Crear un nuevo arreglo de datos con los totales por ID de producto\r\n\r\n                            // let nuevosDatos = [];\r\n                            // Object.keys(sumasPorProducto).forEach(function (idProducto) {\r\n                            //     nuevosDatos.push([idProducto, sumasPorProducto[idProducto]]);\r\n                            // });\r\n\r\n\r\n                            // Devolver los datos procesados como una cadena JSON\r\n                            return JSON.stringify({ data: newJson });\r\n                        }\r\n                    },\r\n                    \"deferRender\": true,\r\n                    \"retrieve\": true,\r\n                    \"proccesing\": true,\r\n                    responsive: true,\r\n                    initComplete: function () {\r\n                        // Inicializa los botones después de que la tabla se haya creado\r\n                        var buttons = new $.fn.dataTable.Buttons(tablaProductosVendidos, {\r\n                            buttons: [\"copy\", \"csv\", \"excel\", \"pdf\", \"print\", \"colvis\"]\r\n                        }).container().appendTo('#tabla_wrapper .col-md-6:eq(0)');\r\n                    }\r\n                });\r\n                // tablaProductosVendidos = $('#tabla').DataTable({\r\n                //     ajax: `${location.origin}/api/productos-vendidos?fecha-inicial=${fecha_inicial}&fecha-final=${fecha_final}`,\r\n                //     \"deferRender\":true,\r\n                //     \"retrieve\":true,\r\n                //     \"proccesing\":true,\r\n                //     responsive:true,\r\n                //     initComplete: function () {\r\n                //         // Inicializa los botones después de que la tabla se haya creado\r\n                //         var buttons = new $.fn.dataTable.Buttons(tablaProductosVendidos, {\r\n                //             buttons: [\"copy\", \"csv\", \"excel\", \"pdf\", \"print\", \"colvis\"]\r\n                //         }).container().appendTo('#tabla_wrapper .col-md-6:eq(0)');\r\n                //     }\r\n                // });\r\n                $.ajax({\r\n\r\n                    url: `${location.origin}/api/productos-vendidos?fecha-inicial=${fecha_inicial}&fecha-final=${fecha_final}`,\r\n\r\n                    dataType: 'json',\r\n                    success: function (req) {\r\n                         console.log(req)\r\n\r\n                    },\r\n                    error: function (error) {\r\n                        console.log(error.resposeText)\r\n                    }\r\n\r\n                })\r\n\r\n\r\n\r\n            }\r\n\r\n\r\n\r\n\r\n\r\n\r\n        }\r\n        function calcularNuevoPrecioCompra() {\r\n            precio_compra_nuevo.value = '';\r\n\r\n            const precio_paquete = parseFloat((precio_paquete_nuevo.value).replace(/,/g, ''));\r\n            const unidades = parseFloat(unidades_input_nuevo.value);\r\n            if (isNaN(precio_paquete) || isNaN(unidades)) {\r\n                return;\r\n            }\r\n            const precio_compra = precio_paquete / unidades;\r\n            precio_compra_nuevo.value = (Math.round(precio_compra)).toLocaleString('en')\r\n        }\r\n\r\n        function formatearValor(valor) {\r\n\r\n            let valor_sin_formato = parseFloat(valor.replace(/,/g, ''));\r\n            if (isNaN(valor_sin_formato)) {\r\n                valor_sin_formato = '';\r\n            }\r\n            const valor_formateado = valor_sin_formato.toLocaleString('en');\r\n            return valor_formateado;\r\n        }\r\n        async function enviarDatosStock() {\r\n            const datos = new FormData();\r\n\r\n            datos.append('id', idProductoActualizarStock)\r\n            datos.append('stock', (nuevo_stock.value));\r\n            datos.append('precio_compra', (precio_compra_nuevo.value));\r\n\r\n            btnSubmitNewStock.disabled = true;\r\n\r\n            const url = `${location.origin}/api/producto/editar-stock`;\r\n\r\n\r\n\r\n            try {\r\n                const respuesta = await fetch(url, {\r\n                    body: datos,\r\n                    method: 'POST'\r\n                })\r\n                const resultado = await respuesta.json();\r\n\r\n\r\n                eliminarToastAnterior();\r\n\r\n                btnSubmitNewStock.disabled = false;\r\n\r\n                if (resultado.type == 'error') {\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n\r\n                        body: resultado.msg\r\n                    })\r\n                } else {\r\n\r\n                    $(\"#tabla\").DataTable().ajax.reload();\r\n\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-azul text-blanco',\r\n                        title: 'Completado',\r\n\r\n                        body: resultado.msg\r\n                    })\r\n\r\n                    setTimeout(() => {\r\n                        eliminarToastAnterior();\r\n                    }, 4000)\r\n\r\n                    formularioStock.reset();\r\n\r\n                    $('#modal-stock').modal('hide');\r\n\r\n                }\r\n\r\n            } catch (error) {\r\n            }\r\n        }\r\n\r\n        function inicializarValidadorStock(id) {\r\n            $.validator.setDefaults({\r\n                submitHandler: function () {\r\n                    enviarDatosStock()\r\n\r\n                }\r\n            });\r\n\r\n            $('#stockForm').validate({\r\n                rules: {\r\n\r\n\r\n                    nuevo_stock: {\r\n                        required: true\r\n                    },\r\n\r\n                    precio_compra_nuevo: {\r\n                        required: true\r\n                    }\r\n                },\r\n                messages: {\r\n                    nuevo_stock: {\r\n                        required: \"El nombre es obligatorio\"\r\n                    },\r\n                    precio_compra_nuevo: {\r\n                        required: 'la nueva cantidad adquirida es obligatoria'\r\n                    }\r\n\r\n                },\r\n                errorElement: 'span',\r\n                errorPlacement: function (error, element) {\r\n                    error.addClass('invalid-feedback');\r\n                    element.closest('.form-group').append(error);\r\n                },\r\n                highlight: function (element, errorClass, validClass) {\r\n                    $(element).addClass('is-invalid');\r\n                },\r\n                unhighlight: function (element, errorClass, validClass) {\r\n                    $(element).removeClass('is-invalid');\r\n                }\r\n            });\r\n        };\r\n        $('#stockForm').on('valid', function (event) {\r\n            inicializarValidadorStock();\r\n        });\r\n        function eliminarToastAnterior() {\r\n            if (document.querySelector('#toastsContainerTopRight')) {\r\n                document.querySelector('#toastsContainerTopRight').remove()\r\n            }\r\n        }\r\n    }\r\n})();","(function(){\r\n    const loginForm = document.querySelector('#loginForm');\r\n\r\n    if(loginForm){\r\n\r\n        const email =  document.querySelector('#email');\r\n        const password =  document.querySelector('#password');\r\n        const btnSubmit = document.querySelector('#btnSubmit');\r\n        inicializarValidador();\r\n\r\n\r\n        async function enviarDatos(){\r\n            btnSubmit.disabled=true;\r\n            const datos = new FormData();\r\n            datos.append('email', (email.value).trim())\r\n            datos.append('password', password.value);\r\n            \r\n            try {\r\n                const url = '/api/usuario/login';\r\n                const respuesta = await fetch(url,{\r\n                    body:datos,\r\n                    method:'POST'\r\n                })\r\n                const resultado = await respuesta.json();\r\n                elimiarToastAnterior();\r\n                if(resultado.type=='error'){\r\n                    btnSubmit.disabled=false;\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n                     \r\n                        body: resultado.msg\r\n                      })\r\n                }else{\r\n                    window.location.href = '/inicio'\r\n                }\r\n            } catch (error) {\r\n                \r\n            }\r\n        }\r\n        function elimiarToastAnterior(){\r\n            if(document.querySelector('#toastsContainerTopRight')){\r\n                document.querySelector('#toastsContainerTopRight').remove()\r\n            }\r\n        }\r\n\r\n        function inicializarValidador() {\r\n            $.validator.setDefaults({\r\n              submitHandler: function () {\r\n                 \r\n                enviarDatos();\r\n                    \r\n              }\r\n            });\r\n    \r\n             $('#loginForm').validate({\r\n              rules: {\r\n               \r\n                email: {\r\n                  required: true\r\n                },\r\n                password:{\r\n                    required: true,\r\n                }\r\n              },\r\n              messages: {\r\n               \r\n                email: {\r\n                  required: \"El usuario es obligatorio\"\r\n                },\r\n                password: {\r\n                    required: \"El password es obligatorio\",\r\n                }\r\n              },\r\n              errorElement: 'span',\r\n              errorPlacement: function (error, element) {\r\n                error.addClass('invalid-feedback');\r\n                element.closest('.form-group').append(error);\r\n              },\r\n              highlight: function (element, errorClass, validClass) {\r\n                $(element).addClass('is-invalid');\r\n              },\r\n              unhighlight: function (element, errorClass, validClass) {\r\n                $(element).removeClass('is-invalid');\r\n              }\r\n            });\r\n          };\r\n          $('#loginForm').on('valid', function(event) {\r\n            inicializarValidador();\r\n        });\r\n    }\r\n})();","\r\n\r\n(function () {\r\n\r\n    const usuarios = document.querySelector('#usuarios');\r\n    if (usuarios) {\r\n\r\n\r\n        let tablaUsuarios; //para el datatable\r\n        let id = null; //si tengo id es update si no lo tengo es create\r\n\r\n        const btnRegistrarUsuario = document.querySelector('#registrar');\r\n        const formulario = document.querySelector('#usuarioForm');\r\n        const btnSubmit = document.querySelector('#btnSubmit');\r\n        const nombre = document.querySelector('#nombre')\r\n        const email = document.querySelector('#email')\r\n        const estado = document.querySelector('#estado')\r\n        const roll = document.querySelector('#roll')\r\n        const password = document.querySelector('#password');\r\n\r\n\r\n        //disparamos el modal\r\n        btnRegistrarUsuario.addEventListener('click', function () {\r\n            id = null;\r\n            accionesModal();\r\n        })\r\n\r\n        nombre.addEventListener('input', function (e) {\r\n            nombre.value = (e.target.value).toUpperCase();\r\n\r\n        })\r\n\r\n        mostrarUsuarios();\r\n\r\n\r\n\r\n        // function mostrarUsuarios(){\r\n\r\n        //     $(\"#tabla\").dataTable().fnDestroy(); //por si me da error de reinicializar\r\n\r\n        //     tablaUsuarios = $('#tabla').DataTable({\r\n        //         ajax: '/api/usuarios',\r\n        //         \"deferRender\":true,\r\n        //         \"retrieve\":true,\r\n        //         \"proccesing\":true,\r\n        //         responsive:true,\r\n\r\n        //     });\r\n\r\n        // }  \r\n        function mostrarUsuarios() {\r\n            if ($.fn.DataTable.isDataTable('#tabla')) {\r\n                $('#tabla').DataTable().destroy();\r\n            }\r\n\r\n            tablaUsuarios = $('#tabla').DataTable({\r\n                processing: true,\r\n                serverSide: true,\r\n                ajax: {\r\n                    url: '/api/usuarios',\r\n                    type: 'GET'\r\n                },\r\n                responsive: true\r\n            });\r\n        }\r\n\r\n\r\n\r\n        $('#tabla').on('click', '#editar', function (e) {\r\n            id = e.currentTarget.dataset.usuarioId;\r\n            accionesModal();\r\n        })\r\n        $('#tabla').on('click', '#eliminar', function (e) {\r\n            const idUsuario = e.currentTarget.dataset.usuarioId;\r\n            alertaEliminarUsuario(idUsuario, e);\r\n        })\r\n\r\n\r\n\r\n        function alertaEliminarUsuario(id, e) {\r\n            const nombre = e.currentTarget.parentElement.parentElement.parentElement.childNodes[1].textContent;\r\n            Swal.fire({\r\n                icon: 'warning',\r\n                html: `<h2 class=\"\">esta seguro de eliminar al usuario <span class=\"font-weight-bold\"> ${nombre} </span>?</h2><br><p>Esta acción no se puede deshacer</p>`,\r\n\r\n                showCancelButton: true,\r\n                confirmButtonText: 'Eliminar',\r\n                cancelButtonText: `Cancelar`,\r\n\r\n\r\n            }).then(result => {\r\n                if (result.isConfirmed) {\r\n                    eliminarUsuario(id)\r\n                }\r\n            })\r\n        }\r\n\r\n        async function eliminarUsuario(id) {\r\n            const datos = new FormData();\r\n            datos.append('id', id)\r\n            url = `${location.origin}/api/usuario/eliminar`;\r\n            try {\r\n                const respuesta = await fetch(url, {\r\n                    body: datos,\r\n                    method: 'POST'\r\n                })\r\n                const resultado = await respuesta.json();\r\n\r\n\r\n\r\n                eliminarToastAnterior();\r\n\r\n                if (resultado.type == 'error') {\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n\r\n                        body: resultado.msg\r\n                    })\r\n                } else {\r\n\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-azul text-blanco',\r\n                        title: 'Completado',\r\n\r\n                        body: resultado.msg\r\n                    })\r\n\r\n                    setTimeout(() => {\r\n                        eliminarToastAnterior();\r\n                    }, 8000)\r\n\r\n\r\n                    tablaUsuarios.ajax.reload();\r\n                }\r\n            } catch (error) {\r\n                console.log(error)\r\n            }\r\n        }\r\n\r\n        function accionesModal() {\r\n            $('#usuarioForm').validate().destroy();\r\n            formulario.reset();\r\n            btnSubmit.disabled = false;\r\n\r\n            limpiarSelect(estado)\r\n            limpiarSelect(roll)\r\n\r\n            const optionDisabledEstado = document.createElement('OPTION');\r\n            optionDisabledEstado.setAttribute('disabled', 'disabled')\r\n            optionDisabledEstado.setAttribute('selected', 'selected')\r\n            optionDisabledEstado.textContent = '--Seleccione--';\r\n\r\n            const optionEstado = document.createElement('OPTION');\r\n            optionEstado.value = 0;\r\n            optionEstado.textContent = 'Inactivo';\r\n            const optionEstado1 = document.createElement('OPTION');\r\n            optionEstado1.value = 1;\r\n            optionEstado1.textContent = 'Activo';\r\n\r\n            const optionDisabledRoll = document.createElement('OPTION');\r\n            optionDisabledRoll.setAttribute('disabled', 'disabled')\r\n            optionDisabledRoll.setAttribute('selected', 'selected')\r\n            optionDisabledRoll.textContent = '--Seleccione--';\r\n\r\n            const optionRoll = document.createElement('OPTION');\r\n            optionRoll.value = 0;\r\n            optionRoll.textContent = 'Vendedor';\r\n            const optionRoll1 = document.createElement('OPTION');\r\n            optionRoll1.value = 1;\r\n            optionRoll1.textContent = 'Administrador';\r\n\r\n            estado.appendChild(optionDisabledEstado)\r\n            estado.appendChild(optionEstado)\r\n            estado.appendChild(optionEstado1)\r\n            roll.appendChild(optionDisabledRoll)\r\n            roll.appendChild(optionRoll)\r\n            roll.appendChild(optionRoll1)\r\n\r\n            $('#modal-usuario').modal('show');\r\n            inicializarValidador();\r\n            if (id) {\r\n                consultarUsuario();\r\n            }\r\n        }\r\n\r\n        async function consultarUsuario() {\r\n            try {\r\n                const respuesta = await fetch(`/api/usuario?id=${id}`);\r\n                const resultado = await respuesta.json();\r\n                llenarFormulario(resultado);\r\n            } catch (error) {\r\n                console.log(error)\r\n            }\r\n        }\r\n\r\n        function llenarFormulario(resultado) {\r\n\r\n\r\n            nombre.value = resultado.nombre;\r\n            email.value = resultado.email;\r\n\r\n            const optionEstado = estado.querySelector('option[value=\"' + resultado.estado + '\"]');\r\n            optionEstado.setAttribute(\"selected\", \"selected\");\r\n            const optionRoll = roll.querySelector('option[value=\"' + resultado.roll + '\"]');\r\n            optionRoll.setAttribute(\"selected\", \"selected\");\r\n\r\n        }\r\n\r\n\r\n        async function enviarDatos() {\r\n\r\n            const datos = new FormData();\r\n            if (id) {\r\n                datos.append('id', id)\r\n            }\r\n            datos.append('nombre', (nombre.value).trim());\r\n            datos.append('email', email.value);\r\n            datos.append('estado', estado.value);\r\n            datos.append('roll', roll.value);\r\n            datos.append('password', password.value);\r\n\r\n            btnSubmit.disabled = true;\r\n            let url = '';\r\n            if (id) {\r\n                url = `${location.origin}/api/usuario/editar`;\r\n            } else {\r\n                url = `${location.origin}/api/usuario/crear`;\r\n            }\r\n\r\n\r\n            try {\r\n                const respuesta = await fetch(url, {\r\n                    body: datos,\r\n                    method: 'POST'\r\n                })\r\n                const resultado = await respuesta.json();\r\n                //(Object.keys(resultado)[0])\r\n                console.log(resultado)\r\n                btnSubmit.disabled = false;\r\n                eliminarToastAnterior();\r\n                btnSubmit.disabled = false;\r\n                if (resultado.type == 'error') {\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n\r\n                        body: resultado.msg\r\n                    })\r\n                } else {\r\n\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-primary',\r\n                        title: 'Completado',\r\n\r\n                        body: resultado.msg\r\n                    })\r\n\r\n                    setTimeout(() => {\r\n                        eliminarToastAnterior();\r\n                    }, 4000)\r\n\r\n                    formulario.reset();\r\n\r\n                    $('#modal-usuario').modal('hide');\r\n                    tablaUsuarios.ajax.reload();\r\n                }\r\n\r\n            } catch (error) {\r\n            }\r\n        }\r\n\r\n\r\n\r\n        function eliminarToastAnterior() {\r\n            if (document.querySelector('#toastsContainerTopRight')) {\r\n                document.querySelector('#toastsContainerTopRight').remove()\r\n            }\r\n        }\r\n        function limpiarSelect(referencia) {\r\n\r\n            while (referencia.firstChild) {\r\n                referencia.removeChild(referencia.firstChild)\r\n            }\r\n\r\n        }\r\n        function inicializarValidador() {\r\n            $.validator.setDefaults({\r\n                submitHandler: function () {\r\n\r\n                    enviarDatos();\r\n\r\n\r\n\r\n                }\r\n            });\r\n            let passwordRules = {}\r\n            let passwordMsg = {}\r\n\r\n            if (!id) {\r\n\r\n                passwordRules = {\r\n                    required: true,\r\n                    minlength: 6\r\n                }\r\n                passwordMsg = {\r\n                    required: \"El password es obligatorio\",\r\n                    minlength: \"El Password debe tener al menos 6 caracteres\"\r\n                }\r\n\r\n            }\r\n\r\n            $('#usuarioForm').validate({\r\n                rules: {\r\n                    nombre: {\r\n                        required: true\r\n                    },\r\n                    email: {\r\n                        required: true\r\n                    },\r\n                    estado: {\r\n                        required: true,\r\n                    },\r\n                    roll: {\r\n                        required: true,\r\n                    },\r\n                    password: passwordRules,\r\n                    terms: {\r\n                        required: true\r\n                    },\r\n                },\r\n                messages: {\r\n                    nombre: {\r\n                        required: \"El nombre es obligatorio\"\r\n                    },\r\n                    email: {\r\n                        required: \"El Usuario es obligatorio\"\r\n                    },\r\n                    estado: {\r\n                        required: 'el estado es obligatorio',\r\n                    },\r\n                    roll: {\r\n                        required: 'el Roll es obligatorio',\r\n                    },\r\n                    password: passwordMsg\r\n                },\r\n                errorElement: 'span',\r\n                errorPlacement: function (error, element) {\r\n                    error.addClass('invalid-feedback');\r\n                    element.closest('.form-group').append(error);\r\n                },\r\n                highlight: function (element, errorClass, validClass) {\r\n                    $(element).addClass('is-invalid');\r\n                },\r\n                unhighlight: function (element, errorClass, validClass) {\r\n                    $(element).removeClass('is-invalid');\r\n                }\r\n            });\r\n        };\r\n        $('#usuarioForm').on('valid', function (event) {\r\n            inicializarValidador();\r\n        });\r\n    }\r\n})();\r\n\r\n","(function(){\r\n    const egresos = document.querySelector('#egresos');\r\n    if(egresos){\r\n    \r\n        const btnRegistrarEgreso = document.querySelector('#registrar');\r\n        const formulario = document.querySelector('#egresoForm');\r\n        const btnSubmit = document.querySelector('#btnSubmit')\r\n\r\n        let tablaEgresos;\r\n    \r\n        let id;\r\n        const egreso = document.querySelector('#egreso');\r\n        const descripcion = document.querySelector('#descripcion');\r\n\r\n        egreso.addEventListener('input', function(e){\r\n            egreso.value = formatearValor(e.target.value);\r\n        })\r\n\r\n        mostrarEgresos();\r\n      \r\n\r\n        btnRegistrarEgreso.addEventListener('click',function(){\r\n            id = null;\r\n       \r\n            accionesModal();\r\n        })\r\n\r\n      $('#tabla').on('click', '#editar', function(e){\r\n \r\n            id=e.currentTarget.dataset.egresoId;\r\n         \r\n       \r\n            accionesModal();\r\n        })\r\n\r\n   \r\n        $('#tabla').on('click', '#eliminar', function(e){\r\n            const id = e.currentTarget.dataset.egresoId;\r\n            alertaEliminarEgreso(id,e);\r\n        }) \r\n      \r\n\r\n        function alertaEliminarEgreso(id,e){\r\n            \r\n            const egreso = e.currentTarget.parentElement.parentElement.parentElement.childNodes[3].textContent;\r\n           \r\n            \r\n            Swal.fire({\r\n                icon:'warning',\r\n                html: `<h2 class=\"\">esta seguro de eliminar el egreso por un valor de <span class=\"font-weight-bold\"> ${egreso} </span>?</h2><br><p>Esta acción no se puede deshacer</p>`,\r\n          \r\n                showCancelButton: true,\r\n                confirmButtonText: 'Eliminar',\r\n                cancelButtonText: `Cancelar`,\r\n                \r\n\r\n            }).then(result=>{\r\n                if(result.isConfirmed){\r\n                    eliminarEgreso(id)\r\n                }\r\n            })\r\n        }\r\n    \r\n   \r\n        async function eliminarEgreso(id){\r\n            const datos = new FormData();\r\n            datos.append('id', id);\r\n         \r\n    \r\n            url = `${location.origin}/api/egreso/eliminar`;\r\n            try {\r\n                const respuesta = await fetch(url,{\r\n                    body:datos,\r\n                    method: 'POST'\r\n                })\r\n                const resultado = await respuesta.json();\r\n              \r\n                eliminarToastAnterior();\r\n            \r\n                if(resultado.type=='error'){\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n                     \r\n                        body: resultado.msg\r\n                      })\r\n                }else{\r\n\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-azul text-blanco',\r\n                        title: 'Completado',\r\n                        \r\n                        body: resultado.msg\r\n                    })\r\n\r\n                 \r\n\r\n                 \r\n                    tablaEgresos.ajax.reload(); \r\n                }\r\n                setTimeout(()=>{\r\n                    eliminarToastAnterior();\r\n                },8000)\r\n            } catch (error) { \r\n                \r\n            }\r\n        }\r\n      \r\n\r\n        function mostrarEgresos(){\r\n      \r\n            $(\"#tabla\").dataTable().fnDestroy(); //por si me da error de reinicializar\r\n    \r\n            tablaEgresos = $('#tabla').DataTable({\r\n                language: {\r\n                    \"decimal\": \"\",\r\n                    \"emptyTable\": \"No hay información\",\r\n                    \"info\": \"Mostrando _START_ a _END_ de _TOTAL_ Entradas\",\r\n                    \"infoEmpty\": \"Mostrando 0 to 0 of 0 Entradas\",\r\n                    \"infoFiltered\": \"(Filtrado de _MAX_ total entradas)\",\r\n                    \"infoPostFix\": \"\",\r\n                    \"thousands\": \",\",\r\n                    \"lengthMenu\": \"Mostrar _MENU_ Entradas\",\r\n                    \"loadingRecords\": \"Cargando...\",\r\n                    \"processing\": \"Procesando...\",\r\n                    \"search\": \"Buscar:\",\r\n                    \"zeroRecords\": \"Sin resultados encontrados\",\r\n                    \"paginate\": {\r\n                        \"first\": \"Primero\",\r\n                        \"last\": \"Ultimo\",\r\n                        \"next\": \"Siguiente\",\r\n                        \"previous\": \"Anterior\"\r\n                    }\r\n                },\r\n                ajax: '/api/egresos',\r\n                \"deferRender\":true,\r\n                \"retrieve\":true,\r\n                \"proccesing\":true,\r\n                responsive:true\r\n            });\r\n            \r\n            $.ajax({\r\n                url:'/api/egresos',\r\n                dataType:'json',\r\n                success:function(req){\r\n                    console.log(req)\r\n                },\r\n                error:function(error){\r\n                    console.log(error.resposeText)\r\n                }\r\n            })\r\n       \r\n        }  \r\n\r\n\r\n\r\n        async function enviarDatos(){\r\n\r\n            const datos = new FormData();\r\n            if(id){\r\n                datos.append('id', id)\r\n            }   \r\n          \r\n\r\n            datos.append('egreso', egreso.value);\r\n            datos.append('descripcion' , (descripcion.value).trim())\r\n\r\n        \r\n            btnSubmit.disabled = true;\r\n\r\n            let url = '';\r\n            if(id){\r\n                url = `${location.origin}/api/egreso/editar`;\r\n            }else{\r\n                url = `${location.origin}/api/egreso/crear`;\r\n            }\r\n\r\n         \r\n\r\n            \r\n            try {\r\n                const respuesta = await fetch(url,{\r\n                    body:datos,\r\n                    method: 'POST'\r\n                })\r\n                const resultado = await respuesta.json();\r\n              \r\n          \r\n          \r\n                eliminarToastAnterior();\r\n            \r\n                btnSubmit.disabled = false;\r\n                if(resultado.type=='error'){\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n                     \r\n                        body: resultado.msg\r\n                      })\r\n                      $('#modal-egreso').modal('hide');\r\n                }else{\r\n                   tablaEgresos.ajax.reload()\r\n\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-azul text-blanco',\r\n                        title: 'Completado',\r\n                        \r\n                        body: resultado.msg\r\n                    })\r\n\r\n                  \r\n\r\n                    formulario.reset();\r\n\r\n                    $('#modal-egreso').modal('hide');\r\n         \r\n                }\r\n                setTimeout(()=>{\r\n                    eliminarToastAnterior();\r\n                },4000)\r\n   \r\n            } catch (error) {  \r\n            }\r\n        }\r\n\r\n        function eliminarToastAnterior(){\r\n            if(document.querySelector('#toastsContainerTopRight')){\r\n                document.querySelector('#toastsContainerTopRight').remove()\r\n            }\r\n        }\r\n\r\n        async function accionesModal(){\r\n  \r\n            formulario.reset();\r\n            btnSubmit.disabled = false;\r\n            $('#modal-egreso').modal('show');\r\n            $('#egresoForm').validate().resetForm();\r\n            // Elimina todas las reglas de validación\r\n            $('#egresoForm').validate().destroy();\r\n            // Elimina las clases de validación de los elementos\r\n            $('#egresoForm').find('.is-invalid').removeClass('is-invalid');\r\n            if(id){\r\n             \r\n                consultarEgreso();\r\n               \r\n            }\r\n           \r\n         \r\n     \r\n            inicializarValidador();\r\n       \r\n           \r\n        }\r\n\r\n        async function consultarEgreso(){\r\n          \r\n          \r\n            try {\r\n                const respuesta = await fetch(`/api/egreso?id=${id}`);\r\n                const resultado = await respuesta.json();\r\n            \r\n               \r\n                llenarFormulario(resultado);\r\n                \r\n            } catch (error) {\r\n                console.log(error)\r\n            }\r\n        }\r\n\r\n        function llenarFormulario(resultado){\r\n            \r\n\r\n            egreso.value = (parseFloat(resultado.egreso)).toLocaleString('en');\r\n            descripcion.value = resultado.descripcion\r\n          \r\n        }\r\n        function inicializarValidador() {\r\n\r\n            $.validator.setDefaults({\r\n              submitHandler: function () {\r\n                        enviarDatos();\r\n                      \r\n                    \r\n              }\r\n            });\r\n      \r\n           \r\n             $('#egresoForm').validate({\r\n              rules: {\r\n                ingreso: {\r\n                    required: true\r\n                      \r\n                },\r\n                descripcion:{\r\n                    required: true\r\n                }\r\n              },\r\n              messages: {\r\n                ingreso: {\r\n                    required: \"El monto que sale de la caja es obligatorio\"  \r\n                },\r\n                descripcion:{\r\n                    required: \"La nota o descripción es obligatoria\"\r\n                }\r\n           \r\n\r\n              },\r\n              errorElement: 'span',\r\n              errorPlacement: function (error, element) {\r\n                error.addClass('invalid-feedback');\r\n                element.closest('.form-group').append(error);\r\n              },\r\n              highlight: function (element, errorClass, validClass) {\r\n                $(element).addClass('is-invalid');\r\n              },\r\n              unhighlight: function (element, errorClass, validClass) {\r\n                $(element).removeClass('is-invalid');\r\n              }\r\n            });\r\n          };\r\n          $('#egresoForm').on('valid', function(event) {\r\n            inicializarValidador();\r\n        });\r\n\r\n        // function llenarPrimerOption(referencia){\r\n        //     const optionDefault =  document.createElement('OPTION');\r\n        //     optionDefault.textContent = 'Seleccione';\r\n     \r\n         \r\n        //     optionDefault.value=0;\r\n        //     referencia.appendChild(optionDefault)\r\n        // }\r\n        function formatearValor(valor){\r\n           \r\n            let valor_sin_formato = parseFloat(valor.replace(/,/g, ''));\r\n            if(isNaN(valor_sin_formato)){\r\n                valor_sin_formato = '';\r\n            }\r\n            const valor_formateado =  valor_sin_formato.toLocaleString('en');\r\n            return valor_formateado ;\r\n        }\r\n        function eliminarToastAnterior(){\r\n            if(document.querySelector('#toastsContainerTopRight')){\r\n                document.querySelector('#toastsContainerTopRight').remove()\r\n            }\r\n        }\r\n        function limpiarHtml(referencia){\r\n            while(referencia.firstChild){\r\n                referencia.removeChild(referencia.firstChild);\r\n            }\r\n        }\r\n\r\n\r\n\r\n    }\r\n})();","(function(){\r\n    const ingresos = document.querySelector('#ingresos');\r\n    if(ingresos){\r\n    \r\n        const btnRegistrarIngreso = document.querySelector('#registrar');\r\n        const formulario = document.querySelector('#ingresoForm');\r\n        const btnSubmit = document.querySelector('#btnSubmit')\r\n\r\n        let tablaIngresos;\r\n    \r\n        let id;\r\n        const ingreso = document.querySelector('#ingreso');\r\n        const descripcion = document.querySelector('#descripcion');\r\n\r\n        ingreso.addEventListener('input', function(e){\r\n            ingreso.value = formatearValor(e.target.value);\r\n        })\r\n\r\n        mostrarIngresos();\r\n      \r\n\r\n        btnRegistrarIngreso.addEventListener('click',function(){\r\n            id = null;\r\n       \r\n            accionesModal();\r\n        })\r\n\r\n      $('#tabla').on('click', '#editar', function(e){\r\n \r\n            id=e.currentTarget.dataset.ingresoId;\r\n         \r\n       \r\n            accionesModal();\r\n        })\r\n\r\n   \r\n        $('#tabla').on('click', '#eliminar', function(e){\r\n            const id = e.currentTarget.dataset.ingresoId;\r\n            alertaEliminarIngreso(id,e);\r\n        }) \r\n      \r\n\r\n        function alertaEliminarIngreso(id,e){\r\n            \r\n            const ingreso = e.currentTarget.parentElement.parentElement.parentElement.childNodes[3].textContent;\r\n           \r\n            \r\n            Swal.fire({\r\n                icon:'warning',\r\n                html: `<h2 class=\"\">esta seguro de eliminar el ingreso por un valor de <span class=\"font-weight-bold\"> ${ingreso} </span>?</h2><br><p>Esta acción no se puede deshacer</p>`,\r\n          \r\n                showCancelButton: true,\r\n                confirmButtonText: 'Eliminar',\r\n                cancelButtonText: `Cancelar`,\r\n                \r\n\r\n            }).then(result=>{\r\n                if(result.isConfirmed){\r\n                    eliminarIngreso(id)\r\n                }\r\n            })\r\n        }\r\n    \r\n        async function cerrarCaja(id){\r\n           \r\n            const datos = new FormData();\r\n            datos.append('id', id);\r\n         \r\n    \r\n            url = `${location.origin}/api/caja/cerrar`;\r\n            try {\r\n                const respuesta = await fetch(url,{\r\n                    body:datos,\r\n                    method: 'POST'\r\n                })\r\n                const resultado = await respuesta.json();\r\n              \r\n                eliminarToastAnterior();\r\n            \r\n                if(resultado.type=='error'){\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n                     \r\n                        body: resultado.msg\r\n                      })\r\n                }else{\r\n\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-azul text-blanco',\r\n                        title: 'Completado',\r\n                        \r\n                        body: resultado.msg\r\n                    })\r\n\r\n                    tablaIngresos.ajax.reload(); \r\n                }\r\n                setTimeout(()=>{\r\n                    eliminarToastAnterior();\r\n                },8000)\r\n            } catch (error) { \r\n                \r\n            }\r\n        }\r\n        async function eliminarIngreso(id){\r\n            const datos = new FormData();\r\n            datos.append('id', id);\r\n         \r\n    \r\n            url = `${location.origin}/api/ingreso/eliminar`;\r\n            try {\r\n                const respuesta = await fetch(url,{\r\n                    body:datos,\r\n                    method: 'POST'\r\n                })\r\n                const resultado = await respuesta.json();\r\n              \r\n                eliminarToastAnterior();\r\n            \r\n                if(resultado.type=='error'){\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n                     \r\n                        body: resultado.msg\r\n                      })\r\n                }else{\r\n\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-azul text-blanco',\r\n                        title: 'Completado',\r\n                        \r\n                        body: resultado.msg\r\n                    })\r\n\r\n                 \r\n\r\n                 \r\n                    tablaIngresos.ajax.reload(); \r\n                }\r\n                setTimeout(()=>{\r\n                    eliminarToastAnterior();\r\n                },8000)\r\n            } catch (error) { \r\n                \r\n            }\r\n        }\r\n      \r\n\r\n        function mostrarIngresos(){\r\n      \r\n            $(\"#tabla\").dataTable().fnDestroy(); //por si me da error de reinicializar\r\n    \r\n            tablaIngresos = $('#tabla').DataTable({\r\n                language: {\r\n                    \"decimal\": \"\",\r\n                    \"emptyTable\": \"No hay información\",\r\n                    \"info\": \"Mostrando _START_ a _END_ de _TOTAL_ Entradas\",\r\n                    \"infoEmpty\": \"Mostrando 0 to 0 of 0 Entradas\",\r\n                    \"infoFiltered\": \"(Filtrado de _MAX_ total entradas)\",\r\n                    \"infoPostFix\": \"\",\r\n                    \"thousands\": \",\",\r\n                    \"lengthMenu\": \"Mostrar _MENU_ Entradas\",\r\n                    \"loadingRecords\": \"Cargando...\",\r\n                    \"processing\": \"Procesando...\",\r\n                    \"search\": \"Buscar:\",\r\n                    \"zeroRecords\": \"Sin resultados encontrados\",\r\n                    \"paginate\": {\r\n                        \"first\": \"Primero\",\r\n                        \"last\": \"Ultimo\",\r\n                        \"next\": \"Siguiente\",\r\n                        \"previous\": \"Anterior\"\r\n                    }\r\n                },\r\n                ajax: '/api/ingresos',\r\n                \"deferRender\":true,\r\n                \"retrieve\":true,\r\n                \"proccesing\":true,\r\n                responsive:true\r\n            });\r\n            \r\n            $.ajax({\r\n                url:'/api/ingresos',\r\n                dataType:'json',\r\n                success:function(req){\r\n                 \r\n                },\r\n                error:function(error){\r\n                    \r\n                }\r\n            })\r\n       \r\n        }  \r\n\r\n\r\n\r\n        async function enviarDatos(){\r\n\r\n            const datos = new FormData();\r\n            if(id){\r\n                datos.append('id', id)\r\n            }   \r\n          \r\n\r\n            datos.append('ingreso', ingreso.value);\r\n            datos.append('descripcion' , descripcion.value)\r\n\r\n        \r\n            btnSubmit.disabled = true;\r\n\r\n            let url = '';\r\n            if(id){\r\n                url = `${location.origin}/api/ingreso/editar`;\r\n            }else{\r\n                url = `${location.origin}/api/ingreso/crear`;\r\n            }\r\n\r\n         \r\n\r\n            \r\n            try {\r\n                const respuesta = await fetch(url,{\r\n                    body:datos,\r\n                    method: 'POST'\r\n                })\r\n                const resultado = await respuesta.json();\r\n              \r\n          \r\n          \r\n                eliminarToastAnterior();\r\n            \r\n                btnSubmit.disabled = false;\r\n                if(resultado.type=='error'){\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n                     \r\n                        body: resultado.msg\r\n                      })\r\n                      $('#modal-ingreso').modal('hide');\r\n                }else{\r\n                   tablaIngresos.ajax.reload()\r\n\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-azul text-blanco',\r\n                        title: 'Completado',\r\n                        \r\n                        body: resultado.msg\r\n                    })\r\n\r\n                  \r\n\r\n                    formulario.reset();\r\n\r\n                    $('#modal-ingreso').modal('hide');\r\n         \r\n                }\r\n                setTimeout(()=>{\r\n                    eliminarToastAnterior();\r\n                },4000)\r\n   \r\n            } catch (error) {  \r\n            }\r\n        }\r\n\r\n        function eliminarToastAnterior(){\r\n            if(document.querySelector('#toastsContainerTopRight')){\r\n                document.querySelector('#toastsContainerTopRight').remove()\r\n            }\r\n        }\r\n\r\n        async function accionesModal(){\r\n  \r\n            formulario.reset();\r\n            btnSubmit.disabled = false;\r\n            $('#modal-ingreso').modal('show');\r\n            $('#ingresoForm').validate().resetForm();\r\n            // Elimina todas las reglas de validación\r\n            $('#ingresoForm').validate().destroy();\r\n            // Elimina las clases de validación de los elementos\r\n            $('#ingresoForm').find('.is-invalid').removeClass('is-invalid');\r\n            if(id){\r\n             \r\n                consultarIngreso();\r\n               \r\n            }\r\n           \r\n         \r\n     \r\n            inicializarValidador();\r\n       \r\n           \r\n        }\r\n\r\n        async function consultarIngreso(){\r\n          \r\n          \r\n            try {\r\n                const respuesta = await fetch(`/api/ingreso?id=${id}`);\r\n                const resultado = await respuesta.json();\r\n            \r\n               \r\n                llenarFormulario(resultado);\r\n                \r\n            } catch (error) {\r\n                console.log(error)\r\n            }\r\n        }\r\n\r\n        function llenarFormulario(resultado){\r\n            \r\n\r\n            ingreso.value = (parseFloat(resultado.ingreso)).toLocaleString('en');\r\n            descripcion.value = resultado.descripcion\r\n          \r\n        }\r\n        function inicializarValidador() {\r\n\r\n            $.validator.setDefaults({\r\n              submitHandler: function () {\r\n                        enviarDatos();\r\n                      \r\n                    \r\n              }\r\n            });\r\n      \r\n           \r\n             $('#ingresoForm').validate({\r\n              rules: {\r\n                ingreso: {\r\n                    required: true\r\n                      \r\n                },\r\n                descripcion:{\r\n                    required: true\r\n                }\r\n              },\r\n              messages: {\r\n                ingreso: {\r\n                    required: \"El monto que ingresa en la caja es obligatorio\"  \r\n                },\r\n                descripcion:{\r\n                    required: \"La nota o descripción es obligatoria\"\r\n                }\r\n           \r\n\r\n              },\r\n              errorElement: 'span',\r\n              errorPlacement: function (error, element) {\r\n                error.addClass('invalid-feedback');\r\n                element.closest('.form-group').append(error);\r\n              },\r\n              highlight: function (element, errorClass, validClass) {\r\n                $(element).addClass('is-invalid');\r\n              },\r\n              unhighlight: function (element, errorClass, validClass) {\r\n                $(element).removeClass('is-invalid');\r\n              }\r\n            });\r\n          };\r\n          $('#ingresoForm').on('valid', function(event) {\r\n            inicializarValidador();\r\n        });\r\n\r\n        // function llenarPrimerOption(referencia){\r\n        //     const optionDefault =  document.createElement('OPTION');\r\n        //     optionDefault.textContent = 'Seleccione';\r\n     \r\n         \r\n        //     optionDefault.value=0;\r\n        //     referencia.appendChild(optionDefault)\r\n        // }\r\n        function formatearValor(valor){\r\n           \r\n            let valor_sin_formato = parseFloat(valor.replace(/,/g, ''));\r\n            if(isNaN(valor_sin_formato)){\r\n                valor_sin_formato = '';\r\n            }\r\n            const valor_formateado =  valor_sin_formato.toLocaleString('en');\r\n            return valor_formateado ;\r\n        }\r\n        function eliminarToastAnterior(){\r\n            if(document.querySelector('#toastsContainerTopRight')){\r\n                document.querySelector('#toastsContainerTopRight').remove()\r\n            }\r\n        }\r\n        function limpiarHtml(referencia){\r\n            while(referencia.firstChild){\r\n                referencia.removeChild(referencia.firstChild);\r\n            }\r\n        }\r\n\r\n\r\n\r\n    }\r\n})();","(function () {\r\n    // window.location.href = '/inicio'\r\n    const seccionCrearVentas = document.querySelector('#seccion-crear-ventas')\r\n    if (seccionCrearVentas) {\r\n\r\n        let ventaId;\r\n        let clienteId = null;\r\n        let productoObj = {\r\n            id: '',\r\n            nombre: '',\r\n            cantidad: '',\r\n            precio_compra: '',\r\n            precio_venta: '', //este es el precio de evnta de esta venta  ya que el usuario puede rebajarle al producto al momento  de venderlo\r\n            // precio: '',\r\n            precio_original: '', //este es el percio de venta con el que se registro el producto\r\n            valor_total: '',\r\n            stock: ''\r\n        }\r\n        let valoresObj = {\r\n            total_sin_descuento: '',\r\n            total_pagar: '',\r\n            descuento: '',\r\n            costo: '',\r\n            total_libre: ''\r\n\r\n\r\n        }\r\n        let idAnterior;\r\n        let focusCantidad = true;\r\n        let productosArray = [];\r\n        let granTotal = 0;\r\n        let listadoProductos;\r\n\r\n\r\n\r\n\r\n\r\n        const selectClientes = document.querySelector('#selectClientes');\r\n        const guardarVentaBtn = document.querySelector('#guardar-venta');\r\n\r\n\r\n        const totalInput = document.querySelector('#total');\r\n        // const totalLibreInput = document.querySelector('#total_libre'); eliminamos mercado libre\r\n        const descuentoInput = document.querySelector('#descuento');\r\n        const totalPagarInput = document.querySelector('#total_pagar');\r\n        const medotodoPago = document.querySelector('#metodo_pago');\r\n        const pagoContado = document.querySelector('#pago-contado');\r\n        const pagoCuotas = document.querySelector('#pago-cuotas');\r\n\r\n        /* pago de contado */\r\n        const cantidadPagar = document.querySelector('#cantidad_pagar');\r\n        const cantidadCambio = document.querySelector('#cantidad_cambio');\r\n\r\n        /* pago a cuotas o credito */\r\n        const abono = document.querySelector('#abono');\r\n        const saldo = document.querySelector('#saldo');\r\n\r\n        //cliente\r\n        const nombreCliente = document.querySelector('#nombre_cliente');\r\n        const cedulaCliente = document.querySelector('#cedula_cliente');\r\n        const celularCliente = document.querySelector('#celular_cliente');\r\n        const direccionCliente = document.querySelector('#direccion_cliente');\r\n        const emailCliente = document.querySelector('#email_cliente');\r\n\r\n        // agregar cliente\r\n        const bntAgregarCliente = document.querySelector('#agregar-cliente');\r\n        const btnQuitarCliente = document.querySelector('#quitar-cliente');\r\n        const contenedorCliente = document.querySelector('#contenedorCliente');\r\n\r\n        //codigo de la venta\r\n        const codigoVenta = document.querySelector('#codigo-venta');\r\n\r\n        const codigoProducto = document.querySelector('#codigo-producto');\r\n        const selectProductos = document.querySelector('#selectProductos');\r\n\r\n        leerDatosUrl();\r\n        consultarProductos();\r\n\r\n        async function consultarProductos() {\r\n\r\n\r\n            try {\r\n                const respuesta = await fetch(`${location.origin}/api/productos-ventas`);\r\n                const resultado = await respuesta.json();\r\n                listadoProductos = resultado;\r\n                productoPorCodigo(listadoProductos);\r\n\r\n\r\n                // llenarPrimerOption(selectCategorias);\r\n                const opcionDisabled = document.createElement('OPTION');\r\n                opcionDisabled.textContent = '--seleccione un producto--';\r\n                opcionDisabled.value = \"0\";\r\n\r\n                selectProductos.appendChild(opcionDisabled);\r\n                resultado.forEach(producto => {\r\n\r\n                    const opcion = document.createElement('OPTION');\r\n                    opcion.value = producto.id;\r\n                    opcion.textContent = producto.nombre;\r\n\r\n\r\n                    selectProductos.appendChild(opcion)\r\n\r\n                });\r\n\r\n                $('#selectProductos').select2()\r\n                $('.select2bs4').select2({\r\n                    theme: 'bootstrap4'\r\n                })\r\n            } catch (error) {\r\n\r\n            }\r\n            $('#selectProductos').select2()\r\n            $('.select2bs4').select2({\r\n                theme: 'bootstrap4'\r\n            })\r\n\r\n\r\n        }\r\n\r\n        function productoPorCodigo(listadoProductos) {\r\n\r\n            codigoProducto.addEventListener('input', function (e) {\r\n                e.preventDefault();\r\n\r\n                const miString = e.target.value\r\n\r\n                //const primerCaracter = miString.charAt(0);\r\n                const primerCaracter = miString\r\n\r\n                // Verificar si el primer carácter es un número\r\n                //if (!isNaN(parseInt(primerCaracter))) {\r\n                if (!(/[^0-9]/.test(primerCaracter))) {\r\n                    const productoSeleccionado = listadoProductos.filter(producto => {\r\n\r\n\r\n                        return producto.codigo.toLowerCase() == e.target.value.toLowerCase()\r\n                    })\r\n\r\n\r\n                    if (productoSeleccionado.length > 0) {\r\n\r\n                        consultarInfoProducto(productoSeleccionado[0].id)\r\n                        e.target.value = '';\r\n                    }\r\n                } else {\r\n\r\n                    codigoProducto.addEventListener('keydown', (e) => {\r\n                        if (e.keyCode == 13) {\r\n                            const productoSeleccionado = listadoProductos.filter(producto => {\r\n\r\n\r\n                                return producto.codigo.toLowerCase() == e.target.value.toLowerCase()\r\n                            })\r\n\r\n\r\n                            if (productoSeleccionado.length > 0) {\r\n\r\n                                consultarInfoProducto(productoSeleccionado[0].id)\r\n                                e.target.value = '';\r\n                            }\r\n                        }\r\n                    })\r\n                }\r\n\r\n\r\n\r\n            })\r\n        }\r\n\r\n\r\n\r\n        /* aqui hacemos click ya en el boton guardar venta coo tal y validamos */\r\n        guardarVentaBtn.addEventListener('click', function () {\r\n            revisarVenta();\r\n        })\r\n\r\n        medotodoPago.addEventListener('change', function () {\r\n\r\n            if (contenedorCliente.classList.contains('d-none')) {\r\n                contenedorCliente.classList.remove('d-none');\r\n            }\r\n            if (pagoContado.classList.contains('d-none')) {\r\n                pagoContado.classList.remove('d-none');\r\n            }\r\n            if (pagoCuotas.classList.contains('d-none')) {\r\n                pagoCuotas.classList.remove('d-none');\r\n            }\r\n\r\n\r\n\r\n            if (medotodoPago.value != 1) {\r\n\r\n                abono.value = '';\r\n                saldo.value = valoresObj.total_pagar.toLocaleString('en');\r\n                resetearCliente();\r\n                nombreCliente.readOnly = true;\r\n                cedulaCliente.readOnly = true;\r\n                celularCliente.readOnly = true;\r\n                direccionCliente.readOnly = true;\r\n                emailCliente.readOnly = true;\r\n                btnQuitarCliente.disabled = true;\r\n                pagoContado.classList.add('d-none');\r\n\r\n            } else {\r\n                clienteId = null;\r\n                nombreCliente.readOnly = false;\r\n                cedulaCliente.readOnly = false;\r\n                celularCliente.readOnly = false;\r\n                direccionCliente.readOnly = false;\r\n                emailCliente.readOnly = false;\r\n                btnQuitarCliente.disabled = false;\r\n                contenedorCliente.classList.add('d-none');\r\n                pagoCuotas.classList.add('d-none');\r\n\r\n\r\n\r\n            }\r\n        })\r\n\r\n\r\n        bntAgregarCliente.addEventListener('click', function () {\r\n\r\n            if (contenedorCliente.classList.contains('d-none')) {\r\n\r\n                contenedorCliente.classList.remove('d-none');\r\n            }\r\n        });\r\n\r\n        btnQuitarCliente.addEventListener('click', function () {\r\n            resetearCliente();\r\n            contenedorCliente.classList.add('d-none');\r\n        })\r\n\r\n        cantidadPagar.addEventListener('input', calcularCambio);\r\n\r\n        abono.addEventListener('input', calcularSaldo);\r\n\r\n        totalPagarInput.addEventListener('input', calcularDescuento);\r\n\r\n        $('#selectProductos').on('select2:select', function (e) {\r\n\r\n            consultarInfoProducto(e.target.value)\r\n        });\r\n        $('#selectClientes').on('select2:select', function (e) {\r\n            if (e.target.value != 0) {\r\n\r\n                consultarInfoCliente(e.target.value);\r\n            } else {\r\n                resetearCliente();\r\n            }\r\n        });\r\n\r\n\r\n\r\n\r\n        async function cargarCodigoVenta() {\r\n\r\n            try {\r\n                const respuesta = await fetch(`${location.origin}/api/codigo-venta`);\r\n                const codigo_venta = await respuesta.json();\r\n\r\n                codigoVenta.value = codigo_venta;\r\n\r\n            } catch (error) {\r\n\r\n            }\r\n        }\r\n\r\n        //leer el id de la url para saber si es una edicion \r\n        function leerDatosUrl() {\r\n            const urlActual = new URL(window.location);\r\n            const params = new URLSearchParams(urlActual.search);\r\n            if (params.size == 1) {\r\n                ventaId = atob(params.get('id'));\r\n                consultarVenta();\r\n\r\n                consultarCLientes();\r\n\r\n\r\n            } else {\r\n                cargarCodigoVenta()\r\n                consultarCLientes();\r\n            }\r\n\r\n        }\r\n\r\n        /* cundo visitamos una venta existente la consultas */\r\n        async function consultarVenta() {\r\n            const url = `${location.origin}/api/venta?id=${ventaId}`;\r\n            try {\r\n                const respuesta = await fetch(url);\r\n                const resultado = await respuesta.json();\r\n                llenarInformacion(resultado);\r\n            } catch (error) {\r\n\r\n            }\r\n        }\r\n\r\n        /* esto es para cando estamos editando la venta */\r\n        function llenarInformacion(resultado) {\r\n    \r\n            clienteId = resultado.cliente_id;\r\n\r\n            const productosVenta = resultado.productos_venta\r\n            const venta = resultado.venta;\r\n            codigoVenta.value = venta.codigo;\r\n            // console.log(productosVenta)\r\n            // console.log(venta)\r\n            let total_sin_descuento = 0;\r\n\r\n            productosVenta.forEach(productoVenta => {\r\n                productoObj = {\r\n                    id: productoVenta.id,\r\n                    nombre: productoVenta.nombre,\r\n                    cantidad: productoVenta.cantidad,\r\n                    precio_compra: productoVenta.precio_compra,\r\n                    precio_venta: productoVenta.precio_factura,\r\n                    // precio: productoVenta.precio,\r\n                    precio_original: productoVenta.precio_venta,\r\n                    valor_total: productoVenta.precio_factura * productoVenta.cantidad,\r\n                    stock: parseFloat(productoVenta.stock) + parseFloat(productoVenta.cantidad)\r\n\r\n                }\r\n                total_sin_descuento = parseFloat(total_sin_descuento) + parseFloat(productoVenta.precio_venta) * productoVenta.cantidad\r\n                productosArray.push(productoObj)\r\n                // total_sin_descuento = total_sin_descuento+productoVenta.precio_venta;\r\n            })\r\n\r\n            // valoresObj={\r\n            //     total_sin_descuento,\r\n            //     total_pagar:venta.recaudo,\r\n            //     descuento:venta.descuento,\r\n            //     costo:venta.costo\r\n\r\n\r\n            // }\r\n            mostrarProductos();\r\n\r\n            totalInput.value = total_sin_descuento.toLocaleString('en');\r\n            descuentoInput.value = resultado.venta.descuento + \"%\";\r\n            totalPagarInput.value = parseFloat(resultado.venta.total_factura).toLocaleString('en');\r\n\r\n            if (venta.nombre_cliente != '' || venta.cedula_cliente != '' || venta.celular_cliente != '' || venta.direccion_cliente != '' || venta.nombre != undefined) {\r\n                contenedorCliente.classList.remove('d-none');\r\n                nombreCliente.value = venta.nombre_cliente;\r\n                cedulaCliente.value = venta.cedula_cliente;\r\n                celularCliente.value = venta.celular_cliente;\r\n                direccionCliente.value = venta.direccion_cliente;\r\n                emailCliente.value = venta.email_cliente;\r\n            }\r\n\r\n            if (venta.metodo_pago == 2 || venta.metodo_pago == 3) {\r\n                let optionToSelect = '';\r\n\r\n                if (venta.metodo_pago == 2) {\r\n                    optionToSelect = document.querySelector('#metodo_pago option[value=\"2\"]');\r\n                } else {\r\n                    optionToSelect = document.querySelector('#metodo_pago option[value=\"3\"]');\r\n                }\r\n\r\n                optionToSelect.selected = true;\r\n          \r\n                abono.value = (parseFloat(venta.recaudo)).toLocaleString('en');\r\n                saldo.value = (venta.total_factura - venta.recaudo).toLocaleString('en');\r\n                pagoContado.classList.add('d-none');\r\n                pagoCuotas.classList.remove('d-none');\r\n\r\n\r\n            }\r\n        }\r\n\r\n        function revisarVenta() {\r\n\r\n            if (productosArray.length == 0) {\r\n                Swal.fire({\r\n                    icon: 'error',\r\n\r\n                    text: 'No Hay productos agregados a esta venta',\r\n\r\n                })\r\n                return;\r\n            }\r\n         \r\n            if (medotodoPago.value == 2) {\r\n                if (selectClientes.value == 0) {\r\n                    Swal.fire({\r\n                        icon: 'error',\r\n\r\n                        text: 'Para las ventas a credito o de mercado libre es necesario seleccionar un cliente que se encuentre registrado',\r\n\r\n                    })\r\n                    return;\r\n                }\r\n\r\n\r\n            }\r\n\r\n\r\n            enviarInformacion();\r\n\r\n        }\r\n        async function enviarInformacion() {\r\n\r\n      \r\n            console.log(valoresObj)\r\n\r\n            const datos = new FormData();\r\n            if (ventaId) {\r\n                datos.append('id', ventaId);\r\n            }\r\n            datos.append('productosArray', JSON.stringify(productosArray));\r\n            datos.append('total_factura', valoresObj.total_pagar); //total de esta venta\r\n            datos.append('total', valoresObj.total_sin_descuento); //total de sin descuento\r\n\r\n            datos.append('costo', valoresObj.costo);\r\n            datos.append('descuento', valoresObj.descuento);\r\n            datos.append('metodo_pago', medotodoPago.value);\r\n            if (medotodoPago.value != 1) {\r\n                valor_abono = 0;\r\n                if (abono.value != '') {\r\n                    valor_abono = abono.value;\r\n                }\r\n                datos.append('abono', valor_abono);\r\n                datos.append('saldo', saldo.value);\r\n                datos.append('cliente_id', selectClientes.value)\r\n                datos.append('recaudo', valor_abono);\r\n                if (parseFloat(valor_abono) < parseFloat(valoresObj.total_pagar)) {\r\n                    datos.append('pagado', 0);\r\n                } else {\r\n                    datos.append('pagado', 1);\r\n                }\r\n\r\n            } else {\r\n                datos.append('pagado', 1);\r\n                datos.append('recaudo', valoresObj.total_pagar);\r\n            }\r\n\r\n\r\n            datos.append('nombre_cliente', nombreCliente.value)\r\n            datos.append('cedula_cliente', cedulaCliente.value)\r\n            datos.append('celular_cliente', celularCliente.value)\r\n            datos.append('direccion_cliente', direccionCliente.value);\r\n            datos.append('email_cliente', emailCliente.value);\r\n          \r\n\r\n            let url;\r\n            if (ventaId) {\r\n                url = `${location.origin}/api/editar-venta`;\r\n            } else {\r\n                url = `${location.origin}/api/crear-venta`;\r\n            }\r\n\r\n            // guardarVentaBtn.disabled = true;\r\n            try {\r\n\r\n                const respuesta = await fetch(url, {\r\n                    method: 'POST',\r\n                    body: datos\r\n                });\r\n              \r\n                const resultado = await respuesta.json();\r\n                console.log(resultado)\r\n                eliminarToastAnterior();\r\n\r\n                if (resultado.type == 'error') {\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n\r\n                        body: resultado.msg\r\n                    })\r\n\r\n                } else {\r\n\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-azul text-blanco',\r\n                        title: 'Completado',\r\n\r\n                        body: resultado.msg\r\n                    })\r\n\r\n\r\n\r\n\r\n                    resetearVentaAnterior();\r\n                }\r\n                guardarVentaBtn.disabled = false;\r\n                setTimeout(() => {\r\n                    eliminarToastAnterior();\r\n                }, 8000)\r\n            } catch (error) {\r\n                console.log(error)\r\n            }\r\n\r\n        }\r\n\r\n        function resetearVentaAnterior() {\r\n            ventaId = null;\r\n            productosArray = [];\r\n            productoObj = {\r\n                id: '',\r\n                nombre: '',\r\n                cantidad: '',\r\n                precio_compra: '',\r\n                precio_venta: '',\r\n\r\n                precio_original: '',\r\n                valor_total: '',\r\n                stock: ''\r\n            }\r\n            valoresObj = {\r\n                total_sin_descuento: '',\r\n                total_pagar: '',\r\n                descuento: '',\r\n                costo: ''\r\n\r\n\r\n            }\r\n\r\n            const selectProductos = $('#selectProductos');\r\n\r\n            const selectClientes = $('#selectClientes');\r\n\r\n            selectProductos.val(\"0\").trigger('change.select2');\r\n\r\n            selectClientes.val(\"0\").trigger('change.select2');\r\n\r\n\r\n\r\n            medotodoPago.innerHTML = `\r\n                <option value=\"1\">Pago e Contado</option>\r\n                <option value=\"2\">Pago a Cuotas</option>\r\n                <option value=\"3\">Mercado Libre</option>\r\n            `\r\n\r\n            cantidadPagar.value = '';\r\n            cantidadCambio.value = '';\r\n            abono.value = '';\r\n            saldo.value = '';\r\n            if (!contenedorCliente.classList.contains('d-none')) {\r\n                contenedorCliente.classList.add('d-none');\r\n            }\r\n            const pagoContado = document.querySelector('#pago-contado');\r\n            const pagoCuotas = document.querySelector('#pago-cuotas');\r\n            if (!pagoCuotas.classList.contains('d-none')) {\r\n                pagoCuotas.classList.add('d-none');\r\n            }\r\n            if (pagoContado.classList.contains('d-none')) {\r\n\r\n                pagoContado.classList.remove('d-none');\r\n            }\r\n\r\n\r\n            cargarCodigoVenta();\r\n            resetearCliente();\r\n            mostrarProductos();\r\n\r\n        }\r\n\r\n\r\n\r\n\r\n        async function consultarInfoCliente(id) {\r\n\r\n\r\n            try {\r\n                const respuesta = await fetch(`${location.origin}/api/cliente?id=${id}`);\r\n                const resultado = await respuesta.json();\r\n\r\n\r\n\r\n                eliminarToastAnterior();\r\n\r\n                if (resultado.type == 'error') {\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n\r\n                        body: resultado.msg\r\n                    })\r\n                } else {\r\n\r\n\r\n\r\n                    setTimeout(() => {\r\n                        eliminarToastAnterior();\r\n                    }, 4000)\r\n\r\n\r\n                    imprimirDatosCliente(resultado);\r\n                }\r\n\r\n            } catch (error) {\r\n\r\n            }\r\n\r\n\r\n        }\r\n\r\n        function imprimirDatosCliente(cliente) {\r\n\r\n            nombreCliente.value = cliente.nombre ?? '';\r\n            cedulaCliente.value = cliente.cedula ?? '';\r\n            celularCliente.value = cliente.celular ?? '';\r\n            direccionCliente.value = cliente.direccion ?? '';\r\n            emailCliente.value = cliente.email ?? '';\r\n        }\r\n\r\n\r\n        function resetearCliente() {\r\n            var selectClientes = $('#selectClientes');\r\n            selectClientes.val(\"0\").trigger('change.select2');\r\n            nombreCliente.value = \"\";\r\n            cedulaCliente.value = \"\";\r\n            celularCliente.value = \"\";\r\n            direccionCliente.value = \"\";\r\n            emailCliente.value = \"\";\r\n        }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n        function calcularCambio(e) {\r\n            cantidadPagar.value = formatearValor(e.target.value);\r\n            const valor_pagar = parseFloat((cantidadPagar.value).replace(/,/g, ''));\r\n            const cambio = valor_pagar - valoresObj.total_pagar;\r\n            cantidadCambio.value = cambio.toLocaleString('en')\r\n\r\n        }\r\n        function calcularSaldo(e) {\r\n\r\n            abono.value = formatearValor(e.target.value);\r\n            const valor_abono = parseFloat((abono.value).replace(/,/g, ''));\r\n            const deuda = valoresObj.total_pagar - valor_abono;\r\n            saldo.value = deuda.toLocaleString('en')\r\n\r\n        }\r\n\r\n\r\n\r\n\r\n        function mostrarProductos() {\r\n            const contenedorProductos = document.querySelector('#productosVenta');\r\n            limpiarHtml(contenedorProductos);\r\n            productosArray.forEach(producto => {\r\n                const { id, nombre, precio_venta, cantidad, valor_total, stock } = producto;\r\n          \r\n\r\n                const rowDiv = document.createElement('DIV');\r\n                rowDiv.classList.add('row', 'px-2');\r\n                rowDiv.dataset.productoId = id;\r\n\r\n                //Producto\r\n\r\n                const col1Div = document.createElement('DIV');\r\n                col1Div.classList.add('col-sm-4');\r\n\r\n                const group1Div = document.createElement('DIV');\r\n                group1Div.classList.add('input-group', 'mb-3');\r\n\r\n                const prepend1Div = document.createElement('DIV');\r\n                prepend1Div.classList.add('input-group-prepend');\r\n\r\n\r\n                prepend1Div.innerHTML = `<span class=\"input-group-text bg-icono btn pointer\"><i class=\"fa-solid fa-trash text-danger\"></i></span>`;\r\n                prepend1Div.onclick = () => {\r\n\r\n                    eliminarProducto(id);\r\n                }\r\n\r\n                const inputNombre = document.createElement('INPUT');\r\n                inputNombre.type = 'text';\r\n                inputNombre.classList.add('form-control');\r\n                inputNombre.readOnly = true;\r\n                inputNombre.value = nombre;\r\n                inputNombre.dataset.productoId = id;\r\n\r\n\r\n                const col7Div = document.createElement('DIV');\r\n                col7Div.classList.add('col-sm-2');\r\n\r\n                const group7Div = document.createElement('DIV');\r\n                group7Div.classList.add('input-group', 'mb-3');\r\n\r\n                const prepend7Div = document.createElement('DIV');\r\n                prepend7Div.classList.add('input-group-prepend');\r\n\r\n\r\n                prepend7Div.innerHTML = `<span class=\"input-group-text bg-icono\"> <i class=\"fas fa-hashtag text-azul\"></i></i></span>`;\r\n\r\n\r\n                const inputStock = document.createElement('INPUT');\r\n                inputStock.type = 'text';\r\n                inputStock.classList.add('form-control');\r\n                inputStock.readOnly = true;\r\n                inputStock.value = stock;\r\n                inputStock.dataset.productoId = id;\r\n\r\n\r\n                group1Div.appendChild(prepend1Div);\r\n                group1Div.appendChild(inputNombre);\r\n                col1Div.appendChild(group1Div);\r\n                group7Div.appendChild(prepend7Div);\r\n                group7Div.appendChild(inputStock);\r\n\r\n\r\n                col7Div.appendChild(group7Div);\r\n\r\n                //cantidad\r\n\r\n                const col2Div = document.createElement('DIV');\r\n                col2Div.classList.add('col-sm-2');\r\n\r\n                const group2Div = document.createElement('DIV');\r\n                group2Div.classList.add('input-group', 'mb-3');\r\n\r\n                const prepend2Div = document.createElement('DIV');\r\n                prepend2Div.classList.add('input-group-prepend');\r\n\r\n                prepend2Div.dataset.productoId = id;\r\n                prepend2Div.innerHTML = `<span class=\"input-group-text bg-icono\"> <i class=\"fas fa-hashtag text-azul\"></i></i></span>`;\r\n\r\n\r\n\r\n                const inputCantidad = document.createElement('INPUT');\r\n                inputCantidad.type = 'number';\r\n                inputCantidad.classList.add('form-control');\r\n                // inputCantidad.min = 1;\r\n\r\n                inputCantidad.value = cantidad;\r\n\r\n\r\n                if (idAnterior == id && focusCantidad == true) {\r\n\r\n                    // inputPrecio.selectionStart = inputPrecio.value.length;\r\n                    // inputPrecio.selectionEnd = inputPrecio.value.length;\r\n\r\n                    // Enfoca el elemento input\r\n                    setTimeout(function () {\r\n                        inputCantidad.focus();\r\n                    }, 0);\r\n\r\n                }\r\n\r\n                inputCantidad.oninput = function () {\r\n\r\n                    if (parseFloat(inputCantidad.value) > parseFloat(stock)) {\r\n                        Swal.fire({\r\n                            icon: 'warning',\r\n                            text: 'el producto está agotado',\r\n\r\n                        })\r\n                        modificarTotalPorProducto(stock, id, true);\r\n                    } else {\r\n                        modificarTotalPorProducto(inputCantidad.value, id, true); //modificamos el total al moficiar la cantidad\r\n                    }\r\n\r\n\r\n                };\r\n\r\n                group2Div.appendChild(prepend2Div);\r\n                group2Div.appendChild(inputCantidad);\r\n                col2Div.appendChild(group2Div);\r\n\r\n                //precio sin comision para cuando se usa mercado libre\r\n\r\n                // const col5Div = document.createElement('DIV');\r\n                // col5Div.classList.add('col-sm-2');\r\n                // const group5Div = document.createElement('DIV');\r\n                // group5Div.classList.add('input-group', 'mb-3');\r\n\r\n                // const prepend5Div = document.createElement('DIV');\r\n                // prepend5Div.classList.add('input-group-prepend');\r\n                // prepend5Div.innerHTML = `<span class=\"input-group-text bg-icono\"> <i class=\"fas fa-dollar-sign text-azul\"></i></i></span>`;\r\n\r\n                // const inputPrecioLibre = document.createElement('INPUT');\r\n                // inputPrecioLibre.type = 'text';\r\n                // inputPrecioLibre.classList.add('form-control');\r\n                // inputPrecioLibre.value = parseFloat(precio).toLocaleString('en');\r\n\r\n\r\n                // group5Div.appendChild(prepend5Div);\r\n                // group5Div.appendChild(inputPrecioLibre);\r\n                // col5Div.appendChild(group5Div);\r\n\r\n                // inputPrecioLibre.oninput = () => {\r\n\r\n                //     console.log(inputPrecioLibre.value)\r\n                //     const nuevo_precio_venta = formatearValor(inputPrecioLibre.value);\r\n                //     inputPrecioLibre.value = nuevo_precio_venta;\r\n                //     producto.precio = parseFloat((nuevo_precio_venta).replace(/,/g, ''));\r\n\r\n                //     total_libre = 0;\r\n                //     productosArray.forEach(producto => {\r\n                //         total_libre = total_libre + producto.precio * producto.cantidad;\r\n                //     })\r\n                //     valoresObj.total_libre = total_libre;\r\n                //     totalLibreInput.value = total_libre.toLocaleString('en');\r\n                // }\r\n\r\n\r\n\r\n                //precio unitario para factura\r\n\r\n                const col3Div = document.createElement('DIV');\r\n                col3Div.classList.add('col-sm-2');\r\n\r\n                const group3Div = document.createElement('DIV');\r\n                group3Div.classList.add('input-group', 'mb-3');\r\n\r\n                const prepend3Div = document.createElement('DIV');\r\n                prepend3Div.classList.add('input-group-prepend');\r\n\r\n\r\n                prepend3Div.innerHTML = `<span class=\"input-group-text bg-icono\"> <i class=\"fas fa-dollar-sign text-azul\"></i></i></span>`;\r\n\r\n                const inputPrecio = document.createElement('INPUT');\r\n                inputPrecio.type = 'text';\r\n                inputPrecio.classList.add('form-control');\r\n                inputPrecio.value = parseFloat(precio_venta).toLocaleString('en');\r\n\r\n\r\n                if (idAnterior == id && focusCantidad == false) {\r\n\r\n                    // inputPrecio.selectionStart = inputPrecio.value.length;\r\n                    // inputPrecio.selectionEnd = inputPrecio.value.length;\r\n\r\n                    // Enfoca el elemento input\r\n                    setTimeout(function () {\r\n                        inputPrecio.focus();\r\n                    }, 0);\r\n\r\n                }\r\n\r\n                /* este sera el precio de venta como tal para la venta ya que el usuario puede editarlo al momento de venderlo */\r\n                inputPrecio.oninput = () => {\r\n                    console.log(inputPrecio.value)\r\n                    const nuevo_precio_venta = formatearValor(inputPrecio.value);\r\n                    inputPrecio.value = nuevo_precio_venta;\r\n                    // inputPrecioLibre.value = nuevo_precio_venta\r\n                    // producto.precio = parseFloat((nuevo_precio_venta).replace(/,/g, ''));\r\n                    modificarTotalPorProducto(inputPrecio.value, id, false)\r\n                }\r\n                inputPrecio.focus()\r\n\r\n                group3Div.appendChild(prepend3Div);\r\n                group3Div.appendChild(inputPrecio);\r\n                col3Div.appendChild(group3Div);\r\n\r\n                //precio cantidad\r\n                const col4Div = document.createElement('DIV');\r\n                col4Div.classList.add('col-sm-2');\r\n\r\n                const group4Div = document.createElement('DIV');\r\n                group4Div.classList.add('input-group', 'mb-3');\r\n\r\n                const prepend4Div = document.createElement('DIV');\r\n                prepend4Div.classList.add('input-group-prepend');\r\n\r\n                prepend4Div.dataset.productoId = id;\r\n                prepend4Div.innerHTML = `<span class=\"input-group-text bg-icono\"> <i class=\"fas fa-dollar-sign text-azul\"></i></i></span>`;\r\n\r\n                const inputPrecioCantidad = document.createElement('INPUT');\r\n                inputPrecioCantidad.type = 'text';\r\n                inputPrecioCantidad.readOnly = true;\r\n                inputPrecioCantidad.classList.add('form-control');\r\n                inputPrecioCantidad.value = parseFloat(valor_total).toLocaleString('en');\r\n\r\n\r\n                group4Div.appendChild(prepend4Div);\r\n                group4Div.appendChild(inputPrecioCantidad);\r\n                col4Div.appendChild(group4Div);\r\n\r\n\r\n\r\n                rowDiv.appendChild(col1Div);\r\n                rowDiv.appendChild(col7Div);\r\n                rowDiv.appendChild(col2Div);\r\n                // rowDiv.appendChild(col5Div);\r\n                rowDiv.appendChild(col3Div);\r\n                rowDiv.appendChild(col4Div);\r\n\r\n\r\n                contenedorProductos.appendChild(rowDiv)\r\n\r\n                //resetar los inputs de metodo de pago\r\n                resetarInputsMetodoPago();\r\n\r\n\r\n\r\n            });\r\n\r\n            calcularTotal();\r\n\r\n        }\r\n\r\n        function resetarInputsMetodoPago() {\r\n\r\n            cantidadPagar.value = '';\r\n            cantidadCambio.value = '';\r\n            abono.value = '';\r\n            saldo.value = valoresObj.total_pagar.toLocaleString('en');\r\n        }\r\n        function calcularTotal() {\r\n    \r\n\r\n            let total = 0; //valor a pagar con el precio de venta original\r\n            let total_pagar = 0; //valor a pagar con modificaciones de precios \r\n            let total_costo = 0;\r\n            // let total_libre = 0;\r\n            productosArray.forEach(producto => {\r\n\r\n                total = total + producto.cantidad * producto.precio_original;\r\n                total_pagar = total_pagar + producto.cantidad * producto.precio_venta;\r\n                total_costo = total_costo + producto.cantidad * producto.precio_compra;\r\n                // total_libre = total_libre + producto.cantidad * producto.precio;\r\n            })\r\n          \r\n\r\n            const descuento = 100 - total_pagar * 100 / total;\r\n            descuentoInput.value = !isNaN(Number(descuento.toFixed(2))) ? Number(descuento.toFixed(2)) + '%' : 0 + '%';\r\n\r\n            totalInput.value = total.toLocaleString('en');\r\n             \r\n            totalPagarInput.value = total_pagar.toLocaleString('en');\r\n                        \r\n            // totalLibreInput.value = total_libre.toLocaleString('en'); // lo elimina porque ya no existe\r\n        \r\n\r\n            //llenamos el objeto con la informacion del pago de la venta\r\n            valoresObj.total_sin_descuento = total;\r\n            valoresObj.total_pagar = total_pagar;\r\n            valoresObj.descuento = !isNaN(Number(descuento.toFixed(2))) ? Number(descuento.toFixed(2)) : 0;\r\n            valoresObj.costo = total_costo;\r\n            // valoresObj.total_libre = total_libre;\r\n\r\n\r\n        }\r\n\r\n        function calcularDescuento(e) { //calculamos el descuento cuando se modifica el precio final\r\n            if (productosArray.length == 0) {\r\n                totalPagarInput.value = 0;\r\n                return;\r\n            }\r\n\r\n            totalPagarInput.value = formatearValor(e.target.value);\r\n            const total_pagar = parseFloat((totalPagarInput.value).replace(/,/g, ''));\r\n\r\n            let total = 0;\r\n            productosArray.forEach(producto => {\r\n                total = total + producto.cantidad * producto.precio_original;\r\n\r\n            })\r\n            const descuento = 100 - total_pagar * 100 / total;\r\n\r\n            descuentoInput.value = !isNaN(Number(descuento.toFixed(2))) ? Number(descuento.toFixed(2)) + '%' : 0 + '%';\r\n\r\n\r\n            //lenamos el objeto que tien la infomracion del pago \r\n            valoresObj.total_pagar = total_pagar;\r\n            valoresObj.descuento = descuento;\r\n\r\n            resetarInputsMetodoPago();\r\n\r\n\r\n        }\r\n\r\n\r\n        //modificar valores al cambiar la cantidad\r\n        function modificarTotalPorProducto(parametro, id, aux) {\r\n            idAnterior = id;\r\n            if (aux) {\r\n                focusCantidad = true;\r\n                productosArray = productosArray.map(producto => {\r\n                    if (producto.id == id) {\r\n\r\n                        if (parametro < 0) {\r\n\r\n                            parametro = 0;\r\n                        }\r\n                        return {\r\n                            ...producto,\r\n                            cantidad: parametro,\r\n                            valor_total: parametro * producto.precio_venta,\r\n\r\n                        }\r\n\r\n                    }\r\n                    return producto;\r\n                })\r\n\r\n            } else {\r\n\r\n                focusCantidad = false;\r\n                let nuevo_precio_venta = parseFloat(parametro.replace(/,/g, ''));\r\n                productosArray = productosArray.map(producto => {\r\n                    if (producto.id == id) {\r\n                        if (parametro == '') {\r\n\r\n                            parametro = 0;\r\n                        }\r\n\r\n                        if (!isNaN(nuevo_precio_venta * producto.cantidad)) {\r\n\r\n                            return {\r\n                                ...producto,\r\n                                precio_venta: nuevo_precio_venta,\r\n                                valor_total: nuevo_precio_venta * producto.cantidad\r\n\r\n                            }\r\n\r\n                        } else {\r\n\r\n                            return {\r\n                                ...producto,\r\n                                precio_venta: 0,\r\n                                valor_total: 0\r\n\r\n                            }\r\n                        }\r\n\r\n\r\n                    }\r\n                    return producto;\r\n                })\r\n\r\n            }\r\n\r\n\r\n            mostrarProductos();\r\n        }\r\n\r\n\r\n        //eliminar producto de la venta\r\n\r\n        function eliminarProducto(idProducto) {\r\n\r\n            productosArray = productosArray.filter(producto => {\r\n                return producto.id != idProducto\r\n            })\r\n\r\n            mostrarProductos();\r\n        }\r\n\r\n        async function consultarInfoProducto(id) {\r\n\r\n            try {\r\n                const respuesta = await fetch(`${location.origin}/api/producto?id=${id}`);\r\n                const resultado = await respuesta.json();\r\n\r\n\r\n\r\n                if (resultado.stock > 0) {\r\n                    const { id, nombre, precio_venta, stock, precio_compra } = resultado;\r\n                    productoObj = {\r\n                        id,\r\n                        nombre,\r\n                        cantidad: 1,\r\n                        precio_compra,\r\n                        precio_venta,\r\n                        // precio: parseFloat(precio_venta),    //esto lo quitaos porque es paramercado libre\r\n                        precio_original: parseFloat(precio_venta),\r\n                        valor_total: precio_venta,\r\n                        stock\r\n                    }\r\n\r\n                    const existe_producto = productosArray.some(producto => producto.id == id);\r\n\r\n                    if (!existe_producto) {\r\n                        productosArray.push(productoObj);\r\n                        mostrarProductos();\r\n                    } else {\r\n                        Swal.fire({\r\n                            icon: 'warning',\r\n\r\n                            text: 'el producto ya ha sido agregado anteriormente',\r\n\r\n                        })\r\n                    }\r\n                } else {\r\n                    Swal.fire({\r\n                        icon: 'error',\r\n\r\n                        text: 'Producto no disponible en inventario',\r\n\r\n                    })\r\n                }\r\n\r\n            } catch (error) {\r\n\r\n            }\r\n\r\n            // console.log(productosArray)\r\n        }\r\n        function formatearValor(valor) {\r\n\r\n            let valor_sin_formato = parseFloat(valor.replace(/,/g, ''));\r\n            if (isNaN(valor_sin_formato)) {\r\n                valor_sin_formato = '';\r\n            }\r\n            const valor_formateado = valor_sin_formato.toLocaleString('en');\r\n            return valor_formateado;\r\n        }\r\n        function limpiarHtml(referencia) {\r\n            while (referencia.firstChild) {\r\n                referencia.removeChild(referencia.firstChild)\r\n            }\r\n        }\r\n        function eliminarToastAnterior() {\r\n            if (document.querySelector('#toastsContainerTopRight')) {\r\n                document.querySelector('#toastsContainerTopRight').remove()\r\n            }\r\n        }\r\n        async function consultarCLientes() {\r\n            limpiarHtml(selectClientes);\r\n\r\n            try {\r\n                const respuesta = await fetch(`${location.origin}/api/clientes-ventas`);\r\n                const resultado = await respuesta.json();\r\n\r\n                // llenarPrimerOption(selectCategorias);\r\n                const opcionDisabled = document.createElement('OPTION');\r\n                opcionDisabled.textContent = '--seleccione un cliente--';\r\n                opcionDisabled.value = \"0\";\r\n\r\n\r\n\r\n\r\n\r\n                resultado.forEach(cliente => {\r\n\r\n                    const opcion = document.createElement('OPTION');\r\n                    opcion.value = cliente.id;\r\n                    opcion.textContent = cliente.nombre;\r\n\r\n                    if (cliente.id == clienteId) {\r\n\r\n                        opcion.selected = true;\r\n                    }\r\n\r\n                    selectClientes.appendChild(opcion)\r\n\r\n                });\r\n\r\n                $('#selectClientes').select2()\r\n                $('.select2bs4').select2({\r\n                    theme: 'bootstrap4'\r\n                })\r\n                consultarInfoCliente(clienteId);\r\n            } catch (error) {\r\n\r\n            }\r\n            $('#selectProductos').select2()\r\n            $('.select2bs4').select2({\r\n                theme: 'bootstrap4'\r\n            })\r\n\r\n\r\n        }\r\n    }\r\n})();\r\n\r\n\r\n","(function () {\r\n    const mercadolibre = document.querySelector('#mercadolibre');\r\n    const ventas = document.querySelector('#ventas');\r\n    if (mercadolibre || ventas) {\r\n\r\n        $('#tabla').on('click', '#info', function (e) {\r\n            const ventaId = e.currentTarget.dataset.ventaId;\r\n \r\n            consultarInfoVenta(ventaId);\r\n        })\r\n        async function consultarInfoVenta(id) {\r\n         \r\n            $('#modal-info').modal('show');\r\n\r\n            const url = `${location.origin}/api/venta?id=${id}`;\r\n            try {\r\n                const respuesta = await fetch(url);\r\n                const resultado = await respuesta.json();\r\n            \r\n                mostrarInfoVenta(resultado);\r\n            } catch (error) {\r\n\r\n            }\r\n\r\n\r\n\r\n        }\r\n\r\n        function mostrarInfoVenta(resultado) {\r\n            const { productos_venta , venta} = resultado\r\n      \r\n            const codigoVenta = document.querySelector('#codigo-venta');\r\n            const clienteVenta = document.querySelector('#cliente-venta');\r\n            const fechaVenta = document.querySelector('#fecha-venta');\r\n\r\n            const totalVenta = document.querySelector('#total-venta');\r\n            const total = document.querySelector('#total'); //total de la venta ya aplicando el descuento\r\n            const totalSInDescuento = document.querySelector('#total-sin-descuento');  //total de la venta sin descuento \r\n            const recaudoVenta = document.querySelector('#recaudo-venta');\r\n            const saldoVenta = document.querySelector('#saldo-venta');\r\n            const metodoVenta = document.querySelector('#metodo-venta');\r\n            const estadoVenta = document.querySelector('#estado-venta');\r\n            \r\n            codigoVenta.textContent = venta.codigo\r\n            clienteVenta.textContent = venta.nombre_cliente\r\n            fechaVenta.textContent = venta.fecha\r\n            totalVenta.textContent = (parseFloat(venta.total_factura)).toLocaleString('en');\r\n            total.textContent = (parseFloat(venta.total)).toLocaleString('en');\r\n            totalSInDescuento.textContent = (parseFloat(venta.descuento)).toLocaleString('en')+\"%\";\r\n            recaudoVenta.textContent = (parseFloat(venta.recaudo)).toLocaleString('en');\r\n            saldoVenta.textContent = (parseFloat(venta.total_factura - venta.recaudo)).toLocaleString('en');\r\n         \r\n         \r\n            if(venta.metodo_pago==2){\r\n                metodoVenta.textContent = 'Fiado'\r\n            }\r\n            // if(venta.metodo_pago==3){\r\n            //     metodoVenta.textContent = 'Mercad Libre'\r\n            // }\r\n            if(venta.metodo_pago==1){\r\n                metodoVenta.textContent = 'De Contado'\r\n            }\r\n            if(estadoVenta.classList.contains('text-danger')){\r\n                estadoVenta.classList.remove('text-danger')\r\n            }\r\n            if(estadoVenta.classList.contains('text-success')){\r\n                estadoVenta.classList.remove('text-success')\r\n            }\r\n            if(venta.pagado==0){\r\n                estadoVenta.textContent = 'Pendiente'\r\n                estadoVenta.classList.add('text-danger')\r\n            }else{\r\n                estadoVenta.textContent = 'Pagado'\r\n                estadoVenta.classList.add('text-success')\r\n            }\r\n\r\n            \r\n            const bodyProductos = document.querySelector('#body-productos-venta');\r\n            limpiarHtml(bodyProductos);\r\n\r\n         \r\n\r\n         \r\n            productos_venta.forEach(producto => {\r\n                \r\n                const { nombre, cantidad, precio_factura } = producto\r\n                const tr = document.createElement('TR');\r\n                const tdNombre = document.createElement('td');\r\n                tdNombre.textContent = nombre;\r\n                const tdCantidad = document.createElement('td')\r\n                tdCantidad.textContent = cantidad;\r\n                const tdPrecio = document.createElement('td');\r\n                tdPrecio.textContent = (parseFloat(precio_factura)).toLocaleString('en');\r\n                const tdSubTotal = document.createElement('td');\r\n                tdSubTotal.textContent = (parseFloat(precio_factura * cantidad)).toLocaleString('en');\r\n\r\n\r\n                tr.appendChild(tdNombre)\r\n                tr.appendChild(tdCantidad)\r\n                tr.appendChild(tdPrecio)\r\n                tr.appendChild(tdSubTotal)\r\n\r\n                bodyProductos.appendChild(tr);\r\n            })\r\n            \r\n        }\r\n        function limpiarHtml(referencia) {\r\n\r\n            while (referencia.firstChild) {\r\n                referencia.removeChild(referencia.firstChild)\r\n            }\r\n        }\r\n    }\r\n})();","(function () {\r\n  const reporte = document.querySelector('#reportes');\r\n  if (reporte) {\r\n\r\n    //mostrarGraficos();\r\n\r\n    function mostrarGraficos() {\r\n\r\n      var ticksStyle = {\r\n        fontColor: '#495057',\r\n        fontStyle: 'bold'\r\n      }\r\n\r\n      var mode = 'index'\r\n      var intersect = true\r\n\r\n\r\n      var $ultimo_year = $('#ultimo-year')\r\n      // eslint-disable-next-line no-unused-vars\r\n      var ultimo_year = new Chart($ultimo_year, {\r\n        type: 'bar',\r\n        data: {\r\n          labels: ['JUN', 'JUL', 'AUG', 'SEP', 'OCT', 'NOV', 'DEC'],\r\n          datasets: [\r\n            {\r\n              backgroundColor: '#007bff',\r\n              borderColor: '#007bff',\r\n              data: [1000, 2000, 3000, 2500, 2700, 2500, 3000]\r\n            },\r\n            {\r\n              backgroundColor: '#ced4da',\r\n              borderColor: '#ced4da',\r\n              data: [700, 1700, 2700, 2000, 1800, 1500, 2000]\r\n            }\r\n          ]\r\n        },\r\n        options: {\r\n          maintainAspectRatio: false,\r\n          tooltips: {\r\n            mode: mode,\r\n            intersect: intersect\r\n          },\r\n          hover: {\r\n            mode: mode,\r\n            intersect: intersect\r\n          },\r\n          legend: {\r\n            display: false\r\n          },\r\n          scales: {\r\n            yAxes: [{\r\n              // display: false,\r\n              gridLines: {\r\n                display: true,\r\n                lineWidth: '4px',\r\n                color: 'rgba(0, 0, 0, .2)',\r\n                zeroLineColor: 'transparent'\r\n              },\r\n              ticks: $.extend({\r\n                beginAtZero: true,\r\n\r\n                // Include a dollar sign in the ticks\r\n                callback: function (value) {\r\n                  if (value >= 1000) {\r\n                    value /= 1000\r\n                    value += 'k'\r\n                  }\r\n\r\n                  return '$' + value\r\n                }\r\n              }, ticksStyle)\r\n            }],\r\n            xAxes: [{\r\n              display: true,\r\n              gridLines: {\r\n                display: false\r\n              },\r\n              ticks: ticksStyle\r\n            }]\r\n          }\r\n        }\r\n      })\r\n\r\n      var $ultima_semana = $('#ultima-semana')\r\n      // eslint-disable-next-line no-unused-vars\r\n      var ultima_semana = new Chart($ultima_semana, {\r\n        data: {\r\n          labels: ['18th', '20th', '22nd', '24th', '26th', '28th', '30th'],\r\n          datasets: [{\r\n            type: 'line',\r\n            data: [100, 120, 170, 167, 180, 177, 160],\r\n            backgroundColor: 'transparent',\r\n            borderColor: '#007bff',\r\n            pointBorderColor: '#007bff',\r\n            pointBackgroundColor: '#007bff',\r\n            fill: false\r\n            // pointHoverBackgroundColor: '#007bff',\r\n            // pointHoverBorderColor    : '#007bff'\r\n          },\r\n          {\r\n            type: 'line',\r\n            data: [60, 80, 70, 67, 80, 77, 100],\r\n            backgroundColor: 'tansparent',\r\n            borderColor: '#ced4da',\r\n            pointBorderColor: '#ced4da',\r\n            pointBackgroundColor: '#ced4da',\r\n            fill: false\r\n            // pointHoverBackgroundColor: '#ced4da',\r\n            // pointHoverBorderColor    : '#ced4da'\r\n          }]\r\n        },\r\n        options: {\r\n          maintainAspectRatio: false,\r\n          tooltips: {\r\n            mode: mode,\r\n            intersect: intersect\r\n          },\r\n          hover: {\r\n            mode: mode,\r\n            intersect: intersect\r\n          },\r\n          legend: {\r\n            display: false\r\n          },\r\n          scales: {\r\n            yAxes: [{\r\n              // display: false,\r\n              gridLines: {\r\n                display: true,\r\n                lineWidth: '4px',\r\n                color: 'rgba(0, 0, 0, .2)',\r\n                zeroLineColor: 'transparent'\r\n              },\r\n              ticks: $.extend({\r\n                beginAtZero: true,\r\n                suggestedMax: 200\r\n              }, ticksStyle)\r\n            }],\r\n            xAxes: [{\r\n              display: true,\r\n              gridLines: {\r\n                display: false\r\n              },\r\n              ticks: ticksStyle\r\n            }]\r\n          }\r\n        }\r\n      })\r\n\r\n      var $ultimo_mes = $('#ultimo-mes')\r\n      // eslint-disable-next-line no-unused-vars\r\n      var ultimo_mes = new Chart($ultimo_mes, {\r\n        data: {\r\n          labels: ['18th', '20th', '22nd', '24th', '26th', '28th', '30th'],\r\n          datasets: [{\r\n            type: 'line',\r\n            data: [100, 120, 170, 167, 180, 177, 160],\r\n            backgroundColor: 'transparent',\r\n            borderColor: '#007bff',\r\n            pointBorderColor: '#007bff',\r\n            pointBackgroundColor: '#007bff',\r\n            fill: false\r\n            // pointHoverBackgroundColor: '#007bff',\r\n            // pointHoverBorderColor    : '#007bff'\r\n          },\r\n          {\r\n            type: 'line',\r\n            data: [60, 80, 70, 67, 80, 77, 100],\r\n            backgroundColor: 'tansparent',\r\n            borderColor: '#ced4da',\r\n            pointBorderColor: '#ced4da',\r\n            pointBackgroundColor: '#ced4da',\r\n            fill: false\r\n            // pointHoverBackgroundColor: '#ced4da',\r\n            // pointHoverBorderColor    : '#ced4da'\r\n          }]\r\n        },\r\n        options: {\r\n          maintainAspectRatio: false,\r\n          tooltips: {\r\n            mode: mode,\r\n            intersect: intersect\r\n          },\r\n          hover: {\r\n            mode: mode,\r\n            intersect: intersect\r\n          },\r\n          legend: {\r\n            display: false\r\n          },\r\n          scales: {\r\n            yAxes: [{\r\n              // display: false,\r\n              gridLines: {\r\n                display: true,\r\n                lineWidth: '4px',\r\n                color: 'rgba(0, 0, 0, .2)',\r\n                zeroLineColor: 'transparent'\r\n              },\r\n              ticks: $.extend({\r\n                beginAtZero: true,\r\n                suggestedMax: 200\r\n              }, ticksStyle)\r\n            }],\r\n            xAxes: [{\r\n              display: true,\r\n              gridLines: {\r\n                display: false\r\n              },\r\n              ticks: ticksStyle\r\n            }]\r\n          }\r\n        }\r\n      })\r\n\r\n    }\r\n\r\n\r\n\r\n  }\r\n\r\n})();\r\n\r\n// lgtm [js/unused-local-variable]\r\n","(function () {\r\n\r\n\r\n    const reporte = document.querySelector('#reporte');\r\n    if (reporte) {\r\n        const total_ventas = document.querySelector('#reporte_total_ventas')\r\n        const total_recuados = document.querySelector('#reporte_total_recaudos')\r\n        const costos = document.querySelector('#reporte_costos')\r\n        const ganancia_no_realizada = document.querySelector('#reporte_ganancia_no_realizada')\r\n        const ganancia_realizada = document.querySelector('#reporte_ganancia_realizada')\r\n        const inventario = document.querySelector('#reporte_inventario')\r\n        const numero_ventas = document.querySelector('#reporte_numero_ventas')\r\n        const numero_fiados = document.querySelector('#reporte_numero_fiados')\r\n        const numero_pagos = document.querySelector('#reporte_numero_pagos')\r\n        const numero_cajas = document.querySelector('#reporte_numero_cajas')\r\n        const numero_productos = document.querySelector('#reporte_numero_productos')\r\n        const numero_clientes = document.querySelector('#reporte_numero_clientes')\r\n        const fecha = document.querySelector('#fecha');\r\n        fecha.addEventListener('input', function (e) {\r\n\r\n            cargarInformacion(e.target.value);\r\n        })\r\n\r\n\r\n        llenarIputFecha();\r\n\r\n        function llenarIputFecha() {\r\n            const fecha_actual_utc = new Date();\r\n\r\n            // Ajustar al huso horario de Colombia (UTC-5)\r\n            const fecha_actual_colombia = new Date(fecha_actual_utc.getTime() - (5 * 60 * 60 * 1000));\r\n\r\n            // Formatear la fecha y asignarla al input\r\n            const fecha_actual_formateada = fecha_actual_colombia.toISOString().slice(0, 10);\r\n            fecha.value = fecha_actual_formateada;\r\n\r\n            // Cargar información con la fecha ajustada\r\n            cargarInformacion(fecha.value);\r\n        }\r\n\r\n\r\n\r\n        function mostrarInfo(resultado) {\r\n            console.log('asdf')\r\n            console.log(resultado)\r\n            total_ventas.textContent = resultado.total_ventas\r\n            total_recuados.textContent = resultado.total_recaudos\r\n            costos.textContent = resultado.costos\r\n            ganancia_no_realizada.textContent = resultado.ganancia_no_realizada\r\n            ganancia_realizada.textContent = resultado.ganancia_realizada\r\n            inventario.textContent = resultado.inventario\r\n            numero_ventas.textContent = resultado.numero_ventas\r\n            numero_fiados.textContent = resultado.numero_fiados\r\n            numero_pagos.textContent = resultado.numero_pagos\r\n            numero_cajas.textContent = resultado.numero_cajas\r\n            numero_productos.textContent = resultado.numero_productos\r\n            numero_clientes.textContent = resultado.numero_clientes\r\n\r\n        }\r\n\r\n        async function cargarInformacion(fecha) {\r\n\r\n            const datos = new FormData();\r\n            datos.append('fecha', fecha);\r\n            const url = `${location.origin}/api/info-general`;\r\n\r\n            try {\r\n                const respuesta = await fetch(url, {\r\n                    method: 'POST',\r\n                    body: datos\r\n                });\r\n                const resultado = await respuesta.json();\r\n                console.log(resultado)\r\n                // console.log(resultado);\r\n                mostrarInfo(resultado);\r\n            } catch (error) {\r\n                console.log(error)\r\n            }\r\n        }\r\n    }\r\n})();","(function () {\r\n    const ventas = document.querySelector('#ventas');\r\n    if (ventas) {\r\n        let tablaVentas;\r\n\r\n        $('#tabla').on('click', '#editar', function (e) {\r\n\r\n\r\n            id = e.currentTarget.dataset.ventaId;\r\n\r\n\r\n            revisarPagosAsociados(id);\r\n\r\n\r\n            // accionesModal();\r\n        })\r\n        $('#tabla').on('click', '#eliminar', function (e) {\r\n            const ventaId = e.currentTarget.dataset.ventaId;\r\n\r\n            alertaEliminarVenta(ventaId, e);\r\n        })\r\n        $('#tabla').on('click', '#imprimir', function (e) {\r\n            const ventaId = e.currentTarget.dataset.ventaId;\r\n            imprimirVenta(ventaId);\r\n        })\r\n\r\n        async function imprimirVenta(id) {\r\n            const datos = new FormData();\r\n            datos.append('id', id);\r\n            const url = `${location.origin}/api/imprimir-venta?id=${id}`;\r\n            window.open(url, \"_blank\");\r\n\r\n            // try {\r\n            //     const respuesta = await fetch(url)\r\n            //     const resultado = await respuesta.json();\r\n            //     console.log(resultado)\r\n            // } catch (error) {\r\n            //     console.log(error)\r\n            // }\r\n\r\n\r\n\r\n        }\r\n\r\n\r\n        async function revisarPagosAsociados(id) {\r\n\r\n            const datos = new FormData();\r\n\r\n            datos.append('id', id);\r\n            const url = `${location.origin}/api/revisar-venta`;\r\n            try {\r\n                const respuesta = await fetch(url, {\r\n                    method: 'POST',\r\n                    body: datos\r\n                })\r\n\r\n                const resultado = await respuesta.json();\r\n\r\n\r\n\r\n                eliminarToastAnterior();\r\n\r\n                if (resultado.type == 'error') {\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n\r\n                        body: resultado.msg\r\n                    })\r\n                } else {\r\n\r\n                    const idString = id.toString();\r\n                    window.location = `/crear-venta?id=${btoa(idString)}`;\r\n\r\n                }\r\n\r\n                setTimeout(() => {\r\n                    eliminarToastAnterior();\r\n                }, 8000)\r\n            } catch (error) {\r\n                console.log(error)\r\n            }\r\n        }\r\n\r\n        function alertaEliminarVenta(id, e) {\r\n\r\n            const numero_venta = e.currentTarget.parentElement.parentElement.parentElement.childNodes[1].textContent;\r\n\r\n\r\n            Swal.fire({\r\n                icon: 'warning',\r\n                html: `<h2 class=\"\">esta seguro de eliminar la venta numero <span class=\"font-weight-bold\"> ${numero_venta} </span>?</h2><br><p>Esta acción no se puede deshacer</p>`,\r\n\r\n                showCancelButton: true,\r\n                confirmButtonText: 'Eliminar',\r\n                cancelButtonText: `Cancelar`,\r\n\r\n\r\n            }).then(result => {\r\n                if (result.isConfirmed) {\r\n                    eliminarVenta(id)\r\n                }\r\n            })\r\n        }\r\n\r\n        async function eliminarVenta(id) {\r\n            const datos = new FormData();\r\n            datos.append('id', id);\r\n\r\n            url = `${location.origin}/api/venta/eliminar`;\r\n            try {\r\n                const respuesta = await fetch(url, {\r\n                    body: datos,\r\n                    method: 'POST'\r\n                })\r\n                const resultado = await respuesta.json();\r\n\r\n\r\n\r\n                eliminarToastAnterior();\r\n\r\n                if (resultado.type == 'error') {\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-danger',\r\n                        title: 'Error',\r\n\r\n                        body: resultado.msg\r\n                    })\r\n                } else {\r\n\r\n                    $(document).Toasts('create', {\r\n                        class: 'bg-azul text-blanco',\r\n                        title: 'Completado',\r\n\r\n                        body: resultado.msg\r\n                    })\r\n\r\n                    setTimeout(() => {\r\n                        eliminarToastAnterior();\r\n                    }, 8000)\r\n\r\n\r\n                    tablaVentas.ajax.reload();\r\n                }\r\n            } catch (error) {\r\n\r\n            }\r\n        }\r\n\r\n        mostrarVentas()\r\n        // function mostrarVentas(){\r\n\r\n        //     $(\"#tabla\").dataTable().fnDestroy(); //por si me da error de reinicializar\r\n\r\n        //     tablaVentas = $('#tabla').DataTable({\r\n        //         ajax: '/api/ventas',\r\n        //         \"deferRender\":true,\r\n        //         \"retrieve\":true,\r\n        //         \"proccesing\":true,\r\n        //         responsive:true,\r\n\r\n        //     });\r\n\r\n\r\n\r\n        // }  \r\n\r\n        function mostrarVentas() {\r\n            if ($.fn.DataTable.isDataTable('#tabla')) {\r\n                $('#tabla').DataTable().destroy();\r\n            }\r\n         \r\n\r\n            tablaVentas = $('#tabla').DataTable({\r\n                processing: true,\r\n                serverSide: true,\r\n                ajax: {\r\n                    url: '/api/ventas',\r\n                    type: 'GET'\r\n                },\r\n                responsive: true,\r\n\r\n                order: [[1, 'desc']],\r\n                language: {\r\n                    \"decimal\": \"\",\r\n                    \"emptyTable\": \"No hay información\",\r\n                    \"info\": \"Mostrando _START_ a _END_ de _TOTAL_ Entradas\",\r\n                    \"infoEmpty\": \"Mostrando 0 a 0 de 0 Entradas\",\r\n                    \"infoFiltered\": \"(filtrado de _MAX_ entradas totales)\",\r\n                    \"lengthMenu\": \"Mostrar _MENU_ Entradas\",\r\n                    \"loadingRecords\": \"Cargando...\",\r\n                    \"processing\": \"Procesando...\",\r\n                    \"search\": \"Buscar:\",\r\n                    \"zeroRecords\": \"No se encontraron resultados\",\r\n                    \"paginate\": {\r\n                        \"first\": \"Primero\",\r\n                        \"last\": \"Último\",\r\n                        \"next\": \"Siguiente\",\r\n                        \"previous\": \"Anterior\"\r\n                    }\r\n                }\r\n            \r\n            });\r\n        }\r\n\r\n\r\n        function eliminarToastAnterior() {\r\n            if (document.querySelector('#toastsContainerTopRight')) {\r\n                document.querySelector('#toastsContainerTopRight').remove()\r\n            }\r\n        }\r\n    }\r\n})();"]}